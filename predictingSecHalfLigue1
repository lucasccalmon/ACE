{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyPIZX80xb1TQ2hexIP4gLN7"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"id":"OhECiaz-NNRC","executionInfo":{"status":"ok","timestamp":1737842378866,"user_tz":180,"elapsed":9515,"user":{"displayName":"Lucas Calmon","userId":"09752934338034803828"}}},"outputs":[],"source":["import pandas as pd\n","import numpy as np\n","import statsmodels.formula.api as smf\n","import matplotlib.pyplot as plt\n","import seaborn as sns"]},{"cell_type":"code","source":["df = pd.read_html(\"https://fbref.com/pt/comps/13/2023-2024/cronograma/2023-2024-Ligue-1-Resultados-e-Calendarios\")[0]\n","pd.set_option(\"display.max_columns\", None)\n","pd.set_option('display.max_rows', 10)\n","print(df)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"E-zg3_SINq5s","executionInfo":{"status":"ok","timestamp":1737842382975,"user_tz":180,"elapsed":4111,"user":{"displayName":"Lucas Calmon","userId":"09752934338034803828"}},"outputId":"fbc9a053-368a-471f-9c11-fa6747b9b39e"},"execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["      Sem  Dia        Data Horário    Em casa   xG Resultado  xG.1  \\\n","0     1.0  sex  2023-08-11   21:00       Nice  1.2       1–1   1.3   \n","1     1.0  sáb  2023-08-12   17:00  Marseille  1.0       2–1   0.8   \n","2     1.0  sáb  2023-08-12   21:00  Paris S-G  1.2       0–0   0.1   \n","3     1.0  dom  2023-08-13   13:00      Brest  2.5       3–2   0.7   \n","4     1.0  dom  2023-08-13   15:00     Nantes  1.1       1–2   1.1   \n","..    ...  ...         ...     ...        ...  ...       ...   ...   \n","339  34.0  dom  2024-05-19   21:00       Lyon  2.8       2–1   1.1   \n","340  34.0  dom  2024-05-19   21:00       Lens  5.2       2–2   0.8   \n","341  34.0  dom  2024-05-19   21:00    Lorient  4.2       5–0   0.8   \n","342  34.0  dom  2024-05-19   21:00     Monaco  1.5       4–0   1.0   \n","343  34.0  dom  2024-05-19   21:00      Lille  1.2       2–2   0.9   \n","\n","         Visitante  Público                                    Local  \\\n","0            Lille   29.436                            Stade de Nice   \n","1            Reims   63.787                         Orange Vélodrome   \n","2          Lorient   47.000                         Parc des Princes   \n","3             Lens   15.085                     Stade Francis-Le Blé   \n","4         Toulouse   30.578  Stade de la Beaujoire - Louis Fonteneau   \n","..             ...      ...                                      ...   \n","339     Strasbourg   57.027                         Groupama Stadium   \n","340    Montpellier   37.433                   Stade Bollaert-Delelis   \n","341  Clermont Foot   16.176                        Stade du Moustoir   \n","342         Nantes    7.343                           Stade Louis II   \n","343           Nice   45.488    Decathlon Arena - Stade Pierre-Mauroy   \n","\n","              Árbitro  Relatório da Partida  Notas  \n","0      Benoît Bastien  Relatório da Partida    NaN  \n","1     Eric Wattellier  Relatório da Partida    NaN  \n","2     Bastien Dechepy  Relatório da Partida    NaN  \n","3     Jérémie Pignard  Relatório da Partida    NaN  \n","4       Willy Delajod  Relatório da Partida    NaN  \n","..                ...                   ...    ...  \n","339   Eric Wattellier  Relatório da Partida    NaN  \n","340    Thomas Léonard  Relatório da Partida    NaN  \n","341    Clément Turpin  Relatório da Partida    NaN  \n","342  Romain Lissorgue  Relatório da Partida    NaN  \n","343     Willy Delajod  Relatório da Partida    NaN  \n","\n","[344 rows x 14 columns]\n"]}]},{"cell_type":"code","source":["resultados = df[['Sem', 'Data', 'Em casa', 'Resultado', 'Visitante']]\n","resultados = resultados.dropna(how='all')\n","resultados"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"7UBZqBZpNs6e","executionInfo":{"status":"ok","timestamp":1737842383579,"user_tz":180,"elapsed":606,"user":{"displayName":"Lucas Calmon","userId":"09752934338034803828"}},"outputId":"8ec166dc-b6f2-4428-a8b6-f04146f06be7"},"execution_count":3,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      Sem        Data    Em casa Resultado      Visitante\n","0     1.0  2023-08-11       Nice       1–1          Lille\n","1     1.0  2023-08-12  Marseille       2–1          Reims\n","2     1.0  2023-08-12  Paris S-G       0–0        Lorient\n","3     1.0  2023-08-13      Brest       3–2           Lens\n","4     1.0  2023-08-13     Nantes       1–2       Toulouse\n","..    ...         ...        ...       ...            ...\n","339  34.0  2024-05-19       Lyon       2–1     Strasbourg\n","340  34.0  2024-05-19       Lens       2–2    Montpellier\n","341  34.0  2024-05-19    Lorient       5–0  Clermont Foot\n","342  34.0  2024-05-19     Monaco       4–0         Nantes\n","343  34.0  2024-05-19      Lille       2–2           Nice\n","\n","[306 rows x 5 columns]"],"text/html":["\n","  <div id=\"df-7caf07bd-a2a7-450a-83e8-6c9944ed4246\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Sem</th>\n","      <th>Data</th>\n","      <th>Em casa</th>\n","      <th>Resultado</th>\n","      <th>Visitante</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1.0</td>\n","      <td>2023-08-11</td>\n","      <td>Nice</td>\n","      <td>1–1</td>\n","      <td>Lille</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1.0</td>\n","      <td>2023-08-12</td>\n","      <td>Marseille</td>\n","      <td>2–1</td>\n","      <td>Reims</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1.0</td>\n","      <td>2023-08-12</td>\n","      <td>Paris S-G</td>\n","      <td>0–0</td>\n","      <td>Lorient</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1.0</td>\n","      <td>2023-08-13</td>\n","      <td>Brest</td>\n","      <td>3–2</td>\n","      <td>Lens</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1.0</td>\n","      <td>2023-08-13</td>\n","      <td>Nantes</td>\n","      <td>1–2</td>\n","      <td>Toulouse</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>339</th>\n","      <td>34.0</td>\n","      <td>2024-05-19</td>\n","      <td>Lyon</td>\n","      <td>2–1</td>\n","      <td>Strasbourg</td>\n","    </tr>\n","    <tr>\n","      <th>340</th>\n","      <td>34.0</td>\n","      <td>2024-05-19</td>\n","      <td>Lens</td>\n","      <td>2–2</td>\n","      <td>Montpellier</td>\n","    </tr>\n","    <tr>\n","      <th>341</th>\n","      <td>34.0</td>\n","      <td>2024-05-19</td>\n","      <td>Lorient</td>\n","      <td>5–0</td>\n","      <td>Clermont Foot</td>\n","    </tr>\n","    <tr>\n","      <th>342</th>\n","      <td>34.0</td>\n","      <td>2024-05-19</td>\n","      <td>Monaco</td>\n","      <td>4–0</td>\n","      <td>Nantes</td>\n","    </tr>\n","    <tr>\n","      <th>343</th>\n","      <td>34.0</td>\n","      <td>2024-05-19</td>\n","      <td>Lille</td>\n","      <td>2–2</td>\n","      <td>Nice</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>306 rows × 5 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7caf07bd-a2a7-450a-83e8-6c9944ed4246')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-7caf07bd-a2a7-450a-83e8-6c9944ed4246 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-7caf07bd-a2a7-450a-83e8-6c9944ed4246');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-84d65a22-7609-45bc-ad47-1f8f7e01db71\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-84d65a22-7609-45bc-ad47-1f8f7e01db71')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-84d65a22-7609-45bc-ad47-1f8f7e01db71 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_319e087d-6705-4c8e-8e0e-6b7820df6933\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('resultados')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_319e087d-6705-4c8e-8e0e-6b7820df6933 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('resultados');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"resultados","summary":"{\n  \"name\": \"resultados\",\n  \"rows\": 306,\n  \"fields\": [\n    {\n      \"column\": \"Sem\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 9.82677840243138,\n        \"min\": 1.0,\n        \"max\": 34.0,\n        \"num_unique_values\": 34,\n        \"samples\": [\n          16.0,\n          20.0,\n          28.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Data\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"num_unique_values\": 103,\n        \"samples\": [\n          \"2023-10-29\",\n          \"2024-02-18\",\n          \"2024-02-09\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Em casa\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 18,\n        \"samples\": [\n          \"Nice\",\n          \"Marseille\",\n          \"Strasbourg\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Resultado\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 30,\n        \"samples\": [\n          \"4\\u20135\",\n          \"4\\u20131\",\n          \"1\\u20135\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Visitante\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 18,\n        \"samples\": [\n          \"Lille\",\n          \"Reims\",\n          \"Lyon\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":3}]},{"cell_type":"code","source":["placar = resultados.loc[:,\"Resultado\"].str.split(\"–\", n = 1, expand = True)\n","print(placar)\n","resultados.loc[:,\"CasaResul\"] = placar.loc[:,0]\n","resultados.loc[:,\"VisiResul\"] = placar.loc[:,1]\n","resultados = resultados.drop(columns=[\"Resultado\"])\n","resultados"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":667},"id":"X-6DcXCUNwDB","executionInfo":{"status":"ok","timestamp":1737842383579,"user_tz":180,"elapsed":28,"user":{"displayName":"Lucas Calmon","userId":"09752934338034803828"}},"outputId":"fb1a7937-4f4d-42ee-e0d5-8976681ea197"},"execution_count":4,"outputs":[{"output_type":"stream","name":"stdout","text":["     0  1\n","0    1  1\n","1    2  1\n","2    0  0\n","3    3  2\n","4    1  2\n","..  .. ..\n","339  2  1\n","340  2  2\n","341  5  0\n","342  4  0\n","343  2  2\n","\n","[306 rows x 2 columns]\n"]},{"output_type":"execute_result","data":{"text/plain":["      Sem        Data    Em casa      Visitante CasaResul VisiResul\n","0     1.0  2023-08-11       Nice          Lille         1         1\n","1     1.0  2023-08-12  Marseille          Reims         2         1\n","2     1.0  2023-08-12  Paris S-G        Lorient         0         0\n","3     1.0  2023-08-13      Brest           Lens         3         2\n","4     1.0  2023-08-13     Nantes       Toulouse         1         2\n","..    ...         ...        ...            ...       ...       ...\n","339  34.0  2024-05-19       Lyon     Strasbourg         2         1\n","340  34.0  2024-05-19       Lens    Montpellier         2         2\n","341  34.0  2024-05-19    Lorient  Clermont Foot         5         0\n","342  34.0  2024-05-19     Monaco         Nantes         4         0\n","343  34.0  2024-05-19      Lille           Nice         2         2\n","\n","[306 rows x 6 columns]"],"text/html":["\n","  <div id=\"df-759dbe30-1368-4593-8e0e-4c182cc094f1\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Sem</th>\n","      <th>Data</th>\n","      <th>Em casa</th>\n","      <th>Visitante</th>\n","      <th>CasaResul</th>\n","      <th>VisiResul</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1.0</td>\n","      <td>2023-08-11</td>\n","      <td>Nice</td>\n","      <td>Lille</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1.0</td>\n","      <td>2023-08-12</td>\n","      <td>Marseille</td>\n","      <td>Reims</td>\n","      <td>2</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1.0</td>\n","      <td>2023-08-12</td>\n","      <td>Paris S-G</td>\n","      <td>Lorient</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1.0</td>\n","      <td>2023-08-13</td>\n","      <td>Brest</td>\n","      <td>Lens</td>\n","      <td>3</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1.0</td>\n","      <td>2023-08-13</td>\n","      <td>Nantes</td>\n","      <td>Toulouse</td>\n","      <td>1</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>339</th>\n","      <td>34.0</td>\n","      <td>2024-05-19</td>\n","      <td>Lyon</td>\n","      <td>Strasbourg</td>\n","      <td>2</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>340</th>\n","      <td>34.0</td>\n","      <td>2024-05-19</td>\n","      <td>Lens</td>\n","      <td>Montpellier</td>\n","      <td>2</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>341</th>\n","      <td>34.0</td>\n","      <td>2024-05-19</td>\n","      <td>Lorient</td>\n","      <td>Clermont Foot</td>\n","      <td>5</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>342</th>\n","      <td>34.0</td>\n","      <td>2024-05-19</td>\n","      <td>Monaco</td>\n","      <td>Nantes</td>\n","      <td>4</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>343</th>\n","      <td>34.0</td>\n","      <td>2024-05-19</td>\n","      <td>Lille</td>\n","      <td>Nice</td>\n","      <td>2</td>\n","      <td>2</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>306 rows × 6 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-759dbe30-1368-4593-8e0e-4c182cc094f1')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-759dbe30-1368-4593-8e0e-4c182cc094f1 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-759dbe30-1368-4593-8e0e-4c182cc094f1');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-f97d8f89-2624-47e9-9e52-595e13c75f4b\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-f97d8f89-2624-47e9-9e52-595e13c75f4b')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-f97d8f89-2624-47e9-9e52-595e13c75f4b button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_9c17b757-ab2e-4aeb-a004-2dabf698fc71\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('resultados')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_9c17b757-ab2e-4aeb-a004-2dabf698fc71 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('resultados');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"resultados","summary":"{\n  \"name\": \"resultados\",\n  \"rows\": 306,\n  \"fields\": [\n    {\n      \"column\": \"Sem\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 9.82677840243138,\n        \"min\": 1.0,\n        \"max\": 34.0,\n        \"num_unique_values\": 34,\n        \"samples\": [\n          16.0,\n          20.0,\n          28.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Data\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"num_unique_values\": 103,\n        \"samples\": [\n          \"2023-10-29\",\n          \"2024-02-18\",\n          \"2024-02-09\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Em casa\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 18,\n        \"samples\": [\n          \"Nice\",\n          \"Marseille\",\n          \"Strasbourg\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Visitante\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 18,\n        \"samples\": [\n          \"Lille\",\n          \"Reims\",\n          \"Lyon\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CasaResul\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 6,\n        \"samples\": [\n          \"1\",\n          \"2\",\n          \"4\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"VisiResul\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 7,\n        \"samples\": [\n          \"1\",\n          \"0\",\n          \"5\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":4}]},{"cell_type":"code","source":["resultados[\"Vencedor\"] = np.where(resultados[\"CasaResul\"] > resultados[\"VisiResul\"], \"C\",\n","                                  np.where(resultados[\"CasaResul\"] < resultados[\"VisiResul\"], \"V\", \"E\"))\n","resultados"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"_RB-bCbcNzfM","executionInfo":{"status":"ok","timestamp":1737842383579,"user_tz":180,"elapsed":26,"user":{"displayName":"Lucas Calmon","userId":"09752934338034803828"}},"outputId":"bd4768bf-5509-4fc7-9826-3c4b853a756d"},"execution_count":5,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      Sem        Data    Em casa      Visitante CasaResul VisiResul Vencedor\n","0     1.0  2023-08-11       Nice          Lille         1         1        E\n","1     1.0  2023-08-12  Marseille          Reims         2         1        C\n","2     1.0  2023-08-12  Paris S-G        Lorient         0         0        E\n","3     1.0  2023-08-13      Brest           Lens         3         2        C\n","4     1.0  2023-08-13     Nantes       Toulouse         1         2        V\n","..    ...         ...        ...            ...       ...       ...      ...\n","339  34.0  2024-05-19       Lyon     Strasbourg         2         1        C\n","340  34.0  2024-05-19       Lens    Montpellier         2         2        E\n","341  34.0  2024-05-19    Lorient  Clermont Foot         5         0        C\n","342  34.0  2024-05-19     Monaco         Nantes         4         0        C\n","343  34.0  2024-05-19      Lille           Nice         2         2        E\n","\n","[306 rows x 7 columns]"],"text/html":["\n","  <div id=\"df-9a71d6fa-f125-43dd-a24b-0bce2b5e7ee4\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Sem</th>\n","      <th>Data</th>\n","      <th>Em casa</th>\n","      <th>Visitante</th>\n","      <th>CasaResul</th>\n","      <th>VisiResul</th>\n","      <th>Vencedor</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1.0</td>\n","      <td>2023-08-11</td>\n","      <td>Nice</td>\n","      <td>Lille</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>E</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1.0</td>\n","      <td>2023-08-12</td>\n","      <td>Marseille</td>\n","      <td>Reims</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>C</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1.0</td>\n","      <td>2023-08-12</td>\n","      <td>Paris S-G</td>\n","      <td>Lorient</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>E</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1.0</td>\n","      <td>2023-08-13</td>\n","      <td>Brest</td>\n","      <td>Lens</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>C</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1.0</td>\n","      <td>2023-08-13</td>\n","      <td>Nantes</td>\n","      <td>Toulouse</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>V</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>339</th>\n","      <td>34.0</td>\n","      <td>2024-05-19</td>\n","      <td>Lyon</td>\n","      <td>Strasbourg</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>C</td>\n","    </tr>\n","    <tr>\n","      <th>340</th>\n","      <td>34.0</td>\n","      <td>2024-05-19</td>\n","      <td>Lens</td>\n","      <td>Montpellier</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>E</td>\n","    </tr>\n","    <tr>\n","      <th>341</th>\n","      <td>34.0</td>\n","      <td>2024-05-19</td>\n","      <td>Lorient</td>\n","      <td>Clermont Foot</td>\n","      <td>5</td>\n","      <td>0</td>\n","      <td>C</td>\n","    </tr>\n","    <tr>\n","      <th>342</th>\n","      <td>34.0</td>\n","      <td>2024-05-19</td>\n","      <td>Monaco</td>\n","      <td>Nantes</td>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>C</td>\n","    </tr>\n","    <tr>\n","      <th>343</th>\n","      <td>34.0</td>\n","      <td>2024-05-19</td>\n","      <td>Lille</td>\n","      <td>Nice</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>E</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>306 rows × 7 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9a71d6fa-f125-43dd-a24b-0bce2b5e7ee4')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-9a71d6fa-f125-43dd-a24b-0bce2b5e7ee4 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-9a71d6fa-f125-43dd-a24b-0bce2b5e7ee4');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-e7f2c8af-2d34-4e2e-9885-26c43e5b18ef\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e7f2c8af-2d34-4e2e-9885-26c43e5b18ef')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-e7f2c8af-2d34-4e2e-9885-26c43e5b18ef button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_7e0b4150-bd0f-4497-a397-54060ec11ece\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('resultados')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_7e0b4150-bd0f-4497-a397-54060ec11ece button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('resultados');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"resultados","summary":"{\n  \"name\": \"resultados\",\n  \"rows\": 306,\n  \"fields\": [\n    {\n      \"column\": \"Sem\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 9.82677840243138,\n        \"min\": 1.0,\n        \"max\": 34.0,\n        \"num_unique_values\": 34,\n        \"samples\": [\n          16.0,\n          20.0,\n          28.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Data\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"num_unique_values\": 103,\n        \"samples\": [\n          \"2023-10-29\",\n          \"2024-02-18\",\n          \"2024-02-09\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Em casa\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 18,\n        \"samples\": [\n          \"Nice\",\n          \"Marseille\",\n          \"Strasbourg\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Visitante\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 18,\n        \"samples\": [\n          \"Lille\",\n          \"Reims\",\n          \"Lyon\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CasaResul\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 6,\n        \"samples\": [\n          \"1\",\n          \"2\",\n          \"4\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"VisiResul\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 7,\n        \"samples\": [\n          \"1\",\n          \"0\",\n          \"5\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Vencedor\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"E\",\n          \"C\",\n          \"V\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["#verificando rodada atrasada\n","resultados[resultados.loc[:,\"Sem\"] == 15]\n","resultados.dtypes\n","print(resultados['CasaResul'].value_counts())\n","#transformar casa resul e visi resul em numeros\n","resultados['CasaResul'] = resultados['CasaResul'].astype(int)\n","resultados['VisiResul'] = resultados['VisiResul'].astype(int)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"uD9SDB4qN0_2","executionInfo":{"status":"ok","timestamp":1737842383579,"user_tz":180,"elapsed":25,"user":{"displayName":"Lucas Calmon","userId":"09752934338034803828"}},"outputId":"fe59391e-7489-4c6a-a01e-743644d7350a"},"execution_count":6,"outputs":[{"output_type":"stream","name":"stdout","text":["CasaResul\n","1    102\n","2     76\n","0     72\n","3     39\n","4     13\n","5      4\n","Name: count, dtype: int64\n"]}]},{"cell_type":"code","source":["resultados['VCasaValor'] = np.where(resultados['Vencedor']=='C',1,np.where(resultados['Vencedor']=='E',0.5,0))\n","resultados['VVisValor'] = np.where(resultados['Vencedor']=='V',1,np.where(resultados['Vencedor']=='E',0.5,0))\n","resultados['count'] = 1"],"metadata":{"id":"P9VkZXlvN2mv","executionInfo":{"status":"ok","timestamp":1737842383834,"user_tz":180,"elapsed":279,"user":{"displayName":"Lucas Calmon","userId":"09752934338034803828"}}},"execution_count":7,"outputs":[]},{"cell_type":"code","source":["primeiro = resultados[resultados.loc[:, \"Sem\"] < 20]\n","segundo = resultados[resultados.loc[:, \"Sem\"] > 19]\n","print(primeiro.shape)\n","print(segundo.shape)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"U25igxIjN4Dz","executionInfo":{"status":"ok","timestamp":1737842383834,"user_tz":180,"elapsed":6,"user":{"displayName":"Lucas Calmon","userId":"09752934338034803828"}},"outputId":"ba3cfe5d-1fb5-450e-8be3-1d2cc60c9736"},"execution_count":8,"outputs":[{"output_type":"stream","name":"stdout","text":["(171, 10)\n","(135, 10)\n"]}]},{"cell_type":"code","source":["PrimeiroTurnoC = primeiro.groupby(['Em casa'])[['count', 'VCasaValor','CasaResul','VisiResul']].sum().reset_index()\n","PrimeiroTurnoC = PrimeiroTurnoC.rename(columns={'Em casa':'time', 'CasaResul': 'GolsCasaC', 'VisiResul': 'GolsVisiC'})\n","PrimeiroTurnoV = primeiro.groupby(['Visitante'])[['count', 'VVisValor','CasaResul','VisiResul']].sum().reset_index()\n","PrimeiroTurnoV = PrimeiroTurnoV.rename(columns={'Visitante':'time', 'CasaResul': 'GolsCasaV', 'VisiResul': 'GolsVisiV'})"],"metadata":{"id":"82Uzww1uN6Gc","executionInfo":{"status":"ok","timestamp":1737842383835,"user_tz":180,"elapsed":4,"user":{"displayName":"Lucas Calmon","userId":"09752934338034803828"}}},"execution_count":9,"outputs":[]},{"cell_type":"code","source":["SegundoTurnoC = segundo.groupby(['Em casa'])[['count', 'VCasaValor','CasaResul','VisiResul']].sum().reset_index()\n","SegundoTurnoC = SegundoTurnoC.rename(columns={'Em casa':'time', 'CasaResul': 'GolsCasaC', 'VisiResul': 'GolsVisiC'})\n","SegundoTurnoV = segundo.groupby(['Visitante'])[['count', 'VVisValor','CasaResul','VisiResul']].sum().reset_index()\n","SegundoTurnoV = SegundoTurnoV.rename(columns={'Visitante':'time', 'CasaResul': 'GolsCasaV', 'VisiResul': 'GolsVisiV'})"],"metadata":{"id":"YohrK4atN7kW","executionInfo":{"status":"ok","timestamp":1737842383835,"user_tz":180,"elapsed":4,"user":{"displayName":"Lucas Calmon","userId":"09752934338034803828"}}},"execution_count":10,"outputs":[]},{"cell_type":"code","source":["PrimeiroTurno = pd.merge(PrimeiroTurnoC, PrimeiroTurnoV, on=['time'])\n","SegundoTurno = pd.merge(SegundoTurnoC, SegundoTurnoV, on=['time'])"],"metadata":{"id":"ph6Faop5N812","executionInfo":{"status":"ok","timestamp":1737842383835,"user_tz":180,"elapsed":3,"user":{"displayName":"Lucas Calmon","userId":"09752934338034803828"}}},"execution_count":11,"outputs":[]},{"cell_type":"code","source":["PrimeiroTurno['W'] = PrimeiroTurno['VCasaValor']+PrimeiroTurno['VVisValor'] #win value\n","PrimeiroTurno['G'] = PrimeiroTurno['count_x'] + PrimeiroTurno['count_y']  #games\n","PrimeiroTurno['GF'] = PrimeiroTurno['GolsCasaC']+PrimeiroTurno['GolsVisiV'] #goals for\n","PrimeiroTurno['GA'] = PrimeiroTurno['GolsVisiC']+PrimeiroTurno['GolsCasaV'] #goals against\n","\n","SegundoTurno['W'] = SegundoTurno['VCasaValor']+SegundoTurno['VVisValor'] #win value\n","SegundoTurno['G'] = SegundoTurno['count_x'] + SegundoTurno['count_y']  #games\n","SegundoTurno['GF'] = SegundoTurno['GolsCasaC']+SegundoTurno['GolsVisiV'] #goals for\n","SegundoTurno['GA'] = SegundoTurno['GolsVisiC']+SegundoTurno['GolsCasaV'] #goals against"],"metadata":{"id":"yNL52klfN9KO","executionInfo":{"status":"ok","timestamp":1737842383835,"user_tz":180,"elapsed":3,"user":{"displayName":"Lucas Calmon","userId":"09752934338034803828"}}},"execution_count":12,"outputs":[]},{"cell_type":"code","source":["PrimeiroTurno['wpc'] = PrimeiroTurno['W']/PrimeiroTurno['G'] #win percentage\n","PrimeiroTurno['pyth'] = PrimeiroTurno['GF']**2/(PrimeiroTurno['GF']**2 + PrimeiroTurno['GA']**2)\n","\n","SegundoTurno['wpc'] = SegundoTurno['W']/SegundoTurno['G'] #win percentage\n","SegundoTurno['pyth'] = SegundoTurno['GF']**2/(SegundoTurno['GF']**2 + SegundoTurno['GA']**2)"],"metadata":{"id":"x7udVn9AN-tK","executionInfo":{"status":"ok","timestamp":1737842383835,"user_tz":180,"elapsed":3,"user":{"displayName":"Lucas Calmon","userId":"09752934338034803828"}}},"execution_count":13,"outputs":[]},{"cell_type":"code","source":["sns.regplot(x=\"pyth\", y = \"wpc\", data = PrimeiroTurno,ci=None)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":466},"id":"T40swRYmOALJ","executionInfo":{"status":"ok","timestamp":1737842385168,"user_tz":180,"elapsed":1336,"user":{"displayName":"Lucas Calmon","userId":"09752934338034803828"}},"outputId":"ebabf9ed-f87d-4952-c273-799537ab3a63"},"execution_count":14,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: xlabel='pyth', ylabel='wpc'>"]},"metadata":{},"execution_count":14},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["sns.regplot(x=\"pyth\", y = \"wpc\", data = SegundoTurno,ci=None)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":466},"id":"9u8m_drpOBhn","executionInfo":{"status":"ok","timestamp":1737842385719,"user_tz":180,"elapsed":555,"user":{"displayName":"Lucas Calmon","userId":"09752934338034803828"}},"outputId":"897376a6-0910-4551-ff53-237e1dbb9aa0"},"execution_count":15,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: xlabel='pyth', ylabel='wpc'>"]},"metadata":{},"execution_count":15},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"iVBORw0KGgoAAAANSUhEUgAAAjcAAAGwCAYAAABVdURTAAAAOnRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjEwLjAsIGh0dHBzOi8vbWF0cGxvdGxpYi5vcmcvlHJYcgAAAAlwSFlzAAAPYQAAD2EBqD+naQAAVhpJREFUeJzt3XtcVHX+P/DXnGEuchkuIldRFLwggpYXFDOspdw0Ky+7Vrtp7mabXb4V2zfvtyxRu7G/Mttas7Zt002lq2lJaZm2lmkgAgreRUBEGIaBmWHO+f2x3wbP4g2YmTMzvJ6PB4+HvOfM8J4Dystz+bxVkiRJICIiIvIRgtINEBERETkTww0RERH5FIYbIiIi8ikMN0RERORTGG6IiIjIpzDcEBERkU9huCEiIiKf4qd0A+4miiLKy8sRFBQElUqldDtERER0DSRJQn19PWJiYiAIVz420+nCTXl5OeLi4pRug4iIiNrh1KlT6N69+xW36XThJigoCMB/do7BYFC4GyIiIroWRqMRcXFxjt/jV9Lpws0vp6IMBgPDDRERkZe5lktKeEExERER+RSGGyIiIvIpDDdERETkUxhuiIiIyKcw3BAREZFPYbghIiIin8JwQ0RERD6F4YaIiIh8CsMNERER+ZROt0IxERF5PlGUUFhuRI3ZijB/LZJjDBAEDjuma8NwQ0REHmV3aTXW7CxDWZUJNrsEjVqFhIhAzMpIQHpiuNLtkRfgaSkiIvIYu0urMS+3AEVnjQjQ+SEiSIcAnR+KztZjXm4BdpdWK90ieQGGGyIi8giiKGHNzjKYLM2IMuih16ghCCroNWpEGXQwWexYs7MMoigp3Sp5OIYbIiLyCIXlRpRVmRDqr201+VmlUiHEX4OyKhMKy40KdUjeguGGiIg8Qo3ZCptdglZ96V9NOrUAmyihxmx1c2fkbRhuiIjII4T5a6FRq2C1i5d83GIXoRFUCPPXurkz8jYMN0RE5BGSYwxIiAjEBbMNkiS/rkaSJNSabUiICERyjEGhDslbMNwQEZFHEAQVZmUkIFCnRoXRgkabHaIoodFmR4XRgkCdGrMyErjeDV0Vww0REXmM9MRwLJ+YgqToIJgtzagyWWC2NCMpOgjLJ6ZwnRu6JlzEj4iIPEp6YjhG9O7KFYqp3RhuiIjI4wiCCindg5Vug7wUT0sRERGRT2G4ISIiIp/CcENEREQ+heGGiIiIfArDDREREfkUhhsiIiLyKQw3RERE5FMUDzerV69GfHw89Ho90tLSsHfv3itun5OTg379+qFLly6Ii4vDk08+iaamJjd1S0RERJ5O0XCzYcMGZGVlYfHixfjpp58waNAgjB07FlVVVZfc/p///CfmzJmDxYsXo6ioCGvXrsWGDRswb948N3dOREREnkrRcPPSSy9h5syZmDFjBgYMGIDXX38d/v7+eOutty65/e7duzFq1Cjce++9iI+Px6233op77rnnqkd7iIiIqPNQLNxYrVbs27cPmZmZLc0IAjIzM7Fnz55LPic9PR379u1zhJmjR49iy5YtGDdu3GW/jsVigdFolH0QERGR71JstlR1dTXsdjsiIyNl9cjISBQXF1/yOffeey+qq6txww03QJIkNDc346GHHrriaans7GwsXbrUqb0TERGR51L8guK22LFjB5YvX47XXnsNP/30EzZv3ozPPvsMy5Ytu+xz5s6di7q6OsfHqVOn3NgxERERuZtiR27Cw8OhVqtRWVkpq1dWViIqKuqSz1m4cCHuu+8+PPDAAwCAlJQUNDQ04MEHH8T8+fMhCK2zmk6ng06nc/4bICIiIo+k2JEbrVaLIUOGIC8vz1ETRRF5eXkYOXLkJZ9jNptbBRi1Wg0AkCTJdc0SERGR11DsyA0AZGVlYfr06Rg6dCiGDx+OnJwcNDQ0YMaMGQCAadOmITY2FtnZ2QCACRMm4KWXXsJ1112HtLQ0lJaWYuHChZgwYYIj5BAREVHnpmi4mTp1Ks6dO4dFixahoqICgwcPxtatWx0XGZ88eVJ2pGbBggVQqVRYsGABzpw5g27dumHChAl47rnnlHoLRERE5GFUUic7n2M0GhEcHIy6ujoYDAal2yEiIqJr0Jbf3151txQRERHR1TDcEBERkU9huCEiIiKfwnBDREREPoXhhoiIiHwKww0RERH5FEXXuSEiIiLvIooSCsuNqDFbEeavRXKMAYKguupj7sRwQ0RERNdkd2k11uwsQ1mVCTa7BI1ahYSIQMzKSACAyz6Wnhju1j65iB8RERFd1e7SaszLLYDJ0oxQfy20agFWu4gLZhvU/3eRi12UWj0WqFNj+cSUDgccLuJHRERETiOKEtbsLIPJ0owogx56jRqCoIJeo0akQYuaBitqGqyIDNLJHosy6GCy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\n"},"metadata":{}}]},{"cell_type":"code","source":["Bra = pd.merge(PrimeiroTurno, SegundoTurno, on=['time'])\n","Bra"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":461},"id":"fzoKOvOAOCyr","executionInfo":{"status":"ok","timestamp":1737842385719,"user_tz":180,"elapsed":14,"user":{"displayName":"Lucas Calmon","userId":"09752934338034803828"}},"outputId":"0917e47a-71b0-405f-ef60-245a0ceeded7"},"execution_count":16,"outputs":[{"output_type":"execute_result","data":{"text/plain":["             time  count_x_x  VCasaValor_x  GolsCasaC_x  GolsVisiC_x  \\\n","0           Brest          9           6.5           17            7   \n","1   Clermont Foot         10           2.5            5           14   \n","2        Le Havre          9           5.0           12            9   \n","3            Lens          9           6.0           14            8   \n","4           Lille          9           7.0           14            4   \n","..            ...        ...           ...          ...          ...   \n","13      Paris S-G         10           8.0           27           10   \n","14          Reims          9           5.5           10            9   \n","15         Rennes         10           5.5           20           14   \n","16     Strasbourg          9           5.5           12            9   \n","17       Toulouse          9           3.5           10           11   \n","\n","    count_y_x  VVisValor_x  GolsCasaV_x  GolsVisiV_x   W_x  G_x  GF_x  GA_x  \\\n","0          10          6.0           10           12  12.5   19    29    17   \n","1           9          3.5           14            9   6.0   19    14    28   \n","2          10          4.0           14           10   9.0   19    22    23   \n","3          10          4.5           11            9  10.5   19    23    19   \n","4          10          5.0           10           10  12.0   19    24    14   \n","..        ...          ...          ...          ...   ...  ...   ...   ...   \n","13          9          7.5            6           19  15.5   19    46    16   \n","14         10          5.0           15           15  10.5   19    25    24   \n","15          9          4.0           10            8   9.5   19    28    24   \n","16         10          4.0           15            8   9.5   19    20    24   \n","17         10          3.5           14            6   7.0   19    16    25   \n","\n","       wpc_x    pyth_x  count_x_y  VCasaValor_y  GolsCasaC_y  GolsVisiC_y  \\\n","0   0.657895  0.744248          8           5.0            8            7   \n","1   0.315789  0.200000          7           3.0            9           13   \n","2   0.473684  0.477789          8           2.0            6           10   \n","3   0.552632  0.594382          8           5.0           13           10   \n","4   0.631579  0.746114          8           6.0           20           10   \n","..       ...       ...        ...           ...          ...          ...   \n","13  0.815789  0.892074          7           4.0           15           12   \n","14  0.552632  0.520400          8           4.0            9            9   \n","15  0.500000  0.576471          7           3.5           14           12   \n","16  0.500000  0.409836          8           3.0           10           14   \n","17  0.368421  0.290579          8           3.0           11           14   \n","\n","    count_y_y  VVisValor_y  GolsCasaV_y  GolsVisiV_y   W_y  G_y  GF_y  GA_y  \\\n","0           7          4.5           10           16   9.5   15    24    17   \n","1           8          1.0           19            3   4.0   15    12    32   \n","2           7          1.5           12            6   3.5   15    12    22   \n","3           7          3.0            8            9   8.0   15    22    18   \n","4           7          3.5           10            8   9.5   15    28    20   \n","..        ...          ...          ...          ...   ...  ...   ...   ...   \n","13          8          7.5            5           20  11.5   15    35    17   \n","14          7          2.5           14            8   6.5   15    17    23   \n","15          8          4.0           10           11   7.5   15    25    22   \n","16          7          2.0           12            8   5.0   15    18    26   \n","17          7          6.0            7           15   9.0   15    26    21   \n","\n","       wpc_y    pyth_y  \n","0   0.633333  0.665896  \n","1   0.266667  0.123288  \n","2   0.233333  0.229299  \n","3   0.533333  0.599010  \n","4   0.633333  0.662162  \n","..       ...       ...  \n","13  0.766667  0.809115  \n","14  0.433333  0.353301  \n","15  0.500000  0.563571  \n","16  0.333333  0.324000  \n","17  0.600000  0.605192  \n","\n","[18 rows x 29 columns]"],"text/html":["\n","  <div id=\"df-680032b6-1375-465a-8ecc-afcdd08f01c4\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>time</th>\n","      <th>count_x_x</th>\n","      <th>VCasaValor_x</th>\n","      <th>GolsCasaC_x</th>\n","      <th>GolsVisiC_x</th>\n","      <th>count_y_x</th>\n","      <th>VVisValor_x</th>\n","      <th>GolsCasaV_x</th>\n","      <th>GolsVisiV_x</th>\n","      <th>W_x</th>\n","      <th>G_x</th>\n","      <th>GF_x</th>\n","      <th>GA_x</th>\n","      <th>wpc_x</th>\n","      <th>pyth_x</th>\n","      <th>count_x_y</th>\n","      <th>VCasaValor_y</th>\n","      <th>GolsCasaC_y</th>\n","      <th>GolsVisiC_y</th>\n","      <th>count_y_y</th>\n","      <th>VVisValor_y</th>\n","      <th>GolsCasaV_y</th>\n","      <th>GolsVisiV_y</th>\n","      <th>W_y</th>\n","      <th>G_y</th>\n","      <th>GF_y</th>\n","      <th>GA_y</th>\n","      <th>wpc_y</th>\n","      <th>pyth_y</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Brest</td>\n","      <td>9</td>\n","      <td>6.5</td>\n","      <td>17</td>\n","      <td>7</td>\n","      <td>10</td>\n","      <td>6.0</td>\n","      <td>10</td>\n","      <td>12</td>\n","      <td>12.5</td>\n","      <td>19</td>\n","      <td>29</td>\n","      <td>17</td>\n","      <td>0.657895</td>\n","      <td>0.744248</td>\n","      <td>8</td>\n","      <td>5.0</td>\n","      <td>8</td>\n","      <td>7</td>\n","      <td>7</td>\n","      <td>4.5</td>\n","      <td>10</td>\n","      <td>16</td>\n","      <td>9.5</td>\n","      <td>15</td>\n","      <td>24</td>\n","      <td>17</td>\n","      <td>0.633333</td>\n","      <td>0.665896</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Clermont Foot</td>\n","      <td>10</td>\n","      <td>2.5</td>\n","      <td>5</td>\n","      <td>14</td>\n","      <td>9</td>\n","      <td>3.5</td>\n","      <td>14</td>\n","      <td>9</td>\n","      <td>6.0</td>\n","      <td>19</td>\n","      <td>14</td>\n","      <td>28</td>\n","      <td>0.315789</td>\n","      <td>0.200000</td>\n","      <td>7</td>\n","      <td>3.0</td>\n","      <td>9</td>\n","      <td>13</td>\n","      <td>8</td>\n","      <td>1.0</td>\n","      <td>19</td>\n","      <td>3</td>\n","      <td>4.0</td>\n","      <td>15</td>\n","      <td>12</td>\n","      <td>32</td>\n","      <td>0.266667</td>\n","      <td>0.123288</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Le Havre</td>\n","      <td>9</td>\n","      <td>5.0</td>\n","      <td>12</td>\n","      <td>9</td>\n","      <td>10</td>\n","      <td>4.0</td>\n","      <td>14</td>\n","      <td>10</td>\n","      <td>9.0</td>\n","      <td>19</td>\n","      <td>22</td>\n","      <td>23</td>\n","      <td>0.473684</td>\n","      <td>0.477789</td>\n","      <td>8</td>\n","      <td>2.0</td>\n","      <td>6</td>\n","      <td>10</td>\n","      <td>7</td>\n","      <td>1.5</td>\n","      <td>12</td>\n","      <td>6</td>\n","      <td>3.5</td>\n","      <td>15</td>\n","      <td>12</td>\n","      <td>22</td>\n","      <td>0.233333</td>\n","      <td>0.229299</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Lens</td>\n","      <td>9</td>\n","      <td>6.0</td>\n","      <td>14</td>\n","      <td>8</td>\n","      <td>10</td>\n","      <td>4.5</td>\n","      <td>11</td>\n","      <td>9</td>\n","      <td>10.5</td>\n","      <td>19</td>\n","      <td>23</td>\n","      <td>19</td>\n","      <td>0.552632</td>\n","      <td>0.594382</td>\n","      <td>8</td>\n","      <td>5.0</td>\n","      <td>13</td>\n","      <td>10</td>\n","      <td>7</td>\n","      <td>3.0</td>\n","      <td>8</td>\n","      <td>9</td>\n","      <td>8.0</td>\n","      <td>15</td>\n","      <td>22</td>\n","      <td>18</td>\n","      <td>0.533333</td>\n","      <td>0.599010</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Lille</td>\n","      <td>9</td>\n","      <td>7.0</td>\n","      <td>14</td>\n","      <td>4</td>\n","      <td>10</td>\n","      <td>5.0</td>\n","      <td>10</td>\n","      <td>10</td>\n","      <td>12.0</td>\n","      <td>19</td>\n","      <td>24</td>\n","      <td>14</td>\n","      <td>0.631579</td>\n","      <td>0.746114</td>\n","      <td>8</td>\n","      <td>6.0</td>\n","      <td>20</td>\n","      <td>10</td>\n","      <td>7</td>\n","      <td>3.5</td>\n","      <td>10</td>\n","      <td>8</td>\n","      <td>9.5</td>\n","      <td>15</td>\n","      <td>28</td>\n","      <td>20</td>\n","      <td>0.633333</td>\n","      <td>0.662162</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>Paris S-G</td>\n","      <td>10</td>\n","      <td>8.0</td>\n","      <td>27</td>\n","      <td>10</td>\n","      <td>9</td>\n","      <td>7.5</td>\n","      <td>6</td>\n","      <td>19</td>\n","      <td>15.5</td>\n","      <td>19</td>\n","      <td>46</td>\n","      <td>16</td>\n","      <td>0.815789</td>\n","      <td>0.892074</td>\n","      <td>7</td>\n","      <td>4.0</td>\n","      <td>15</td>\n","      <td>12</td>\n","      <td>8</td>\n","      <td>7.5</td>\n","      <td>5</td>\n","      <td>20</td>\n","      <td>11.5</td>\n","      <td>15</td>\n","      <td>35</td>\n","      <td>17</td>\n","      <td>0.766667</td>\n","      <td>0.809115</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>Reims</td>\n","      <td>9</td>\n","      <td>5.5</td>\n","      <td>10</td>\n","      <td>9</td>\n","      <td>10</td>\n","      <td>5.0</td>\n","      <td>15</td>\n","      <td>15</td>\n","      <td>10.5</td>\n","      <td>19</td>\n","      <td>25</td>\n","      <td>24</td>\n","      <td>0.552632</td>\n","      <td>0.520400</td>\n","      <td>8</td>\n","      <td>4.0</td>\n","      <td>9</td>\n","      <td>9</td>\n","      <td>7</td>\n","      <td>2.5</td>\n","      <td>14</td>\n","      <td>8</td>\n","      <td>6.5</td>\n","      <td>15</td>\n","      <td>17</td>\n","      <td>23</td>\n","      <td>0.433333</td>\n","      <td>0.353301</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>Rennes</td>\n","      <td>10</td>\n","      <td>5.5</td>\n","      <td>20</td>\n","      <td>14</td>\n","      <td>9</td>\n","      <td>4.0</td>\n","      <td>10</td>\n","      <td>8</td>\n","      <td>9.5</td>\n","      <td>19</td>\n","      <td>28</td>\n","      <td>24</td>\n","      <td>0.500000</td>\n","      <td>0.576471</td>\n","      <td>7</td>\n","      <td>3.5</td>\n","      <td>14</td>\n","      <td>12</td>\n","      <td>8</td>\n","      <td>4.0</td>\n","      <td>10</td>\n","      <td>11</td>\n","      <td>7.5</td>\n","      <td>15</td>\n","      <td>25</td>\n","      <td>22</td>\n","      <td>0.500000</td>\n","      <td>0.563571</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>Strasbourg</td>\n","      <td>9</td>\n","      <td>5.5</td>\n","      <td>12</td>\n","      <td>9</td>\n","      <td>10</td>\n","      <td>4.0</td>\n","      <td>15</td>\n","      <td>8</td>\n","      <td>9.5</td>\n","      <td>19</td>\n","      <td>20</td>\n","      <td>24</td>\n","      <td>0.500000</td>\n","      <td>0.409836</td>\n","      <td>8</td>\n","      <td>3.0</td>\n","      <td>10</td>\n","      <td>14</td>\n","      <td>7</td>\n","      <td>2.0</td>\n","      <td>12</td>\n","      <td>8</td>\n","      <td>5.0</td>\n","      <td>15</td>\n","      <td>18</td>\n","      <td>26</td>\n","      <td>0.333333</td>\n","      <td>0.324000</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>Toulouse</td>\n","      <td>9</td>\n","      <td>3.5</td>\n","      <td>10</td>\n","      <td>11</td>\n","      <td>10</td>\n","      <td>3.5</td>\n","      <td>14</td>\n","      <td>6</td>\n","      <td>7.0</td>\n","      <td>19</td>\n","      <td>16</td>\n","      <td>25</td>\n","      <td>0.368421</td>\n","      <td>0.290579</td>\n","      <td>8</td>\n","      <td>3.0</td>\n","      <td>11</td>\n","      <td>14</td>\n","      <td>7</td>\n","      <td>6.0</td>\n","      <td>7</td>\n","      <td>15</td>\n","      <td>9.0</td>\n","      <td>15</td>\n","      <td>26</td>\n","      <td>21</td>\n","      <td>0.600000</td>\n","      <td>0.605192</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>18 rows × 29 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-680032b6-1375-465a-8ecc-afcdd08f01c4')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-680032b6-1375-465a-8ecc-afcdd08f01c4 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-680032b6-1375-465a-8ecc-afcdd08f01c4');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-a3c7e181-d86a-4b82-8aac-65f560941f5b\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a3c7e181-d86a-4b82-8aac-65f560941f5b')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-a3c7e181-d86a-4b82-8aac-65f560941f5b button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_97300caa-74cd-4a99-980f-fe34c353654f\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('Bra')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_97300caa-74cd-4a99-980f-fe34c353654f button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('Bra');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"Bra"}},"metadata":{},"execution_count":16}]},{"cell_type":"code","source":["sns.regplot(x=\"wpc_x\", y = \"wpc_y\", data = Bra,ci=None)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":466},"id":"rYLpz-NlOEUX","executionInfo":{"status":"ok","timestamp":1737842386912,"user_tz":180,"elapsed":1207,"user":{"displayName":"Lucas Calmon","userId":"09752934338034803828"}},"outputId":"452355f4-77cb-49ee-8ed2-9650adf473cb"},"execution_count":17,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: xlabel='wpc_x', ylabel='wpc_y'>"]},"metadata":{},"execution_count":17},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["sns.regplot(x=\"pyth_x\", y = \"wpc_y\", data = Bra, ci=None)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":467},"id":"6jw0SswjOF0n","executionInfo":{"status":"ok","timestamp":1737842387422,"user_tz":180,"elapsed":513,"user":{"displayName":"Lucas Calmon","userId":"09752934338034803828"}},"outputId":"5014e2b1-6b8f-49f2-b65e-d796ef25eecd"},"execution_count":18,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: xlabel='pyth_x', ylabel='wpc_y'>"]},"metadata":{},"execution_count":18},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"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\n"},"metadata":{}}]},{"cell_type":"code","source":["dd = Bra.loc[:,['pyth_x', 'wpc_x', 'pyth_y', 'wpc_y']]\n","dd"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"nX4YLFsOOHUI","executionInfo":{"status":"ok","timestamp":1737842387422,"user_tz":180,"elapsed":34,"user":{"displayName":"Lucas Calmon","userId":"09752934338034803828"}},"outputId":"3a47c030-ba36-4315-f2af-e3ea4d364362"},"execution_count":19,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      pyth_x     wpc_x    pyth_y     wpc_y\n","0   0.744248  0.657895  0.665896  0.633333\n","1   0.200000  0.315789  0.123288  0.266667\n","2   0.477789  0.473684  0.229299  0.233333\n","3   0.594382  0.552632  0.599010  0.533333\n","4   0.746114  0.631579  0.662162  0.633333\n","..       ...       ...       ...       ...\n","13  0.892074  0.815789  0.809115  0.766667\n","14  0.520400  0.552632  0.353301  0.433333\n","15  0.576471  0.500000  0.563571  0.500000\n","16  0.409836  0.500000  0.324000  0.333333\n","17  0.290579  0.368421  0.605192  0.600000\n","\n","[18 rows x 4 columns]"],"text/html":["\n","  <div id=\"df-4e55fc7c-6ae9-4b29-a353-042e2c906521\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>pyth_x</th>\n","      <th>wpc_x</th>\n","      <th>pyth_y</th>\n","      <th>wpc_y</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0.744248</td>\n","      <td>0.657895</td>\n","      <td>0.665896</td>\n","      <td>0.633333</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0.200000</td>\n","      <td>0.315789</td>\n","      <td>0.123288</td>\n","      <td>0.266667</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0.477789</td>\n","      <td>0.473684</td>\n","      <td>0.229299</td>\n","      <td>0.233333</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0.594382</td>\n","      <td>0.552632</td>\n","      <td>0.599010</td>\n","      <td>0.533333</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0.746114</td>\n","      <td>0.631579</td>\n","      <td>0.662162</td>\n","      <td>0.633333</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>0.892074</td>\n","      <td>0.815789</td>\n","      <td>0.809115</td>\n","      <td>0.766667</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>0.520400</td>\n","      <td>0.552632</td>\n","      <td>0.353301</td>\n","      <td>0.433333</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>0.576471</td>\n","      <td>0.500000</td>\n","      <td>0.563571</td>\n","      <td>0.500000</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>0.409836</td>\n","      <td>0.500000</td>\n","      <td>0.324000</td>\n","      <td>0.333333</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>0.290579</td>\n","      <td>0.368421</td>\n","      <td>0.605192</td>\n","      <td>0.600000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>18 rows × 4 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4e55fc7c-6ae9-4b29-a353-042e2c906521')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-4e55fc7c-6ae9-4b29-a353-042e2c906521 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-4e55fc7c-6ae9-4b29-a353-042e2c906521');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-44d14256-f616-4abb-8b46-0d5129a8dd2b\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-44d14256-f616-4abb-8b46-0d5129a8dd2b')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-44d14256-f616-4abb-8b46-0d5129a8dd2b button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_cf1594d2-fbfe-49f1-a334-1a9517813fef\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('dd')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_cf1594d2-fbfe-49f1-a334-1a9517813fef button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('dd');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"dd","summary":"{\n  \"name\": \"dd\",\n  \"rows\": 18,\n  \"fields\": [\n    {\n      \"column\": \"pyth_x\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.21451544894445107,\n        \"min\": 0.2,\n        \"max\": 0.8920741989881956,\n        \"num_unique_values\": 17,\n        \"samples\": [\n          0.7442477876106195,\n          0.2,\n          0.25520602569782896\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"wpc_x\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.1539761424248694,\n        \"min\": 0.2894736842105263,\n        \"max\": 0.8157894736842105,\n        \"num_unique_values\": 12,\n        \"samples\": [\n          0.8157894736842105,\n          0.7105263157894737,\n          0.6578947368421053\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"pyth_y\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.21219727311306177,\n        \"min\": 0.1232876712328767,\n        \"max\": 0.8198558847077662,\n        \"num_unique_values\": 18,\n        \"samples\": [\n          0.6658959537572254,\n          0.1232876712328767,\n          0.3003327787021631\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"wpc_y\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.17968745559817584,\n        \"min\": 0.23333333333333334,\n        \"max\": 0.8333333333333334,\n        \"num_unique_values\": 12,\n        \"samples\": [\n          0.43333333333333335,\n          0.3333333333333333,\n          0.6333333333333333\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":19}]},{"cell_type":"code","source":["rename_dict = {\n","    'pyth_x': 'pythagorean_x',\n","    'wpc_x': 'win_percentage_x',\n","    'pyth_y': 'pythagorean_y',\n","    'wpc_y': 'win_percentage_y'\n","}\n","\n","# Aplicando a renomeação\n","dd.rename(columns=rename_dict, inplace=True)"],"metadata":{"id":"yq5mvlH0eaBY","executionInfo":{"status":"ok","timestamp":1737842387422,"user_tz":180,"elapsed":33,"user":{"displayName":"Lucas Calmon","userId":"09752934338034803828"}}},"execution_count":20,"outputs":[]},{"cell_type":"code","source":["cor_matrix = dd.corr()\n","\n","# View the correlation matrix\n","cor_matrix"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":175},"id":"dBbarJ-gOJYE","executionInfo":{"status":"ok","timestamp":1737842387422,"user_tz":180,"elapsed":33,"user":{"displayName":"Lucas Calmon","userId":"09752934338034803828"}},"outputId":"ab2f972d-0cf7-4e51-fd14-4f00e8b71b27"},"execution_count":21,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                  pythagorean_x  win_percentage_x  pythagorean_y  \\\n","pythagorean_x          1.000000          0.978959       0.667501   \n","win_percentage_x       0.978959          1.000000       0.633903   \n","pythagorean_y          0.667501          0.633903       1.000000   \n","win_percentage_y       0.446232          0.428946       0.907952   \n","\n","                  win_percentage_y  \n","pythagorean_x             0.446232  \n","win_percentage_x          0.428946  \n","pythagorean_y             0.907952  \n","win_percentage_y          1.000000  "],"text/html":["\n","  <div id=\"df-30acfcd0-93f2-4f28-827e-c5d60a3cf94f\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>pythagorean_x</th>\n","      <th>win_percentage_x</th>\n","      <th>pythagorean_y</th>\n","      <th>win_percentage_y</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>pythagorean_x</th>\n","      <td>1.000000</td>\n","      <td>0.978959</td>\n","      <td>0.667501</td>\n","      <td>0.446232</td>\n","    </tr>\n","    <tr>\n","      <th>win_percentage_x</th>\n","      <td>0.978959</td>\n","      <td>1.000000</td>\n","      <td>0.633903</td>\n","      <td>0.428946</td>\n","    </tr>\n","    <tr>\n","      <th>pythagorean_y</th>\n","      <td>0.667501</td>\n","      <td>0.633903</td>\n","      <td>1.000000</td>\n","      <td>0.907952</td>\n","    </tr>\n","    <tr>\n","      <th>win_percentage_y</th>\n","      <td>0.446232</td>\n","      <td>0.428946</td>\n","      <td>0.907952</td>\n","      <td>1.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-30acfcd0-93f2-4f28-827e-c5d60a3cf94f')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-30acfcd0-93f2-4f28-827e-c5d60a3cf94f button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-30acfcd0-93f2-4f28-827e-c5d60a3cf94f');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-f79214e9-5dcf-4ec1-b497-d6b520dd3421\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-f79214e9-5dcf-4ec1-b497-d6b520dd3421')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-f79214e9-5dcf-4ec1-b497-d6b520dd3421 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_5fd0f0b8-4e0a-4e36-ac1e-702a14b4db68\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('cor_matrix')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_5fd0f0b8-4e0a-4e36-ac1e-702a14b4db68 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('cor_matrix');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"cor_matrix","summary":"{\n  \"name\": \"cor_matrix\",\n  \"rows\": 4,\n  \"fields\": [\n    {\n      \"column\": \"pythagorean_x\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.265741531602964,\n        \"min\": 0.44623162603673105,\n        \"max\": 1.0,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          0.9789593761241712,\n          0.44623162603673105,\n          1.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"win_percentage_x\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.2775124933918848,\n        \"min\": 0.4289462438843188,\n        \"max\": 1.0,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          1.0,\n          0.4289462438843188,\n          0.9789593761241712\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"pythagorean_y\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.17960708061586708,\n        \"min\": 0.6339025317938913,\n        \"max\": 1.0,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          0.6339025317938913,\n          0.9079524348312338,\n          0.6675013277326152\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"win_percentage_y\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.30057810677990815,\n        \"min\": 0.4289462438843188,\n        \"max\": 1.0,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          0.4289462438843188,\n          1.0,\n          0.44623162603673105\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":21}]}]}