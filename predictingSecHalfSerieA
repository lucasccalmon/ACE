{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyNUKhxRSU2VbVPdsOEpmwQK"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"id":"OhECiaz-NNRC","executionInfo":{"status":"ok","timestamp":1737842415680,"user_tz":180,"elapsed":10901,"user":{"displayName":"Lucas Calmon","userId":"09752934338034803828"}}},"outputs":[],"source":["import pandas as pd\n","import numpy as np\n","import statsmodels.formula.api as smf\n","import matplotlib.pyplot as plt\n","import seaborn as sns"]},{"cell_type":"code","source":["df = pd.read_html(\"https://fbref.com/pt/comps/11/2023-2024/cronograma/2023-2024-Serie-A-Resultados-e-Calendarios\")[0]\n","pd.set_option(\"display.max_columns\", None)\n","pd.set_option('display.max_rows', 10)\n","print(df)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"E-zg3_SINq5s","executionInfo":{"status":"ok","timestamp":1737842416469,"user_tz":180,"elapsed":792,"user":{"displayName":"Lucas Calmon","userId":"09752934338034803828"}},"outputId":"e7e981ca-ce3e-4ff3-9ed2-f70e5e399cb3"},"execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["      Sem  Dia        Data Horário        Em casa   xG Resultado  xG.1  \\\n","0     1.0  sáb  2023-08-19   18:30      Frosinone  0.9       1–3   1.5   \n","1     1.0  sáb  2023-08-19   18:30         Empoli  0.7       0–1   0.5   \n","2     1.0  sáb  2023-08-19   20:45          Inter  2.7       2–0   0.8   \n","3     1.0  sáb  2023-08-19   20:45          Genoa  0.2       1–4   1.0   \n","4     1.0  dom  2023-08-20   18:30       Sassuolo  0.4       0–2   1.3   \n","..    ...  ...         ...     ...            ...  ...       ...   ...   \n","417  38.0  dom  2024-05-26   20:45         Empoli  2.6       2–1   1.3   \n","418  38.0  dom  2024-05-26   20:45      Frosinone  0.8       0–1   0.7   \n","419  38.0  dom  2024-05-26   20:45  Hellas Verona  1.7       2–2   2.4   \n","420   NaN  NaN         NaN     NaN            NaN  NaN       NaN   NaN   \n","421  29.0  dom  2024-06-02   18:00       Atalanta  1.7       2–3   1.2   \n","\n","         Visitante  Público                                Local  \\\n","0           Napoli   15.822                 Stadio Benito Stirpe   \n","1    Hellas Verona    7.940              Stadio Carlo Castellani   \n","2            Monza   72.509               Stadio Giuseppe Meazza   \n","3       Fiorentina   33.045       Stadio Comunale Luigi Ferraris   \n","4         Atalanta   12.298  Mapei Stadium - Città del Tricolore   \n","..             ...      ...                                  ...   \n","417           Roma   15.896              Stadio Carlo Castellani   \n","418        Udinese   16.190                 Stadio Benito Stirpe   \n","419          Inter   22.447        Stadio Marc'Antonio Bentegodi   \n","420            NaN      NaN                                  NaN   \n","421     Fiorentina   14.851                       Gewiss Stadium   \n","\n","              Árbitro  Relatório da Partida  Notas  \n","0    Matteo Marcenaro  Relatório da Partida    NaN  \n","1        Luca Massimi  Relatório da Partida    NaN  \n","2      Andrea Colombo  Relatório da Partida    NaN  \n","3    Giovanni Ayroldi  Relatório da Partida    NaN  \n","4    Matteo Marchetti  Relatório da Partida    NaN  \n","..                ...                   ...    ...  \n","417      Davide Massa  Relatório da Partida    NaN  \n","418    Daniele Doveri  Relatório da Partida    NaN  \n","419     Luca Zufferli  Relatório da Partida    NaN  \n","420               NaN                   NaN    NaN  \n","421    Daniele Orsato  Relatório da Partida    NaN  \n","\n","[422 rows x 14 columns]\n"]}]},{"cell_type":"code","source":["resultados = df[['Sem', 'Data', 'Em casa', 'Resultado', 'Visitante']]\n","resultados = resultados.dropna(how='all')\n","resultados"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"7UBZqBZpNs6e","executionInfo":{"status":"ok","timestamp":1737842416469,"user_tz":180,"elapsed":6,"user":{"displayName":"Lucas Calmon","userId":"09752934338034803828"}},"outputId":"b0f7fef4-5f19-4ad2-ef66-2595ac2ae695"},"execution_count":3,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      Sem        Data        Em casa Resultado      Visitante\n","0     1.0  2023-08-19      Frosinone       1–3         Napoli\n","1     1.0  2023-08-19         Empoli       0–1  Hellas Verona\n","2     1.0  2023-08-19          Inter       2–0          Monza\n","3     1.0  2023-08-19          Genoa       1–4     Fiorentina\n","4     1.0  2023-08-20       Sassuolo       0–2       Atalanta\n","..    ...         ...            ...       ...            ...\n","416  38.0  2024-05-26          Lazio       1–1       Sassuolo\n","417  38.0  2024-05-26         Empoli       2–1           Roma\n","418  38.0  2024-05-26      Frosinone       0–1        Udinese\n","419  38.0  2024-05-26  Hellas Verona       2–2          Inter\n","421  29.0  2024-06-02       Atalanta       2–3     Fiorentina\n","\n","[380 rows x 5 columns]"],"text/html":["\n","  <div id=\"df-56f7f257-9202-4fd0-b8f5-5aafa544c429\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Sem</th>\n","      <th>Data</th>\n","      <th>Em casa</th>\n","      <th>Resultado</th>\n","      <th>Visitante</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1.0</td>\n","      <td>2023-08-19</td>\n","      <td>Frosinone</td>\n","      <td>1–3</td>\n","      <td>Napoli</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1.0</td>\n","      <td>2023-08-19</td>\n","      <td>Empoli</td>\n","      <td>0–1</td>\n","      <td>Hellas Verona</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1.0</td>\n","      <td>2023-08-19</td>\n","      <td>Inter</td>\n","      <td>2–0</td>\n","      <td>Monza</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1.0</td>\n","      <td>2023-08-19</td>\n","      <td>Genoa</td>\n","      <td>1–4</td>\n","      <td>Fiorentina</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1.0</td>\n","      <td>2023-08-20</td>\n","      <td>Sassuolo</td>\n","      <td>0–2</td>\n","      <td>Atalanta</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>416</th>\n","      <td>38.0</td>\n","      <td>2024-05-26</td>\n","      <td>Lazio</td>\n","      <td>1–1</td>\n","      <td>Sassuolo</td>\n","    </tr>\n","    <tr>\n","      <th>417</th>\n","      <td>38.0</td>\n","      <td>2024-05-26</td>\n","      <td>Empoli</td>\n","      <td>2–1</td>\n","      <td>Roma</td>\n","    </tr>\n","    <tr>\n","      <th>418</th>\n","      <td>38.0</td>\n","      <td>2024-05-26</td>\n","      <td>Frosinone</td>\n","      <td>0–1</td>\n","      <td>Udinese</td>\n","    </tr>\n","    <tr>\n","      <th>419</th>\n","      <td>38.0</td>\n","      <td>2024-05-26</td>\n","      <td>Hellas Verona</td>\n","      <td>2–2</td>\n","      <td>Inter</td>\n","    </tr>\n","    <tr>\n","      <th>421</th>\n","      <td>29.0</td>\n","      <td>2024-06-02</td>\n","      <td>Atalanta</td>\n","      <td>2–3</td>\n","      <td>Fiorentina</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>380 rows × 5 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-56f7f257-9202-4fd0-b8f5-5aafa544c429')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-56f7f257-9202-4fd0-b8f5-5aafa544c429 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-56f7f257-9202-4fd0-b8f5-5aafa544c429');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-09aa8c46-4ca1-408e-bc83-adac6410904a\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-09aa8c46-4ca1-408e-bc83-adac6410904a')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-09aa8c46-4ca1-408e-bc83-adac6410904a button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_51c1cab3-d9a3-44f0-aecd-8dd85a99e6b6\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('resultados')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_51c1cab3-d9a3-44f0-aecd-8dd85a99e6b6 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('resultados');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"resultados","summary":"{\n  \"name\": \"resultados\",\n  \"rows\": 380,\n  \"fields\": [\n    {\n      \"column\": \"Sem\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 10.980313398163995,\n        \"min\": 1.0,\n        \"max\": 38.0,\n        \"num_unique_values\": 38,\n        \"samples\": [\n          34.0,\n          37.0,\n          5.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Data\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"num_unique_values\": 135,\n        \"samples\": [\n          \"2024-03-17\",\n          \"2024-01-27\",\n          \"2024-04-12\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Em casa\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 20,\n        \"samples\": [\n          \"Frosinone\",\n          \"Salernitana\",\n          \"Napoli\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Resultado\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 30,\n        \"samples\": [\n          \"2\\u20134\",\n          \"4\\u20130\",\n          \"3\\u20133\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Visitante\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 20,\n        \"samples\": [\n          \"Napoli\",\n          \"Udinese\",\n          \"Sassuolo\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":3}]},{"cell_type":"code","source":["placar = resultados.loc[:,\"Resultado\"].str.split(\"–\", n = 1, expand = True)\n","print(placar)\n","resultados.loc[:,\"CasaResul\"] = placar.loc[:,0]\n","resultados.loc[:,\"VisiResul\"] = placar.loc[:,1]\n","resultados = resultados.drop(columns=[\"Resultado\"])\n","resultados"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":667},"id":"X-6DcXCUNwDB","executionInfo":{"status":"ok","timestamp":1737842416890,"user_tz":180,"elapsed":426,"user":{"displayName":"Lucas Calmon","userId":"09752934338034803828"}},"outputId":"c48a8b4c-56a0-4d1b-f6ee-91b86dc16746"},"execution_count":4,"outputs":[{"output_type":"stream","name":"stdout","text":["     0  1\n","0    1  3\n","1    0  1\n","2    2  0\n","3    1  4\n","4    0  2\n","..  .. ..\n","416  1  1\n","417  2  1\n","418  0  1\n","419  2  2\n","421  2  3\n","\n","[380 rows x 2 columns]\n"]},{"output_type":"execute_result","data":{"text/plain":["      Sem        Data        Em casa      Visitante CasaResul VisiResul\n","0     1.0  2023-08-19      Frosinone         Napoli         1         3\n","1     1.0  2023-08-19         Empoli  Hellas Verona         0         1\n","2     1.0  2023-08-19          Inter          Monza         2         0\n","3     1.0  2023-08-19          Genoa     Fiorentina         1         4\n","4     1.0  2023-08-20       Sassuolo       Atalanta         0         2\n","..    ...         ...            ...            ...       ...       ...\n","416  38.0  2024-05-26          Lazio       Sassuolo         1         1\n","417  38.0  2024-05-26         Empoli           Roma         2         1\n","418  38.0  2024-05-26      Frosinone        Udinese         0         1\n","419  38.0  2024-05-26  Hellas Verona          Inter         2         2\n","421  29.0  2024-06-02       Atalanta     Fiorentina         2         3\n","\n","[380 rows x 6 columns]"],"text/html":["\n","  <div id=\"df-0819ded5-81a7-4ea0-bb0e-41767b043048\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Sem</th>\n","      <th>Data</th>\n","      <th>Em casa</th>\n","      <th>Visitante</th>\n","      <th>CasaResul</th>\n","      <th>VisiResul</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1.0</td>\n","      <td>2023-08-19</td>\n","      <td>Frosinone</td>\n","      <td>Napoli</td>\n","      <td>1</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1.0</td>\n","      <td>2023-08-19</td>\n","      <td>Empoli</td>\n","      <td>Hellas Verona</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1.0</td>\n","      <td>2023-08-19</td>\n","      <td>Inter</td>\n","      <td>Monza</td>\n","      <td>2</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1.0</td>\n","      <td>2023-08-19</td>\n","      <td>Genoa</td>\n","      <td>Fiorentina</td>\n","      <td>1</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1.0</td>\n","      <td>2023-08-20</td>\n","      <td>Sassuolo</td>\n","      <td>Atalanta</td>\n","      <td>0</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>416</th>\n","      <td>38.0</td>\n","      <td>2024-05-26</td>\n","      <td>Lazio</td>\n","      <td>Sassuolo</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>417</th>\n","      <td>38.0</td>\n","      <td>2024-05-26</td>\n","      <td>Empoli</td>\n","      <td>Roma</td>\n","      <td>2</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>418</th>\n","      <td>38.0</td>\n","      <td>2024-05-26</td>\n","      <td>Frosinone</td>\n","      <td>Udinese</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>419</th>\n","      <td>38.0</td>\n","      <td>2024-05-26</td>\n","      <td>Hellas Verona</td>\n","      <td>Inter</td>\n","      <td>2</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>421</th>\n","      <td>29.0</td>\n","      <td>2024-06-02</td>\n","      <td>Atalanta</td>\n","      <td>Fiorentina</td>\n","      <td>2</td>\n","      <td>3</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>380 rows × 6 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0819ded5-81a7-4ea0-bb0e-41767b043048')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-0819ded5-81a7-4ea0-bb0e-41767b043048 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-0819ded5-81a7-4ea0-bb0e-41767b043048');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-b53097b1-732d-4cb1-9de5-f31ab370aa69\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b53097b1-732d-4cb1-9de5-f31ab370aa69')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-b53097b1-732d-4cb1-9de5-f31ab370aa69 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_14ddcbf1-8508-409a-bb74-6188ffa1f6d2\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('resultados')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_14ddcbf1-8508-409a-bb74-6188ffa1f6d2 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('resultados');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"resultados","summary":"{\n  \"name\": \"resultados\",\n  \"rows\": 380,\n  \"fields\": [\n    {\n      \"column\": \"Sem\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 10.980313398163995,\n        \"min\": 1.0,\n        \"max\": 38.0,\n        \"num_unique_values\": 38,\n        \"samples\": [\n          34.0,\n          37.0,\n          5.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Data\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"num_unique_values\": 135,\n        \"samples\": [\n          \"2024-03-17\",\n          \"2024-01-27\",\n          \"2024-04-12\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Em casa\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 20,\n        \"samples\": [\n          \"Frosinone\",\n          \"Salernitana\",\n          \"Napoli\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Visitante\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 20,\n        \"samples\": [\n          \"Napoli\",\n          \"Udinese\",\n          \"Sassuolo\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CasaResul\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 7,\n        \"samples\": [\n          \"1\",\n          \"0\",\n          \"5\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"VisiResul\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 7,\n        \"samples\": [\n          \"3\",\n          \"1\",\n          \"5\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":4}]},{"cell_type":"code","source":["resultados[\"Vencedor\"] = np.where(resultados[\"CasaResul\"] > resultados[\"VisiResul\"], \"C\",\n","                                  np.where(resultados[\"CasaResul\"] < resultados[\"VisiResul\"], \"V\", \"E\"))\n","resultados"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"_RB-bCbcNzfM","executionInfo":{"status":"ok","timestamp":1737842416891,"user_tz":180,"elapsed":19,"user":{"displayName":"Lucas Calmon","userId":"09752934338034803828"}},"outputId":"d6bc6879-45fb-46e2-8de7-4b342879bcee"},"execution_count":5,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      Sem        Data        Em casa      Visitante CasaResul VisiResul  \\\n","0     1.0  2023-08-19      Frosinone         Napoli         1         3   \n","1     1.0  2023-08-19         Empoli  Hellas Verona         0         1   \n","2     1.0  2023-08-19          Inter          Monza         2         0   \n","3     1.0  2023-08-19          Genoa     Fiorentina         1         4   \n","4     1.0  2023-08-20       Sassuolo       Atalanta         0         2   \n","..    ...         ...            ...            ...       ...       ...   \n","416  38.0  2024-05-26          Lazio       Sassuolo         1         1   \n","417  38.0  2024-05-26         Empoli           Roma         2         1   \n","418  38.0  2024-05-26      Frosinone        Udinese         0         1   \n","419  38.0  2024-05-26  Hellas Verona          Inter         2         2   \n","421  29.0  2024-06-02       Atalanta     Fiorentina         2         3   \n","\n","    Vencedor  \n","0          V  \n","1          V  \n","2          C  \n","3          V  \n","4          V  \n","..       ...  \n","416        E  \n","417        C  \n","418        V  \n","419        E  \n","421        V  \n","\n","[380 rows x 7 columns]"],"text/html":["\n","  <div id=\"df-182e12d5-3b18-4eb6-bdf2-8ed932f4f865\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Sem</th>\n","      <th>Data</th>\n","      <th>Em casa</th>\n","      <th>Visitante</th>\n","      <th>CasaResul</th>\n","      <th>VisiResul</th>\n","      <th>Vencedor</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1.0</td>\n","      <td>2023-08-19</td>\n","      <td>Frosinone</td>\n","      <td>Napoli</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>V</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1.0</td>\n","      <td>2023-08-19</td>\n","      <td>Empoli</td>\n","      <td>Hellas Verona</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>V</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1.0</td>\n","      <td>2023-08-19</td>\n","      <td>Inter</td>\n","      <td>Monza</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>C</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1.0</td>\n","      <td>2023-08-19</td>\n","      <td>Genoa</td>\n","      <td>Fiorentina</td>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>V</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1.0</td>\n","      <td>2023-08-20</td>\n","      <td>Sassuolo</td>\n","      <td>Atalanta</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>V</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>416</th>\n","      <td>38.0</td>\n","      <td>2024-05-26</td>\n","      <td>Lazio</td>\n","      <td>Sassuolo</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>E</td>\n","    </tr>\n","    <tr>\n","      <th>417</th>\n","      <td>38.0</td>\n","      <td>2024-05-26</td>\n","      <td>Empoli</td>\n","      <td>Roma</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>C</td>\n","    </tr>\n","    <tr>\n","      <th>418</th>\n","      <td>38.0</td>\n","      <td>2024-05-26</td>\n","      <td>Frosinone</td>\n","      <td>Udinese</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>V</td>\n","    </tr>\n","    <tr>\n","      <th>419</th>\n","      <td>38.0</td>\n","      <td>2024-05-26</td>\n","      <td>Hellas Verona</td>\n","      <td>Inter</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>E</td>\n","    </tr>\n","    <tr>\n","      <th>421</th>\n","      <td>29.0</td>\n","      <td>2024-06-02</td>\n","      <td>Atalanta</td>\n","      <td>Fiorentina</td>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>V</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>380 rows × 7 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-182e12d5-3b18-4eb6-bdf2-8ed932f4f865')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-182e12d5-3b18-4eb6-bdf2-8ed932f4f865 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-182e12d5-3b18-4eb6-bdf2-8ed932f4f865');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-6ea6fb48-6d8f-41ec-8ec6-cd0ef6598e8a\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-6ea6fb48-6d8f-41ec-8ec6-cd0ef6598e8a')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-6ea6fb48-6d8f-41ec-8ec6-cd0ef6598e8a button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_c55186fe-ec76-4996-ae8a-87c54627eaa3\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('resultados')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_c55186fe-ec76-4996-ae8a-87c54627eaa3 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('resultados');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"resultados","summary":"{\n  \"name\": \"resultados\",\n  \"rows\": 380,\n  \"fields\": [\n    {\n      \"column\": \"Sem\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 10.980313398163995,\n        \"min\": 1.0,\n        \"max\": 38.0,\n        \"num_unique_values\": 38,\n        \"samples\": [\n          34.0,\n          37.0,\n          5.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Data\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"num_unique_values\": 135,\n        \"samples\": [\n          \"2024-03-17\",\n          \"2024-01-27\",\n          \"2024-04-12\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Em casa\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 20,\n        \"samples\": [\n          \"Frosinone\",\n          \"Salernitana\",\n          \"Napoli\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Visitante\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 20,\n        \"samples\": [\n          \"Napoli\",\n          \"Udinese\",\n          \"Sassuolo\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CasaResul\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 7,\n        \"samples\": [\n          \"1\",\n          \"0\",\n          \"5\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"VisiResul\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 7,\n        \"samples\": [\n          \"3\",\n          \"1\",\n          \"5\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Vencedor\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"V\",\n          \"C\",\n          \"E\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["#verificando rodada atrasada\n","resultados[resultados.loc[:,\"Sem\"] == 15]\n","resultados.dtypes\n","print(resultados['CasaResul'].value_counts())\n","#transformar casa resul e visi resul em numeros\n","resultados['CasaResul'] = resultados['CasaResul'].astype(int)\n","resultados['VisiResul'] = resultados['VisiResul'].astype(int)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"uD9SDB4qN0_2","executionInfo":{"status":"ok","timestamp":1737842416891,"user_tz":180,"elapsed":18,"user":{"displayName":"Lucas Calmon","userId":"09752934338034803828"}},"outputId":"0391afe4-7f29-4cf5-9186-f048beb1bd3c"},"execution_count":6,"outputs":[{"output_type":"stream","name":"stdout","text":["CasaResul\n","1    136\n","2     96\n","0     86\n","3     39\n","4     17\n","5      5\n","7      1\n","Name: count, dtype: int64\n"]}]},{"cell_type":"code","source":["resultados['VCasaValor'] = np.where(resultados['Vencedor']=='C',1,np.where(resultados['Vencedor']=='E',0.5,0))\n","resultados['VVisValor'] = np.where(resultados['Vencedor']=='V',1,np.where(resultados['Vencedor']=='E',0.5,0))\n","resultados['count'] = 1"],"metadata":{"id":"P9VkZXlvN2mv","executionInfo":{"status":"ok","timestamp":1737842416891,"user_tz":180,"elapsed":16,"user":{"displayName":"Lucas Calmon","userId":"09752934338034803828"}}},"execution_count":7,"outputs":[]},{"cell_type":"code","source":["primeiro = resultados[resultados.loc[:, \"Sem\"] < 20]\n","segundo = resultados[resultados.loc[:, \"Sem\"] > 19]\n","print(primeiro.shape)\n","print(segundo.shape)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"U25igxIjN4Dz","executionInfo":{"status":"ok","timestamp":1737842416891,"user_tz":180,"elapsed":16,"user":{"displayName":"Lucas Calmon","userId":"09752934338034803828"}},"outputId":"41dd503b-1b71-4df5-b5f6-eab3acd2a8ee"},"execution_count":8,"outputs":[{"output_type":"stream","name":"stdout","text":["(190, 10)\n","(190, 10)\n"]}]},{"cell_type":"code","source":["PrimeiroTurnoC = primeiro.groupby(['Em casa'])[['count', 'VCasaValor','CasaResul','VisiResul']].sum().reset_index()\n","PrimeiroTurnoC = PrimeiroTurnoC.rename(columns={'Em casa':'time', 'CasaResul': 'GolsCasaC', 'VisiResul': 'GolsVisiC'})\n","PrimeiroTurnoV = primeiro.groupby(['Visitante'])[['count', 'VVisValor','CasaResul','VisiResul']].sum().reset_index()\n","PrimeiroTurnoV = PrimeiroTurnoV.rename(columns={'Visitante':'time', 'CasaResul': 'GolsCasaV', 'VisiResul': 'GolsVisiV'})"],"metadata":{"id":"82Uzww1uN6Gc","executionInfo":{"status":"ok","timestamp":1737842416891,"user_tz":180,"elapsed":15,"user":{"displayName":"Lucas Calmon","userId":"09752934338034803828"}}},"execution_count":9,"outputs":[]},{"cell_type":"code","source":["SegundoTurnoC = segundo.groupby(['Em casa'])[['count', 'VCasaValor','CasaResul','VisiResul']].sum().reset_index()\n","SegundoTurnoC = SegundoTurnoC.rename(columns={'Em casa':'time', 'CasaResul': 'GolsCasaC', 'VisiResul': 'GolsVisiC'})\n","SegundoTurnoV = segundo.groupby(['Visitante'])[['count', 'VVisValor','CasaResul','VisiResul']].sum().reset_index()\n","SegundoTurnoV = SegundoTurnoV.rename(columns={'Visitante':'time', 'CasaResul': 'GolsCasaV', 'VisiResul': 'GolsVisiV'})"],"metadata":{"id":"YohrK4atN7kW","executionInfo":{"status":"ok","timestamp":1737842417131,"user_tz":180,"elapsed":255,"user":{"displayName":"Lucas Calmon","userId":"09752934338034803828"}}},"execution_count":10,"outputs":[]},{"cell_type":"code","source":["PrimeiroTurno = pd.merge(PrimeiroTurnoC, PrimeiroTurnoV, on=['time'])\n","SegundoTurno = pd.merge(SegundoTurnoC, SegundoTurnoV, on=['time'])"],"metadata":{"id":"ph6Faop5N812","executionInfo":{"status":"ok","timestamp":1737842417131,"user_tz":180,"elapsed":4,"user":{"displayName":"Lucas Calmon","userId":"09752934338034803828"}}},"execution_count":11,"outputs":[]},{"cell_type":"code","source":["PrimeiroTurno['W'] = PrimeiroTurno['VCasaValor']+PrimeiroTurno['VVisValor'] #win value\n","PrimeiroTurno['G'] = PrimeiroTurno['count_x'] + PrimeiroTurno['count_y']  #games\n","PrimeiroTurno['GF'] = PrimeiroTurno['GolsCasaC']+PrimeiroTurno['GolsVisiV'] #goals for\n","PrimeiroTurno['GA'] = PrimeiroTurno['GolsVisiC']+PrimeiroTurno['GolsCasaV'] #goals against\n","\n","SegundoTurno['W'] = SegundoTurno['VCasaValor']+SegundoTurno['VVisValor'] #win value\n","SegundoTurno['G'] = SegundoTurno['count_x'] + SegundoTurno['count_y']  #games\n","SegundoTurno['GF'] = SegundoTurno['GolsCasaC']+SegundoTurno['GolsVisiV'] #goals for\n","SegundoTurno['GA'] = SegundoTurno['GolsVisiC']+SegundoTurno['GolsCasaV'] #goals against"],"metadata":{"id":"yNL52klfN9KO","executionInfo":{"status":"ok","timestamp":1737842417131,"user_tz":180,"elapsed":4,"user":{"displayName":"Lucas Calmon","userId":"09752934338034803828"}}},"execution_count":12,"outputs":[]},{"cell_type":"code","source":["PrimeiroTurno['wpc'] = PrimeiroTurno['W']/PrimeiroTurno['G'] #win percentage\n","PrimeiroTurno['pyth'] = PrimeiroTurno['GF']**2/(PrimeiroTurno['GF']**2 + PrimeiroTurno['GA']**2)\n","\n","SegundoTurno['wpc'] = SegundoTurno['W']/SegundoTurno['G'] #win percentage\n","SegundoTurno['pyth'] = SegundoTurno['GF']**2/(SegundoTurno['GF']**2 + SegundoTurno['GA']**2)"],"metadata":{"id":"x7udVn9AN-tK","executionInfo":{"status":"ok","timestamp":1737842417131,"user_tz":180,"elapsed":4,"user":{"displayName":"Lucas Calmon","userId":"09752934338034803828"}}},"execution_count":13,"outputs":[]},{"cell_type":"code","source":["sns.regplot(x=\"pyth\", y = \"wpc\", data = PrimeiroTurno,ci=None)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":471},"id":"T40swRYmOALJ","executionInfo":{"status":"ok","timestamp":1737842418144,"user_tz":180,"elapsed":1017,"user":{"displayName":"Lucas Calmon","userId":"09752934338034803828"}},"outputId":"93e8189a-bea4-417d-e4c5-aaa58534107e"},"execution_count":14,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: xlabel='pyth', ylabel='wpc'>"]},"metadata":{},"execution_count":14},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["sns.regplot(x=\"pyth\", y = \"wpc\", data = SegundoTurno,ci=None)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":466},"id":"9u8m_drpOBhn","executionInfo":{"status":"ok","timestamp":1737842419056,"user_tz":180,"elapsed":914,"user":{"displayName":"Lucas Calmon","userId":"09752934338034803828"}},"outputId":"049a2e9c-49f6-47da-8a4c-83571ec89465"},"execution_count":15,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: xlabel='pyth', ylabel='wpc'>"]},"metadata":{},"execution_count":15},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["Bra = pd.merge(PrimeiroTurno, SegundoTurno, on=['time'])\n","Bra"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":444},"id":"fzoKOvOAOCyr","executionInfo":{"status":"ok","timestamp":1737842419056,"user_tz":180,"elapsed":7,"user":{"displayName":"Lucas Calmon","userId":"09752934338034803828"}},"outputId":"107f13ad-0b67-4e0a-b6ab-f2e611566216"},"execution_count":16,"outputs":[{"output_type":"execute_result","data":{"text/plain":["           time  count_x_x  VCasaValor_x  GolsCasaC_x  GolsVisiC_x  count_y_x  \\\n","0      Atalanta          9           6.5           17            7         10   \n","1       Bologna         10           8.0           14            5          9   \n","2      Cagliari          9           4.5           11           15         10   \n","3        Empoli         10           2.0            5           17          9   \n","4    Fiorentina          9           6.5           15            8         10   \n","..          ...        ...           ...          ...          ...        ...   \n","15         Roma         10           7.5           22            8          9   \n","16  Salernitana         10           3.0           10           20          9   \n","17     Sassuolo         10           4.0           13           15          9   \n","18       Torino         10           7.0           12            6          9   \n","19      Udinese         10           4.0           13           16          9   \n","\n","    VVisValor_x  GolsCasaV_x  GolsVisiV_x   W_x  G_x  GF_x  GA_x     wpc_x  \\\n","0           4.0           14           13  10.5   19    30    21  0.552632   \n","1           4.0           11            8  12.0   19    22    16  0.631579   \n","2           1.5           17            6   6.0   19    17    32  0.315789   \n","3           3.0           16            5   5.0   19    10    33  0.263158   \n","4           5.0           11           12  11.5   19    27    19  0.605263   \n","..          ...          ...          ...   ...  ...   ...   ...       ...   \n","15          3.0           13            9  10.5   19    31    21  0.552632   \n","16          2.0           18            6   5.0   19    16    38  0.263158   \n","17          3.0           18           13   7.0   19    26    33  0.368421   \n","18          3.0           12            6  10.0   19    18    18  0.526316   \n","19          3.5           14            6   7.5   19    19    30  0.394737   \n","\n","      pyth_x  count_x_y  VCasaValor_y  GolsCasaC_y  GolsVisiC_y  count_y_y  \\\n","0   0.671141         10           7.5           25            9          9   \n","1   0.654054          9           6.5           19            7         10   \n","2   0.220107         10           5.0           17           17          9   \n","3   0.084104          9           5.5           10            6         10   \n","4   0.668807         10           6.0           22           14          9   \n","..       ...        ...           ...          ...          ...        ...   \n","15  0.685449          9           6.5           16           11         10   \n","16  0.150588          9           0.5            7           18         10   \n","17  0.383003          9           3.5           10           19         10   \n","18  0.500000          9           5.5            6            3         10   \n","19  0.286281          9           2.5            8           13         10   \n","\n","    VVisValor_y  GolsCasaV_y  GolsVisiV_y   W_y  G_y  GF_y  GA_y     wpc_y  \\\n","0           6.0           12           17  13.5   19    42    21  0.710526   \n","1           6.5            9           13  13.0   19    32    16  0.684211   \n","2           3.0           19            8   8.0   19    25    36  0.421053   \n","3           3.0           15            9   8.5   19    19    21  0.447368   \n","4           4.0           13           12  10.0   19    34    27  0.526316   \n","..          ...          ...          ...   ...  ...   ...   ...       ...   \n","15          5.5           14           18  12.0   19    34    25  0.631579   \n","16          2.0           25            9   2.5   19    16    43  0.131579   \n","17          1.0           23            7   4.5   19    17    42  0.236842   \n","18          4.5           15           12  10.0   19    18    18  0.526316   \n","19          5.5           10           10   8.0   19    18    23  0.421053   \n","\n","      pyth_y  \n","0   0.800000  \n","1   0.800000  \n","2   0.325351  \n","3   0.450125  \n","4   0.613263  \n","..       ...  \n","15  0.649074  \n","16  0.121615  \n","17  0.140770  \n","18  0.500000  \n","19  0.379836  \n","\n","[20 rows x 29 columns]"],"text/html":["\n","  <div id=\"df-b45fa77c-0d11-4dad-bf64-56fb7e8ad1b3\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>time</th>\n","      <th>count_x_x</th>\n","      <th>VCasaValor_x</th>\n","      <th>GolsCasaC_x</th>\n","      <th>GolsVisiC_x</th>\n","      <th>count_y_x</th>\n","      <th>VVisValor_x</th>\n","      <th>GolsCasaV_x</th>\n","      <th>GolsVisiV_x</th>\n","      <th>W_x</th>\n","      <th>G_x</th>\n","      <th>GF_x</th>\n","      <th>GA_x</th>\n","      <th>wpc_x</th>\n","      <th>pyth_x</th>\n","      <th>count_x_y</th>\n","      <th>VCasaValor_y</th>\n","      <th>GolsCasaC_y</th>\n","      <th>GolsVisiC_y</th>\n","      <th>count_y_y</th>\n","      <th>VVisValor_y</th>\n","      <th>GolsCasaV_y</th>\n","      <th>GolsVisiV_y</th>\n","      <th>W_y</th>\n","      <th>G_y</th>\n","      <th>GF_y</th>\n","      <th>GA_y</th>\n","      <th>wpc_y</th>\n","      <th>pyth_y</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Atalanta</td>\n","      <td>9</td>\n","      <td>6.5</td>\n","      <td>17</td>\n","      <td>7</td>\n","      <td>10</td>\n","      <td>4.0</td>\n","      <td>14</td>\n","      <td>13</td>\n","      <td>10.5</td>\n","      <td>19</td>\n","      <td>30</td>\n","      <td>21</td>\n","      <td>0.552632</td>\n","      <td>0.671141</td>\n","      <td>10</td>\n","      <td>7.5</td>\n","      <td>25</td>\n","      <td>9</td>\n","      <td>9</td>\n","      <td>6.0</td>\n","      <td>12</td>\n","      <td>17</td>\n","      <td>13.5</td>\n","      <td>19</td>\n","      <td>42</td>\n","      <td>21</td>\n","      <td>0.710526</td>\n","      <td>0.800000</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Bologna</td>\n","      <td>10</td>\n","      <td>8.0</td>\n","      <td>14</td>\n","      <td>5</td>\n","      <td>9</td>\n","      <td>4.0</td>\n","      <td>11</td>\n","      <td>8</td>\n","      <td>12.0</td>\n","      <td>19</td>\n","      <td>22</td>\n","      <td>16</td>\n","      <td>0.631579</td>\n","      <td>0.654054</td>\n","      <td>9</td>\n","      <td>6.5</td>\n","      <td>19</td>\n","      <td>7</td>\n","      <td>10</td>\n","      <td>6.5</td>\n","      <td>9</td>\n","      <td>13</td>\n","      <td>13.0</td>\n","      <td>19</td>\n","      <td>32</td>\n","      <td>16</td>\n","      <td>0.684211</td>\n","      <td>0.800000</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Cagliari</td>\n","      <td>9</td>\n","      <td>4.5</td>\n","      <td>11</td>\n","      <td>15</td>\n","      <td>10</td>\n","      <td>1.5</td>\n","      <td>17</td>\n","      <td>6</td>\n","      <td>6.0</td>\n","      <td>19</td>\n","      <td>17</td>\n","      <td>32</td>\n","      <td>0.315789</td>\n","      <td>0.220107</td>\n","      <td>10</td>\n","      <td>5.0</td>\n","      <td>17</td>\n","      <td>17</td>\n","      <td>9</td>\n","      <td>3.0</td>\n","      <td>19</td>\n","      <td>8</td>\n","      <td>8.0</td>\n","      <td>19</td>\n","      <td>25</td>\n","      <td>36</td>\n","      <td>0.421053</td>\n","      <td>0.325351</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Empoli</td>\n","      <td>10</td>\n","      <td>2.0</td>\n","      <td>5</td>\n","      <td>17</td>\n","      <td>9</td>\n","      <td>3.0</td>\n","      <td>16</td>\n","      <td>5</td>\n","      <td>5.0</td>\n","      <td>19</td>\n","      <td>10</td>\n","      <td>33</td>\n","      <td>0.263158</td>\n","      <td>0.084104</td>\n","      <td>9</td>\n","      <td>5.5</td>\n","      <td>10</td>\n","      <td>6</td>\n","      <td>10</td>\n","      <td>3.0</td>\n","      <td>15</td>\n","      <td>9</td>\n","      <td>8.5</td>\n","      <td>19</td>\n","      <td>19</td>\n","      <td>21</td>\n","      <td>0.447368</td>\n","      <td>0.450125</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Fiorentina</td>\n","      <td>9</td>\n","      <td>6.5</td>\n","      <td>15</td>\n","      <td>8</td>\n","      <td>10</td>\n","      <td>5.0</td>\n","      <td>11</td>\n","      <td>12</td>\n","      <td>11.5</td>\n","      <td>19</td>\n","      <td>27</td>\n","      <td>19</td>\n","      <td>0.605263</td>\n","      <td>0.668807</td>\n","      <td>10</td>\n","      <td>6.0</td>\n","      <td>22</td>\n","      <td>14</td>\n","      <td>9</td>\n","      <td>4.0</td>\n","      <td>13</td>\n","      <td>12</td>\n","      <td>10.0</td>\n","      <td>19</td>\n","      <td>34</td>\n","      <td>27</td>\n","      <td>0.526316</td>\n","      <td>0.613263</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>Roma</td>\n","      <td>10</td>\n","      <td>7.5</td>\n","      <td>22</td>\n","      <td>8</td>\n","      <td>9</td>\n","      <td>3.0</td>\n","      <td>13</td>\n","      <td>9</td>\n","      <td>10.5</td>\n","      <td>19</td>\n","      <td>31</td>\n","      <td>21</td>\n","      <td>0.552632</td>\n","      <td>0.685449</td>\n","      <td>9</td>\n","      <td>6.5</td>\n","      <td>16</td>\n","      <td>11</td>\n","      <td>10</td>\n","      <td>5.5</td>\n","      <td>14</td>\n","      <td>18</td>\n","      <td>12.0</td>\n","      <td>19</td>\n","      <td>34</td>\n","      <td>25</td>\n","      <td>0.631579</td>\n","      <td>0.649074</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>Salernitana</td>\n","      <td>10</td>\n","      <td>3.0</td>\n","      <td>10</td>\n","      <td>20</td>\n","      <td>9</td>\n","      <td>2.0</td>\n","      <td>18</td>\n","      <td>6</td>\n","      <td>5.0</td>\n","      <td>19</td>\n","      <td>16</td>\n","      <td>38</td>\n","      <td>0.263158</td>\n","      <td>0.150588</td>\n","      <td>9</td>\n","      <td>0.5</td>\n","      <td>7</td>\n","      <td>18</td>\n","      <td>10</td>\n","      <td>2.0</td>\n","      <td>25</td>\n","      <td>9</td>\n","      <td>2.5</td>\n","      <td>19</td>\n","      <td>16</td>\n","      <td>43</td>\n","      <td>0.131579</td>\n","      <td>0.121615</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>Sassuolo</td>\n","      <td>10</td>\n","      <td>4.0</td>\n","      <td>13</td>\n","      <td>15</td>\n","      <td>9</td>\n","      <td>3.0</td>\n","      <td>18</td>\n","      <td>13</td>\n","      <td>7.0</td>\n","      <td>19</td>\n","      <td>26</td>\n","      <td>33</td>\n","      <td>0.368421</td>\n","      <td>0.383003</td>\n","      <td>9</td>\n","      <td>3.5</td>\n","      <td>10</td>\n","      <td>19</td>\n","      <td>10</td>\n","      <td>1.0</td>\n","      <td>23</td>\n","      <td>7</td>\n","      <td>4.5</td>\n","      <td>19</td>\n","      <td>17</td>\n","      <td>42</td>\n","      <td>0.236842</td>\n","      <td>0.140770</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>Torino</td>\n","      <td>10</td>\n","      <td>7.0</td>\n","      <td>12</td>\n","      <td>6</td>\n","      <td>9</td>\n","      <td>3.0</td>\n","      <td>12</td>\n","      <td>6</td>\n","      <td>10.0</td>\n","      <td>19</td>\n","      <td>18</td>\n","      <td>18</td>\n","      <td>0.526316</td>\n","      <td>0.500000</td>\n","      <td>9</td>\n","      <td>5.5</td>\n","      <td>6</td>\n","      <td>3</td>\n","      <td>10</td>\n","      <td>4.5</td>\n","      <td>15</td>\n","      <td>12</td>\n","      <td>10.0</td>\n","      <td>19</td>\n","      <td>18</td>\n","      <td>18</td>\n","      <td>0.526316</td>\n","      <td>0.500000</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>Udinese</td>\n","      <td>10</td>\n","      <td>4.0</td>\n","      <td>13</td>\n","      <td>16</td>\n","      <td>9</td>\n","      <td>3.5</td>\n","      <td>14</td>\n","      <td>6</td>\n","      <td>7.5</td>\n","      <td>19</td>\n","      <td>19</td>\n","      <td>30</td>\n","      <td>0.394737</td>\n","      <td>0.286281</td>\n","      <td>9</td>\n","      <td>2.5</td>\n","      <td>8</td>\n","      <td>13</td>\n","      <td>10</td>\n","      <td>5.5</td>\n","      <td>10</td>\n","      <td>10</td>\n","      <td>8.0</td>\n","      <td>19</td>\n","      <td>18</td>\n","      <td>23</td>\n","      <td>0.421053</td>\n","      <td>0.379836</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>20 rows × 29 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b45fa77c-0d11-4dad-bf64-56fb7e8ad1b3')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-b45fa77c-0d11-4dad-bf64-56fb7e8ad1b3 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-b45fa77c-0d11-4dad-bf64-56fb7e8ad1b3');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-e15c8933-5214-43cd-ab7e-ceae3ca3d284\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e15c8933-5214-43cd-ab7e-ceae3ca3d284')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-e15c8933-5214-43cd-ab7e-ceae3ca3d284 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_8ae4c901-80d0-43f7-98b2-a1a0bc40e1e8\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('Bra')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_8ae4c901-80d0-43f7-98b2-a1a0bc40e1e8 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('Bra');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"Bra"}},"metadata":{},"execution_count":16}]},{"cell_type":"code","source":["sns.regplot(x=\"wpc_x\", y = \"wpc_y\", data = Bra,ci=None)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":466},"id":"rYLpz-NlOEUX","executionInfo":{"status":"ok","timestamp":1737842419452,"user_tz":180,"elapsed":401,"user":{"displayName":"Lucas Calmon","userId":"09752934338034803828"}},"outputId":"59de4933-f132-4faa-f74d-3d9f7e3c1901"},"execution_count":17,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: xlabel='wpc_x', ylabel='wpc_y'>"]},"metadata":{},"execution_count":17},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["sns.regplot(x=\"pyth_x\", y = \"wpc_y\", data = Bra, ci=None)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":467},"id":"6jw0SswjOF0n","executionInfo":{"status":"ok","timestamp":1737842420196,"user_tz":180,"elapsed":748,"user":{"displayName":"Lucas Calmon","userId":"09752934338034803828"}},"outputId":"5ce1451f-f78a-4817-c2bf-1c07d58cbcad"},"execution_count":18,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: xlabel='pyth_x', ylabel='wpc_y'>"]},"metadata":{},"execution_count":18},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["dd = Bra.loc[:,['pyth_x', 'wpc_x', 'pyth_y', 'wpc_y']]\n","dd"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"nX4YLFsOOHUI","executionInfo":{"status":"ok","timestamp":1737842420196,"user_tz":180,"elapsed":16,"user":{"displayName":"Lucas Calmon","userId":"09752934338034803828"}},"outputId":"c168f3ca-59ec-4d98-80a1-0c0aa00bbbf8"},"execution_count":19,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      pyth_x     wpc_x    pyth_y     wpc_y\n","0   0.671141  0.552632  0.800000  0.710526\n","1   0.654054  0.631579  0.800000  0.684211\n","2   0.220107  0.315789  0.325351  0.421053\n","3   0.084104  0.263158  0.450125  0.447368\n","4   0.668807  0.605263  0.613263  0.526316\n","..       ...       ...       ...       ...\n","15  0.685449  0.552632  0.649074  0.631579\n","16  0.150588  0.263158  0.121615  0.131579\n","17  0.383003  0.368421  0.140770  0.236842\n","18  0.500000  0.526316  0.500000  0.526316\n","19  0.286281  0.394737  0.379836  0.421053\n","\n","[20 rows x 4 columns]"],"text/html":["\n","  <div id=\"df-692db3e0-3d98-47a8-8254-4b7de2b12a2a\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>pyth_x</th>\n","      <th>wpc_x</th>\n","      <th>pyth_y</th>\n","      <th>wpc_y</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0.671141</td>\n","      <td>0.552632</td>\n","      <td>0.800000</td>\n","      <td>0.710526</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0.654054</td>\n","      <td>0.631579</td>\n","      <td>0.800000</td>\n","      <td>0.684211</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0.220107</td>\n","      <td>0.315789</td>\n","      <td>0.325351</td>\n","      <td>0.421053</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0.084104</td>\n","      <td>0.263158</td>\n","      <td>0.450125</td>\n","      <td>0.447368</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0.668807</td>\n","      <td>0.605263</td>\n","      <td>0.613263</td>\n","      <td>0.526316</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>0.685449</td>\n","      <td>0.552632</td>\n","      <td>0.649074</td>\n","      <td>0.631579</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>0.150588</td>\n","      <td>0.263158</td>\n","      <td>0.121615</td>\n","      <td>0.131579</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>0.383003</td>\n","      <td>0.368421</td>\n","      <td>0.140770</td>\n","      <td>0.236842</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>0.500000</td>\n","      <td>0.526316</td>\n","      <td>0.500000</td>\n","      <td>0.526316</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>0.286281</td>\n","      <td>0.394737</td>\n","      <td>0.379836</td>\n","      <td>0.421053</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>20 rows × 4 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-692db3e0-3d98-47a8-8254-4b7de2b12a2a')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-692db3e0-3d98-47a8-8254-4b7de2b12a2a button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-692db3e0-3d98-47a8-8254-4b7de2b12a2a');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-d43fa9af-35a4-4095-a521-d25f49ac86ae\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d43fa9af-35a4-4095-a521-d25f49ac86ae')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-d43fa9af-35a4-4095-a521-d25f49ac86ae button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_bc9bb9d8-81a8-4724-a144-bc3fd6e691a3\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('dd')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_bc9bb9d8-81a8-4724-a144-bc3fd6e691a3 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('dd');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"dd","summary":"{\n  \"name\": \"dd\",\n  \"rows\": 20,\n  \"fields\": [\n    {\n      \"column\": \"pyth_x\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.2355164680440935,\n        \"min\": 0.08410428931875526,\n        \"max\": 0.9598413485374319,\n        \"num_unique_values\": 20,\n        \"samples\": [\n          0.6711409395973155,\n          0.3830028328611898,\n          0.6854493580599144\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"wpc_x\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.1747678776296538,\n        \"min\": 0.2631578947368421,\n        \"max\": 0.868421052631579,\n        \"num_unique_values\": 15,\n        \"samples\": [\n          0.8421052631578947,\n          0.7105263157894737,\n          0.5526315789473685\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"pyth_y\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.23380695554142505,\n        \"min\": 0.12161520190023753,\n        \"max\": 0.922971741112124,\n        \"num_unique_values\": 19,\n        \"samples\": [\n          0.8,\n          0.5863039399624765,\n          0.6665344964314036\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"wpc_y\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.1686113882939967,\n        \"min\": 0.13157894736842105,\n        \"max\": 0.8421052631578947,\n        \"num_unique_values\": 14,\n        \"samples\": [\n          0.5789473684210527,\n          0.631578947368421,\n          0.7105263157894737\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":19}]},{"cell_type":"code","source":["rename_dict = {\n","    'pyth_x': 'pythagorean_x',\n","    'wpc_x': 'win_percentage_x',\n","    'pyth_y': 'pythagorean_y',\n","    'wpc_y': 'win_percentage_y'\n","}\n","\n","# Aplicando a renomeação\n","dd.rename(columns=rename_dict, inplace=True)"],"metadata":{"id":"HPhIfLc2eeGk","executionInfo":{"status":"ok","timestamp":1737842440157,"user_tz":180,"elapsed":3,"user":{"displayName":"Lucas Calmon","userId":"09752934338034803828"}}},"execution_count":22,"outputs":[]},{"cell_type":"code","source":["cor_matrix = dd.corr()\n","\n","# View the correlation matrix\n","cor_matrix"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":195},"id":"dBbarJ-gOJYE","executionInfo":{"status":"ok","timestamp":1737842440395,"user_tz":180,"elapsed":4,"user":{"displayName":"Lucas Calmon","userId":"09752934338034803828"}},"outputId":"1d07482a-f383-4c0d-b5cf-393edc3109c0"},"execution_count":23,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                  pythagorean_x  win_percentage_x  pythagorean_y  \\\n","pythagorean_x          1.000000          0.967994       0.768372   \n","win_percentage_x       0.967994          1.000000       0.741660   \n","pythagorean_y          0.768372          0.741660       1.000000   \n","win_percentage_y       0.767734          0.735949       0.961342   \n","\n","                  win_percentage_y  \n","pythagorean_x             0.767734  \n","win_percentage_x          0.735949  \n","pythagorean_y             0.961342  \n","win_percentage_y          1.000000  "],"text/html":["\n","  <div id=\"df-f263b941-4a82-4208-aab5-6d07e3b0032e\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>pythagorean_x</th>\n","      <th>win_percentage_x</th>\n","      <th>pythagorean_y</th>\n","      <th>win_percentage_y</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>pythagorean_x</th>\n","      <td>1.000000</td>\n","      <td>0.967994</td>\n","      <td>0.768372</td>\n","      <td>0.767734</td>\n","    </tr>\n","    <tr>\n","      <th>win_percentage_x</th>\n","      <td>0.967994</td>\n","      <td>1.000000</td>\n","      <td>0.741660</td>\n","      <td>0.735949</td>\n","    </tr>\n","    <tr>\n","      <th>pythagorean_y</th>\n","      <td>0.768372</td>\n","      <td>0.741660</td>\n","      <td>1.000000</td>\n","      <td>0.961342</td>\n","    </tr>\n","    <tr>\n","      <th>win_percentage_y</th>\n","      <td>0.767734</td>\n","      <td>0.735949</td>\n","      <td>0.961342</td>\n","      <td>1.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f263b941-4a82-4208-aab5-6d07e3b0032e')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-f263b941-4a82-4208-aab5-6d07e3b0032e button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-f263b941-4a82-4208-aab5-6d07e3b0032e');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-973dc3bf-1f6a-4a5f-b55b-bc67f1be02bb\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-973dc3bf-1f6a-4a5f-b55b-bc67f1be02bb')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-973dc3bf-1f6a-4a5f-b55b-bc67f1be02bb button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_2c2ea529-3e5d-42ce-b1a2-9277d20abc4f\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('cor_matrix')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_2c2ea529-3e5d-42ce-b1a2-9277d20abc4f button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('cor_matrix');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"cor_matrix","summary":"{\n  \"name\": \"cor_matrix\",\n  \"rows\": 4,\n  \"fields\": [\n    {\n      \"column\": \"pythagorean_x\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.12535846206866438,\n        \"min\": 0.7677336823504438,\n        \"max\": 1.0,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          0.9679940482813243,\n          0.7677336823504438,\n          1.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"win_percentage_x\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.1421828085889138,\n        \"min\": 0.7359488907816404,\n        \"max\": 1.0,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          1.0,\n          0.7359488907816404,\n          0.9679940482813243\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"pythagorean_y\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.1316866208668171,\n        \"min\": 0.7416601935694301,\n        \"max\": 1.0,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          0.7416601935694301,\n          0.961342163418922,\n          0.7683722429911206\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"win_percentage_y\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.13368548387599888,\n        \"min\": 0.7359488907816404,\n        \"max\": 1.0,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          0.7359488907816404,\n          1.0,\n          0.7677336823504438\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":23}]}]}