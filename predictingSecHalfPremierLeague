{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyNUjYk9fv1WKfK/LXuU+q5p"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":2,"metadata":{"id":"OhECiaz-NNRC","executionInfo":{"status":"ok","timestamp":1738539750397,"user_tz":180,"elapsed":5982,"user":{"displayName":"Lucas Calmon","userId":"09752934338034803828"}}},"outputs":[],"source":["import pandas as pd\n","import numpy as np\n","import statsmodels.formula.api as smf\n","import matplotlib.pyplot as plt\n","import seaborn as sns"]},{"cell_type":"code","source":["df = pd.read_html(\"https://fbref.com/pt/comps/9/2023-2024/cronograma/2023-2024-Premier-League-Resultados-e-Calendarios\")[0]\n","pd.set_option(\"display.max_columns\", None)\n","pd.set_option('display.max_rows', 10)\n","df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"E-zg3_SINq5s","executionInfo":{"status":"ok","timestamp":1738539756946,"user_tz":180,"elapsed":6551,"user":{"displayName":"Lucas Calmon","userId":"09752934338034803828"}},"outputId":"1a686f91-7828-45b5-a1ad-2abfa28397b4"},"execution_count":3,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      Sem  Dia        Data Horário         Em casa   xG Resultado  xG.1  \\\n","0     1.0  sex  2023-08-11   20:00         Burnley  0.3       0–3   1.9   \n","1     1.0  sáb  2023-08-12   12:30         Arsenal  0.8       2–1   1.2   \n","2     1.0  sáb  2023-08-12   15:00         Everton  2.7       0–1   1.5   \n","3     1.0  sáb  2023-08-12   15:00   Sheffield Utd  0.5       0–1   1.9   \n","4     1.0  sáb  2023-08-12   15:00        Brighton  4.0       4–1   1.5   \n","..    ...  ...         ...     ...             ...  ...       ...   ...   \n","418  38.0  dom  2024-05-19   16:00       Brentford  1.1       2–4   3.4   \n","419  38.0  dom  2024-05-19   16:00         Chelsea  1.1       2–1   2.2   \n","420  38.0  dom  2024-05-19   16:00  Crystal Palace  2.5       5–0   0.9   \n","421  38.0  dom  2024-05-19   16:00       Liverpool  4.5       2–0   0.5   \n","422  38.0  dom  2024-05-19   16:00         Burnley  1.2       1–2   1.7   \n","\n","           Visitante  Público                                   Local  \\\n","0    Manchester City   21.572                               Turf Moor   \n","1    Nott'ham Forest   59.984                        Emirates Stadium   \n","2             Fulham   39.940                           Goodison Park   \n","3     Crystal Palace   31.194                            Bramall Lane   \n","4         Luton Town   31.872  The American Express Community Stadium   \n","..               ...      ...                                     ...   \n","418    Newcastle Utd   17.124                 Gtech Community Stadium   \n","419      Bournemouth   39.724                         Stamford Bridge   \n","420      Aston Villa   25.191                           Selhurst Park   \n","421           Wolves   60.059                                 Anfield   \n","422  Nott'ham Forest   21.109                               Turf Moor   \n","\n","            Árbitro  Relatório da Partida  Notas  \n","0      Craig Pawson  Relatório da Partida    NaN  \n","1    Michael Oliver  Relatório da Partida    NaN  \n","2    Stuart Attwell  Relatório da Partida    NaN  \n","3       John Brooks  Relatório da Partida    NaN  \n","4       David Coote  Relatório da Partida    NaN  \n","..              ...                   ...    ...  \n","418    Simon Hooper  Relatório da Partida    NaN  \n","419  Anthony Taylor  Relatório da Partida    NaN  \n","420     Darren Bond  Relatório da Partida    NaN  \n","421  Chris Kavanagh  Relatório da Partida    NaN  \n","422    Graham Scott  Relatório da Partida    NaN  \n","\n","[423 rows x 14 columns]"],"text/html":["\n","  <div id=\"df-49cda543-3c96-426b-bf7e-a82b3dcf7dbc\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Sem</th>\n","      <th>Dia</th>\n","      <th>Data</th>\n","      <th>Horário</th>\n","      <th>Em casa</th>\n","      <th>xG</th>\n","      <th>Resultado</th>\n","      <th>xG.1</th>\n","      <th>Visitante</th>\n","      <th>Público</th>\n","      <th>Local</th>\n","      <th>Árbitro</th>\n","      <th>Relatório da Partida</th>\n","      <th>Notas</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1.0</td>\n","      <td>sex</td>\n","      <td>2023-08-11</td>\n","      <td>20:00</td>\n","      <td>Burnley</td>\n","      <td>0.3</td>\n","      <td>0–3</td>\n","      <td>1.9</td>\n","      <td>Manchester City</td>\n","      <td>21.572</td>\n","      <td>Turf Moor</td>\n","      <td>Craig Pawson</td>\n","      <td>Relatório da Partida</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1.0</td>\n","      <td>sáb</td>\n","      <td>2023-08-12</td>\n","      <td>12:30</td>\n","      <td>Arsenal</td>\n","      <td>0.8</td>\n","      <td>2–1</td>\n","      <td>1.2</td>\n","      <td>Nott'ham Forest</td>\n","      <td>59.984</td>\n","      <td>Emirates Stadium</td>\n","      <td>Michael Oliver</td>\n","      <td>Relatório da Partida</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1.0</td>\n","      <td>sáb</td>\n","      <td>2023-08-12</td>\n","      <td>15:00</td>\n","      <td>Everton</td>\n","      <td>2.7</td>\n","      <td>0–1</td>\n","      <td>1.5</td>\n","      <td>Fulham</td>\n","      <td>39.940</td>\n","      <td>Goodison Park</td>\n","      <td>Stuart Attwell</td>\n","      <td>Relatório da Partida</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1.0</td>\n","      <td>sáb</td>\n","      <td>2023-08-12</td>\n","      <td>15:00</td>\n","      <td>Sheffield Utd</td>\n","      <td>0.5</td>\n","      <td>0–1</td>\n","      <td>1.9</td>\n","      <td>Crystal Palace</td>\n","      <td>31.194</td>\n","      <td>Bramall Lane</td>\n","      <td>John Brooks</td>\n","      <td>Relatório da Partida</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1.0</td>\n","      <td>sáb</td>\n","      <td>2023-08-12</td>\n","      <td>15:00</td>\n","      <td>Brighton</td>\n","      <td>4.0</td>\n","      <td>4–1</td>\n","      <td>1.5</td>\n","      <td>Luton Town</td>\n","      <td>31.872</td>\n","      <td>The American Express Community Stadium</td>\n","      <td>David Coote</td>\n","      <td>Relatório da Partida</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>418</th>\n","      <td>38.0</td>\n","      <td>dom</td>\n","      <td>2024-05-19</td>\n","      <td>16:00</td>\n","      <td>Brentford</td>\n","      <td>1.1</td>\n","      <td>2–4</td>\n","      <td>3.4</td>\n","      <td>Newcastle Utd</td>\n","      <td>17.124</td>\n","      <td>Gtech Community Stadium</td>\n","      <td>Simon Hooper</td>\n","      <td>Relatório da Partida</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>419</th>\n","      <td>38.0</td>\n","      <td>dom</td>\n","      <td>2024-05-19</td>\n","      <td>16:00</td>\n","      <td>Chelsea</td>\n","      <td>1.1</td>\n","      <td>2–1</td>\n","      <td>2.2</td>\n","      <td>Bournemouth</td>\n","      <td>39.724</td>\n","      <td>Stamford Bridge</td>\n","      <td>Anthony Taylor</td>\n","      <td>Relatório da Partida</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>420</th>\n","      <td>38.0</td>\n","      <td>dom</td>\n","      <td>2024-05-19</td>\n","      <td>16:00</td>\n","      <td>Crystal Palace</td>\n","      <td>2.5</td>\n","      <td>5–0</td>\n","      <td>0.9</td>\n","      <td>Aston Villa</td>\n","      <td>25.191</td>\n","      <td>Selhurst Park</td>\n","      <td>Darren Bond</td>\n","      <td>Relatório da Partida</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>421</th>\n","      <td>38.0</td>\n","      <td>dom</td>\n","      <td>2024-05-19</td>\n","      <td>16:00</td>\n","      <td>Liverpool</td>\n","      <td>4.5</td>\n","      <td>2–0</td>\n","      <td>0.5</td>\n","      <td>Wolves</td>\n","      <td>60.059</td>\n","      <td>Anfield</td>\n","      <td>Chris Kavanagh</td>\n","      <td>Relatório da Partida</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>422</th>\n","      <td>38.0</td>\n","      <td>dom</td>\n","      <td>2024-05-19</td>\n","      <td>16:00</td>\n","      <td>Burnley</td>\n","      <td>1.2</td>\n","      <td>1–2</td>\n","      <td>1.7</td>\n","      <td>Nott'ham Forest</td>\n","      <td>21.109</td>\n","      <td>Turf Moor</td>\n","      <td>Graham Scott</td>\n","      <td>Relatório da Partida</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>423 rows × 14 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-49cda543-3c96-426b-bf7e-a82b3dcf7dbc')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-49cda543-3c96-426b-bf7e-a82b3dcf7dbc button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-49cda543-3c96-426b-bf7e-a82b3dcf7dbc');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-6cd7f955-2581-4310-b3f5-ee98dfa085fe\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-6cd7f955-2581-4310-b3f5-ee98dfa085fe')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-6cd7f955-2581-4310-b3f5-ee98dfa085fe button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_61541698-257f-4712-b1e2-2ce26f56d42d\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_61541698-257f-4712-b1e2-2ce26f56d42d button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 423,\n  \"fields\": [\n    {\n      \"column\": \"Sem\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 10.980313398163995,\n        \"min\": 1.0,\n        \"max\": 38.0,\n        \"num_unique_values\": 38,\n        \"samples\": [\n          34.0,\n          37.0,\n          5.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Dia\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 7,\n        \"samples\": [\n          \"sex\",\n          \"s\\u00e1b\",\n          \"qua\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Data\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"num_unique_values\": 120,\n        \"samples\": [\n          \"2023-12-09\",\n          \"2023-12-16\",\n          \"2023-08-18\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Hor\\u00e1rio\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"num_unique_values\": 15,\n        \"samples\": [\n          \"15:30\",\n          \"13:30\",\n          \"20:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Em casa\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 20,\n        \"samples\": [\n          \"Burnley\",\n          \"West Ham\",\n          \"Manchester City\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"xG\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.9384328576417311,\n        \"min\": 0.1,\n        \"max\": 7.0,\n        \"num_unique_values\": 43,\n        \"samples\": [\n          3.6,\n          0.9,\n          1.1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Resultado\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 35,\n        \"samples\": [\n          \"3\\u20133\",\n          \"0\\u20132\",\n          \"4\\u20134\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"xG.1\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.7948188353171214,\n        \"min\": 0.0,\n        \"max\": 4.1,\n        \"num_unique_values\": 40,\n        \"samples\": [\n          1.0,\n          3.0,\n          0.8\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Visitante\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 20,\n        \"samples\": [\n          \"Manchester City\",\n          \"Chelsea\",\n          \"Newcastle Utd\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"P\\u00fablico\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 17.96475033902119,\n        \"min\": 10.29,\n        \"max\": 73.612,\n        \"num_unique_values\": 364,\n        \"samples\": [\n          39.643,\n          16.973,\n          53.419\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Local\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 20,\n        \"samples\": [\n          \"Turf Moor\",\n          \"London Stadium\",\n          \"Etihad Stadium\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\u00c1rbitro\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 28,\n        \"samples\": [\n          \"Simon Hooper\",\n          \"Lewis Smith\",\n          \"Anthony Taylor\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Relat\\u00f3rio da Partida\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"Relat\\u00f3rio da Partida\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Notas\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": null,\n        \"max\": null,\n        \"num_unique_values\": 0,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":3}]},{"cell_type":"code","source":["resultados = df[['Sem', 'Data', 'Em casa', 'Resultado', 'Visitante']]\n","resultados = resultados.dropna(how='all')\n","resultados"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"7UBZqBZpNs6e","executionInfo":{"status":"ok","timestamp":1738539756947,"user_tz":180,"elapsed":7,"user":{"displayName":"Lucas Calmon","userId":"09752934338034803828"}},"outputId":"96ee4be8-8bec-4def-870b-84521d650ca5"},"execution_count":4,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      Sem        Data         Em casa Resultado        Visitante\n","0     1.0  2023-08-11         Burnley       0–3  Manchester City\n","1     1.0  2023-08-12         Arsenal       2–1  Nott'ham Forest\n","2     1.0  2023-08-12         Everton       0–1           Fulham\n","3     1.0  2023-08-12   Sheffield Utd       0–1   Crystal Palace\n","4     1.0  2023-08-12        Brighton       4–1       Luton Town\n","..    ...         ...             ...       ...              ...\n","418  38.0  2024-05-19       Brentford       2–4    Newcastle Utd\n","419  38.0  2024-05-19         Chelsea       2–1      Bournemouth\n","420  38.0  2024-05-19  Crystal Palace       5–0      Aston Villa\n","421  38.0  2024-05-19       Liverpool       2–0           Wolves\n","422  38.0  2024-05-19         Burnley       1–2  Nott'ham Forest\n","\n","[380 rows x 5 columns]"],"text/html":["\n","  <div id=\"df-2399f7a8-bc88-4e1e-90be-8a7d3df54477\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Sem</th>\n","      <th>Data</th>\n","      <th>Em casa</th>\n","      <th>Resultado</th>\n","      <th>Visitante</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1.0</td>\n","      <td>2023-08-11</td>\n","      <td>Burnley</td>\n","      <td>0–3</td>\n","      <td>Manchester City</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1.0</td>\n","      <td>2023-08-12</td>\n","      <td>Arsenal</td>\n","      <td>2–1</td>\n","      <td>Nott'ham Forest</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1.0</td>\n","      <td>2023-08-12</td>\n","      <td>Everton</td>\n","      <td>0–1</td>\n","      <td>Fulham</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1.0</td>\n","      <td>2023-08-12</td>\n","      <td>Sheffield Utd</td>\n","      <td>0–1</td>\n","      <td>Crystal Palace</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1.0</td>\n","      <td>2023-08-12</td>\n","      <td>Brighton</td>\n","      <td>4–1</td>\n","      <td>Luton Town</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>418</th>\n","      <td>38.0</td>\n","      <td>2024-05-19</td>\n","      <td>Brentford</td>\n","      <td>2–4</td>\n","      <td>Newcastle Utd</td>\n","    </tr>\n","    <tr>\n","      <th>419</th>\n","      <td>38.0</td>\n","      <td>2024-05-19</td>\n","      <td>Chelsea</td>\n","      <td>2–1</td>\n","      <td>Bournemouth</td>\n","    </tr>\n","    <tr>\n","      <th>420</th>\n","      <td>38.0</td>\n","      <td>2024-05-19</td>\n","      <td>Crystal Palace</td>\n","      <td>5–0</td>\n","      <td>Aston Villa</td>\n","    </tr>\n","    <tr>\n","      <th>421</th>\n","      <td>38.0</td>\n","      <td>2024-05-19</td>\n","      <td>Liverpool</td>\n","      <td>2–0</td>\n","      <td>Wolves</td>\n","    </tr>\n","    <tr>\n","      <th>422</th>\n","      <td>38.0</td>\n","      <td>2024-05-19</td>\n","      <td>Burnley</td>\n","      <td>1–2</td>\n","      <td>Nott'ham Forest</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>380 rows × 5 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2399f7a8-bc88-4e1e-90be-8a7d3df54477')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-2399f7a8-bc88-4e1e-90be-8a7d3df54477 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-2399f7a8-bc88-4e1e-90be-8a7d3df54477');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-b0c05109-9922-4657-b63b-b51746de0a31\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b0c05109-9922-4657-b63b-b51746de0a31')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-b0c05109-9922-4657-b63b-b51746de0a31 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_c33409b8-b180-4fb8-a760-2ecc2f9b3d9b\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('resultados')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_c33409b8-b180-4fb8-a760-2ecc2f9b3d9b button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('resultados');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"resultados","summary":"{\n  \"name\": \"resultados\",\n  \"rows\": 380,\n  \"fields\": [\n    {\n      \"column\": \"Sem\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 10.980313398163995,\n        \"min\": 1.0,\n        \"max\": 38.0,\n        \"num_unique_values\": 38,\n        \"samples\": [\n          34.0,\n          37.0,\n          5.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Data\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"num_unique_values\": 120,\n        \"samples\": [\n          \"2023-12-09\",\n          \"2023-12-16\",\n          \"2023-08-18\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Em casa\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 20,\n        \"samples\": [\n          \"Burnley\",\n          \"West Ham\",\n          \"Manchester City\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Resultado\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 35,\n        \"samples\": [\n          \"3\\u20133\",\n          \"0\\u20132\",\n          \"4\\u20134\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Visitante\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 20,\n        \"samples\": [\n          \"Manchester City\",\n          \"Chelsea\",\n          \"Newcastle Utd\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":4}]},{"cell_type":"code","source":["placar = resultados.loc[:,\"Resultado\"].str.split(\"–\", n = 1, expand = True)\n","print(placar)\n","resultados.loc[:,\"CasaResul\"] = placar.loc[:,0]\n","resultados.loc[:,\"VisiResul\"] = placar.loc[:,1]\n","resultados = resultados.drop(columns=[\"Resultado\"])\n","resultados"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":667},"id":"X-6DcXCUNwDB","executionInfo":{"status":"ok","timestamp":1738539757653,"user_tz":180,"elapsed":712,"user":{"displayName":"Lucas Calmon","userId":"09752934338034803828"}},"outputId":"63cd2911-84ab-4309-835e-fc5831bff63c"},"execution_count":5,"outputs":[{"output_type":"stream","name":"stdout","text":["     0  1\n","0    0  3\n","1    2  1\n","2    0  1\n","3    0  1\n","4    4  1\n","..  .. ..\n","418  2  4\n","419  2  1\n","420  5  0\n","421  2  0\n","422  1  2\n","\n","[380 rows x 2 columns]\n"]},{"output_type":"execute_result","data":{"text/plain":["      Sem        Data         Em casa        Visitante CasaResul VisiResul\n","0     1.0  2023-08-11         Burnley  Manchester City         0         3\n","1     1.0  2023-08-12         Arsenal  Nott'ham Forest         2         1\n","2     1.0  2023-08-12         Everton           Fulham         0         1\n","3     1.0  2023-08-12   Sheffield Utd   Crystal Palace         0         1\n","4     1.0  2023-08-12        Brighton       Luton Town         4         1\n","..    ...         ...             ...              ...       ...       ...\n","418  38.0  2024-05-19       Brentford    Newcastle Utd         2         4\n","419  38.0  2024-05-19         Chelsea      Bournemouth         2         1\n","420  38.0  2024-05-19  Crystal Palace      Aston Villa         5         0\n","421  38.0  2024-05-19       Liverpool           Wolves         2         0\n","422  38.0  2024-05-19         Burnley  Nott'ham Forest         1         2\n","\n","[380 rows x 6 columns]"],"text/html":["\n","  <div id=\"df-47f1a47d-347e-4c5b-b146-1c9e2bd1e0bd\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Sem</th>\n","      <th>Data</th>\n","      <th>Em casa</th>\n","      <th>Visitante</th>\n","      <th>CasaResul</th>\n","      <th>VisiResul</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1.0</td>\n","      <td>2023-08-11</td>\n","      <td>Burnley</td>\n","      <td>Manchester City</td>\n","      <td>0</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1.0</td>\n","      <td>2023-08-12</td>\n","      <td>Arsenal</td>\n","      <td>Nott'ham Forest</td>\n","      <td>2</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1.0</td>\n","      <td>2023-08-12</td>\n","      <td>Everton</td>\n","      <td>Fulham</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1.0</td>\n","      <td>2023-08-12</td>\n","      <td>Sheffield Utd</td>\n","      <td>Crystal Palace</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1.0</td>\n","      <td>2023-08-12</td>\n","      <td>Brighton</td>\n","      <td>Luton Town</td>\n","      <td>4</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>418</th>\n","      <td>38.0</td>\n","      <td>2024-05-19</td>\n","      <td>Brentford</td>\n","      <td>Newcastle Utd</td>\n","      <td>2</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>419</th>\n","      <td>38.0</td>\n","      <td>2024-05-19</td>\n","      <td>Chelsea</td>\n","      <td>Bournemouth</td>\n","      <td>2</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>420</th>\n","      <td>38.0</td>\n","      <td>2024-05-19</td>\n","      <td>Crystal Palace</td>\n","      <td>Aston Villa</td>\n","      <td>5</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>421</th>\n","      <td>38.0</td>\n","      <td>2024-05-19</td>\n","      <td>Liverpool</td>\n","      <td>Wolves</td>\n","      <td>2</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>422</th>\n","      <td>38.0</td>\n","      <td>2024-05-19</td>\n","      <td>Burnley</td>\n","      <td>Nott'ham Forest</td>\n","      <td>1</td>\n","      <td>2</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>380 rows × 6 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-47f1a47d-347e-4c5b-b146-1c9e2bd1e0bd')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-47f1a47d-347e-4c5b-b146-1c9e2bd1e0bd button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-47f1a47d-347e-4c5b-b146-1c9e2bd1e0bd');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-23cb155d-6a80-4228-bc38-e8ef7f60e299\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-23cb155d-6a80-4228-bc38-e8ef7f60e299')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-23cb155d-6a80-4228-bc38-e8ef7f60e299 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_641e6338-82ff-478d-b31c-b4289247891c\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('resultados')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_641e6338-82ff-478d-b31c-b4289247891c button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('resultados');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"resultados","summary":"{\n  \"name\": \"resultados\",\n  \"rows\": 380,\n  \"fields\": [\n    {\n      \"column\": \"Sem\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 10.980313398163995,\n        \"min\": 1.0,\n        \"max\": 38.0,\n        \"num_unique_values\": 38,\n        \"samples\": [\n          34.0,\n          37.0,\n          5.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Data\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"num_unique_values\": 120,\n        \"samples\": [\n          \"2023-12-09\",\n          \"2023-12-16\",\n          \"2023-08-18\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Em casa\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 20,\n        \"samples\": [\n          \"Burnley\",\n          \"West Ham\",\n          \"Manchester City\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Visitante\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 20,\n        \"samples\": [\n          \"Manchester City\",\n          \"Chelsea\",\n          \"Newcastle Utd\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CasaResul\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 7,\n        \"samples\": [\n          \"0\",\n          \"2\",\n          \"3\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"VisiResul\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 8,\n        \"samples\": [\n          \"1\",\n          \"5\",\n          \"3\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["resultados[\"Vencedor\"] = np.where(resultados[\"CasaResul\"] > resultados[\"VisiResul\"], \"C\",\n","                                  np.where(resultados[\"CasaResul\"] < resultados[\"VisiResul\"], \"V\", \"E\"))\n","resultados"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"_RB-bCbcNzfM","executionInfo":{"status":"ok","timestamp":1738539757653,"user_tz":180,"elapsed":49,"user":{"displayName":"Lucas Calmon","userId":"09752934338034803828"}},"outputId":"9f338b1a-831d-4ddd-d463-95ac6f0c3114"},"execution_count":6,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      Sem        Data         Em casa        Visitante CasaResul VisiResul  \\\n","0     1.0  2023-08-11         Burnley  Manchester City         0         3   \n","1     1.0  2023-08-12         Arsenal  Nott'ham Forest         2         1   \n","2     1.0  2023-08-12         Everton           Fulham         0         1   \n","3     1.0  2023-08-12   Sheffield Utd   Crystal Palace         0         1   \n","4     1.0  2023-08-12        Brighton       Luton Town         4         1   \n","..    ...         ...             ...              ...       ...       ...   \n","418  38.0  2024-05-19       Brentford    Newcastle Utd         2         4   \n","419  38.0  2024-05-19         Chelsea      Bournemouth         2         1   \n","420  38.0  2024-05-19  Crystal Palace      Aston Villa         5         0   \n","421  38.0  2024-05-19       Liverpool           Wolves         2         0   \n","422  38.0  2024-05-19         Burnley  Nott'ham Forest         1         2   \n","\n","    Vencedor  \n","0          V  \n","1          C  \n","2          V  \n","3          V  \n","4          C  \n","..       ...  \n","418        V  \n","419        C  \n","420        C  \n","421        C  \n","422        V  \n","\n","[380 rows x 7 columns]"],"text/html":["\n","  <div id=\"df-cf781d0d-c2e9-45c4-b3fd-c3150e1601b7\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Sem</th>\n","      <th>Data</th>\n","      <th>Em casa</th>\n","      <th>Visitante</th>\n","      <th>CasaResul</th>\n","      <th>VisiResul</th>\n","      <th>Vencedor</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1.0</td>\n","      <td>2023-08-11</td>\n","      <td>Burnley</td>\n","      <td>Manchester City</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>V</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1.0</td>\n","      <td>2023-08-12</td>\n","      <td>Arsenal</td>\n","      <td>Nott'ham Forest</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>C</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1.0</td>\n","      <td>2023-08-12</td>\n","      <td>Everton</td>\n","      <td>Fulham</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>V</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1.0</td>\n","      <td>2023-08-12</td>\n","      <td>Sheffield Utd</td>\n","      <td>Crystal Palace</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>V</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1.0</td>\n","      <td>2023-08-12</td>\n","      <td>Brighton</td>\n","      <td>Luton Town</td>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>C</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>418</th>\n","      <td>38.0</td>\n","      <td>2024-05-19</td>\n","      <td>Brentford</td>\n","      <td>Newcastle Utd</td>\n","      <td>2</td>\n","      <td>4</td>\n","      <td>V</td>\n","    </tr>\n","    <tr>\n","      <th>419</th>\n","      <td>38.0</td>\n","      <td>2024-05-19</td>\n","      <td>Chelsea</td>\n","      <td>Bournemouth</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>C</td>\n","    </tr>\n","    <tr>\n","      <th>420</th>\n","      <td>38.0</td>\n","      <td>2024-05-19</td>\n","      <td>Crystal Palace</td>\n","      <td>Aston Villa</td>\n","      <td>5</td>\n","      <td>0</td>\n","      <td>C</td>\n","    </tr>\n","    <tr>\n","      <th>421</th>\n","      <td>38.0</td>\n","      <td>2024-05-19</td>\n","      <td>Liverpool</td>\n","      <td>Wolves</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>C</td>\n","    </tr>\n","    <tr>\n","      <th>422</th>\n","      <td>38.0</td>\n","      <td>2024-05-19</td>\n","      <td>Burnley</td>\n","      <td>Nott'ham Forest</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>V</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>380 rows × 7 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-cf781d0d-c2e9-45c4-b3fd-c3150e1601b7')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-cf781d0d-c2e9-45c4-b3fd-c3150e1601b7 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-cf781d0d-c2e9-45c4-b3fd-c3150e1601b7');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-8b93863d-77b9-4891-9ca1-dcc7260ed268\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-8b93863d-77b9-4891-9ca1-dcc7260ed268')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-8b93863d-77b9-4891-9ca1-dcc7260ed268 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_1977aa7b-5ec5-492d-bda8-73d7134861c2\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('resultados')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_1977aa7b-5ec5-492d-bda8-73d7134861c2 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('resultados');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"resultados","summary":"{\n  \"name\": \"resultados\",\n  \"rows\": 380,\n  \"fields\": [\n    {\n      \"column\": \"Sem\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 10.980313398163995,\n        \"min\": 1.0,\n        \"max\": 38.0,\n        \"num_unique_values\": 38,\n        \"samples\": [\n          34.0,\n          37.0,\n          5.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Data\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"num_unique_values\": 120,\n        \"samples\": [\n          \"2023-12-09\",\n          \"2023-12-16\",\n          \"2023-08-18\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Em casa\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 20,\n        \"samples\": [\n          \"Burnley\",\n          \"West Ham\",\n          \"Manchester City\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Visitante\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 20,\n        \"samples\": [\n          \"Manchester City\",\n          \"Chelsea\",\n          \"Newcastle Utd\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CasaResul\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 7,\n        \"samples\": [\n          \"0\",\n          \"2\",\n          \"3\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"VisiResul\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 8,\n        \"samples\": [\n          \"1\",\n          \"5\",\n          \"3\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Vencedor\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"V\",\n          \"C\",\n          \"E\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":["#verificando rodada atrasada\n","resultados[resultados.loc[:,\"Sem\"] == 15]\n","resultados.dtypes\n","print(resultados['CasaResul'].value_counts())\n","#transformar casa resul e visi resul em numeros\n","resultados['CasaResul'] = resultados['CasaResul'].astype(int)\n","resultados['VisiResul'] = resultados['VisiResul'].astype(int)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"uD9SDB4qN0_2","executionInfo":{"status":"ok","timestamp":1738539757653,"user_tz":180,"elapsed":48,"user":{"displayName":"Lucas Calmon","userId":"09752934338034803828"}},"outputId":"20f8c6af-ab49-497e-c7b7-b89018ee79ea"},"execution_count":7,"outputs":[{"output_type":"stream","name":"stdout","text":["CasaResul\n","1    109\n","2     97\n","0     68\n","3     63\n","4     26\n","5     14\n","6      3\n","Name: count, dtype: int64\n"]}]},{"cell_type":"code","source":["resultados['VCasaValor'] = np.where(resultados['Vencedor']=='C',1,np.where(resultados['Vencedor']=='E',0.5,0)) #Valor da Vitória para o time da casa\n","resultados['VVisValor'] = np.where(resultados['Vencedor']=='V',1,np.where(resultados['Vencedor']=='E',0.5,0)) #Valor da Vitória para o time visitante\n","resultados['count'] = 1"],"metadata":{"id":"P9VkZXlvN2mv","executionInfo":{"status":"ok","timestamp":1738539757653,"user_tz":180,"elapsed":47,"user":{"displayName":"Lucas Calmon","userId":"09752934338034803828"}}},"execution_count":8,"outputs":[]},{"cell_type":"code","source":["resultados"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"bT-l0qEoalV7","executionInfo":{"status":"ok","timestamp":1738539757653,"user_tz":180,"elapsed":46,"user":{"displayName":"Lucas Calmon","userId":"09752934338034803828"}},"outputId":"f649801c-d4a5-44ec-86e1-5c4ed71b9fba"},"execution_count":9,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      Sem        Data         Em casa        Visitante  CasaResul  VisiResul  \\\n","0     1.0  2023-08-11         Burnley  Manchester City          0          3   \n","1     1.0  2023-08-12         Arsenal  Nott'ham Forest          2          1   \n","2     1.0  2023-08-12         Everton           Fulham          0          1   \n","3     1.0  2023-08-12   Sheffield Utd   Crystal Palace          0          1   \n","4     1.0  2023-08-12        Brighton       Luton Town          4          1   \n","..    ...         ...             ...              ...        ...        ...   \n","418  38.0  2024-05-19       Brentford    Newcastle Utd          2          4   \n","419  38.0  2024-05-19         Chelsea      Bournemouth          2          1   \n","420  38.0  2024-05-19  Crystal Palace      Aston Villa          5          0   \n","421  38.0  2024-05-19       Liverpool           Wolves          2          0   \n","422  38.0  2024-05-19         Burnley  Nott'ham Forest          1          2   \n","\n","    Vencedor  VCasaValor  VVisValor  count  \n","0          V         0.0        1.0      1  \n","1          C         1.0        0.0      1  \n","2          V         0.0        1.0      1  \n","3          V         0.0        1.0      1  \n","4          C         1.0        0.0      1  \n","..       ...         ...        ...    ...  \n","418        V         0.0        1.0      1  \n","419        C         1.0        0.0      1  \n","420        C         1.0        0.0      1  \n","421        C         1.0        0.0      1  \n","422        V         0.0        1.0      1  \n","\n","[380 rows x 10 columns]"],"text/html":["\n","  <div id=\"df-8b74244c-78aa-4201-a5e5-bd1ac916ec6f\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Sem</th>\n","      <th>Data</th>\n","      <th>Em casa</th>\n","      <th>Visitante</th>\n","      <th>CasaResul</th>\n","      <th>VisiResul</th>\n","      <th>Vencedor</th>\n","      <th>VCasaValor</th>\n","      <th>VVisValor</th>\n","      <th>count</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1.0</td>\n","      <td>2023-08-11</td>\n","      <td>Burnley</td>\n","      <td>Manchester City</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>V</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1.0</td>\n","      <td>2023-08-12</td>\n","      <td>Arsenal</td>\n","      <td>Nott'ham Forest</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>C</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1.0</td>\n","      <td>2023-08-12</td>\n","      <td>Everton</td>\n","      <td>Fulham</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>V</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1.0</td>\n","      <td>2023-08-12</td>\n","      <td>Sheffield Utd</td>\n","      <td>Crystal Palace</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>V</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1.0</td>\n","      <td>2023-08-12</td>\n","      <td>Brighton</td>\n","      <td>Luton Town</td>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>C</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>418</th>\n","      <td>38.0</td>\n","      <td>2024-05-19</td>\n","      <td>Brentford</td>\n","      <td>Newcastle Utd</td>\n","      <td>2</td>\n","      <td>4</td>\n","      <td>V</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>419</th>\n","      <td>38.0</td>\n","      <td>2024-05-19</td>\n","      <td>Chelsea</td>\n","      <td>Bournemouth</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>C</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>420</th>\n","      <td>38.0</td>\n","      <td>2024-05-19</td>\n","      <td>Crystal Palace</td>\n","      <td>Aston Villa</td>\n","      <td>5</td>\n","      <td>0</td>\n","      <td>C</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>421</th>\n","      <td>38.0</td>\n","      <td>2024-05-19</td>\n","      <td>Liverpool</td>\n","      <td>Wolves</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>C</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>422</th>\n","      <td>38.0</td>\n","      <td>2024-05-19</td>\n","      <td>Burnley</td>\n","      <td>Nott'ham Forest</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>V</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>380 rows × 10 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8b74244c-78aa-4201-a5e5-bd1ac916ec6f')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-8b74244c-78aa-4201-a5e5-bd1ac916ec6f button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-8b74244c-78aa-4201-a5e5-bd1ac916ec6f');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-c9ed9757-772f-492f-a194-b3129517588b\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-c9ed9757-772f-492f-a194-b3129517588b')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-c9ed9757-772f-492f-a194-b3129517588b button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_729d50ca-4a79-45e0-ad80-93a2f2d4469c\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('resultados')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_729d50ca-4a79-45e0-ad80-93a2f2d4469c button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('resultados');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"resultados","summary":"{\n  \"name\": \"resultados\",\n  \"rows\": 380,\n  \"fields\": [\n    {\n      \"column\": \"Sem\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 10.980313398163995,\n        \"min\": 1.0,\n        \"max\": 38.0,\n        \"num_unique_values\": 38,\n        \"samples\": [\n          34.0,\n          37.0,\n          5.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Data\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"num_unique_values\": 120,\n        \"samples\": [\n          \"2023-12-09\",\n          \"2023-12-16\",\n          \"2023-08-18\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Em casa\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 20,\n        \"samples\": [\n          \"Burnley\",\n          \"West Ham\",\n          \"Manchester City\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Visitante\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 20,\n        \"samples\": [\n          \"Manchester City\",\n          \"Chelsea\",\n          \"Newcastle Utd\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CasaResul\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 0,\n        \"max\": 6,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          0,\n          2,\n          3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"VisiResul\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 0,\n        \"max\": 8,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          1,\n          5,\n          3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Vencedor\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"V\",\n          \"C\",\n          \"E\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"VCasaValor\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.4380366746238405,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          0.0,\n          1.0,\n          0.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"VVisValor\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.4380366746238405,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          1.0,\n          0.0,\n          0.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"count\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 1,\n        \"max\": 1,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":9}]},{"cell_type":"code","source":["primeiro = resultados[resultados.loc[:, \"Sem\"] < 20]\n","segundo = resultados[resultados.loc[:, \"Sem\"] > 19]\n","print(primeiro.shape)\n","print(segundo.shape)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"U25igxIjN4Dz","executionInfo":{"status":"ok","timestamp":1738539757654,"user_tz":180,"elapsed":46,"user":{"displayName":"Lucas Calmon","userId":"09752934338034803828"}},"outputId":"36d44070-828b-461f-9683-0b55a894280e"},"execution_count":10,"outputs":[{"output_type":"stream","name":"stdout","text":["(190, 10)\n","(190, 10)\n"]}]},{"cell_type":"code","source":["PrimeiroTurnoC = primeiro.groupby(['Em casa'])[['count', 'VCasaValor','CasaResul','VisiResul']].sum().reset_index()\n","PrimeiroTurnoC = PrimeiroTurnoC.rename(columns={'Em casa':'time', 'CasaResul': 'GolsCasaC', 'VisiResul': 'GolsVisiC'})\n","PrimeiroTurnoV = primeiro.groupby(['Visitante'])[['count', 'VVisValor','CasaResul','VisiResul']].sum().reset_index()\n","PrimeiroTurnoV = PrimeiroTurnoV.rename(columns={'Visitante':'time', 'CasaResul': 'GolsCasaV', 'VisiResul': 'GolsVisiV'})"],"metadata":{"id":"82Uzww1uN6Gc","executionInfo":{"status":"ok","timestamp":1738539757654,"user_tz":180,"elapsed":45,"user":{"displayName":"Lucas Calmon","userId":"09752934338034803828"}}},"execution_count":11,"outputs":[]},{"cell_type":"code","source":["PrimeiroTurnoC"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"t1LclJ18cfYo","executionInfo":{"status":"ok","timestamp":1738539757915,"user_tz":180,"elapsed":305,"user":{"displayName":"Lucas Calmon","userId":"09752934338034803828"}},"outputId":"5b65cee6-194b-447b-fd4a-abc5210ba290"},"execution_count":12,"outputs":[{"output_type":"execute_result","data":{"text/plain":["               time  count  VCasaValor  GolsCasaC  GolsVisiC\n","0           Arsenal     10         8.0         22         10\n","1       Aston Villa      9         8.5         26          6\n","2       Bournemouth     10         5.5         15         15\n","3         Brentford     10         4.5         17         18\n","4          Brighton     10         7.0         22         14\n","..              ...    ...         ...        ...        ...\n","15  Nott'ham Forest      9         3.5         12         14\n","16    Sheffield Utd     10         2.5         10         24\n","17        Tottenham      9         6.0         17         12\n","18         West Ham      9         6.0         17         10\n","19           Wolves      9         5.5         13         14\n","\n","[20 rows x 5 columns]"],"text/html":["\n","  <div id=\"df-e1cc80c4-b0f6-415a-be5b-d3a0d1da06ef\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>time</th>\n","      <th>count</th>\n","      <th>VCasaValor</th>\n","      <th>GolsCasaC</th>\n","      <th>GolsVisiC</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Arsenal</td>\n","      <td>10</td>\n","      <td>8.0</td>\n","      <td>22</td>\n","      <td>10</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Aston Villa</td>\n","      <td>9</td>\n","      <td>8.5</td>\n","      <td>26</td>\n","      <td>6</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Bournemouth</td>\n","      <td>10</td>\n","      <td>5.5</td>\n","      <td>15</td>\n","      <td>15</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Brentford</td>\n","      <td>10</td>\n","      <td>4.5</td>\n","      <td>17</td>\n","      <td>18</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Brighton</td>\n","      <td>10</td>\n","      <td>7.0</td>\n","      <td>22</td>\n","      <td>14</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>Nott'ham Forest</td>\n","      <td>9</td>\n","      <td>3.5</td>\n","      <td>12</td>\n","      <td>14</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>Sheffield Utd</td>\n","      <td>10</td>\n","      <td>2.5</td>\n","      <td>10</td>\n","      <td>24</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>Tottenham</td>\n","      <td>9</td>\n","      <td>6.0</td>\n","      <td>17</td>\n","      <td>12</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>West Ham</td>\n","      <td>9</td>\n","      <td>6.0</td>\n","      <td>17</td>\n","      <td>10</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>Wolves</td>\n","      <td>9</td>\n","      <td>5.5</td>\n","      <td>13</td>\n","      <td>14</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>20 rows × 5 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e1cc80c4-b0f6-415a-be5b-d3a0d1da06ef')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-e1cc80c4-b0f6-415a-be5b-d3a0d1da06ef button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-e1cc80c4-b0f6-415a-be5b-d3a0d1da06ef');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-878d1c22-e7fd-4005-b2f4-8612265081e8\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-878d1c22-e7fd-4005-b2f4-8612265081e8')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-878d1c22-e7fd-4005-b2f4-8612265081e8 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_0bce2377-3e0c-4695-adb5-5cdb9a9aabe4\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('PrimeiroTurnoC')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_0bce2377-3e0c-4695-adb5-5cdb9a9aabe4 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('PrimeiroTurnoC');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"PrimeiroTurnoC","summary":"{\n  \"name\": \"PrimeiroTurnoC\",\n  \"rows\": 20,\n  \"fields\": [\n    {\n      \"column\": \"time\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 20,\n        \"samples\": [\n          \"Arsenal\",\n          \"Tottenham\",\n          \"Nott'ham Forest\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"count\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 9,\n        \"max\": 10,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          9,\n          10\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"VCasaValor\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.152721655559722,\n        \"min\": 1.0,\n        \"max\": 8.5,\n        \"num_unique_values\": 12,\n        \"samples\": [\n          7.5,\n          3.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"GolsCasaC\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5,\n        \"min\": 8,\n        \"max\": 26,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          13,\n          26\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"GolsVisiC\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4,\n        \"min\": 6,\n        \"max\": 24,\n        \"num_unique_values\": 12,\n        \"samples\": [\n          16,\n          9\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":12}]},{"cell_type":"code","source":["PrimeiroTurnoV"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"dvMI0AtGcqz2","executionInfo":{"status":"ok","timestamp":1738539757916,"user_tz":180,"elapsed":24,"user":{"displayName":"Lucas Calmon","userId":"09752934338034803828"}},"outputId":"66d1abf8-b6c0-4bf9-f087-91dcf6defaa4"},"execution_count":13,"outputs":[{"output_type":"execute_result","data":{"text/plain":["               time  count  VVisValor  GolsCasaV  GolsVisiV\n","0           Arsenal      9        6.0          8         14\n","1       Aston Villa     10        5.0         19         14\n","2       Bournemouth      9        4.5         20         16\n","3         Brentford      9        2.5         11          8\n","4          Brighton      9        4.0         19         16\n","..              ...    ...        ...        ...        ...\n","15  Nott'ham Forest     10        3.0         20         10\n","16    Sheffield Utd      9        1.0         23          5\n","17        Tottenham     10        6.5         16         22\n","18         West Ham     10        5.5         20         16\n","19           Wolves     10        3.5         17         14\n","\n","[20 rows x 5 columns]"],"text/html":["\n","  <div id=\"df-1cbe4b91-24b3-4430-a8a4-b10d9161d6db\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>time</th>\n","      <th>count</th>\n","      <th>VVisValor</th>\n","      <th>GolsCasaV</th>\n","      <th>GolsVisiV</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Arsenal</td>\n","      <td>9</td>\n","      <td>6.0</td>\n","      <td>8</td>\n","      <td>14</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Aston Villa</td>\n","      <td>10</td>\n","      <td>5.0</td>\n","      <td>19</td>\n","      <td>14</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Bournemouth</td>\n","      <td>9</td>\n","      <td>4.5</td>\n","      <td>20</td>\n","      <td>16</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Brentford</td>\n","      <td>9</td>\n","      <td>2.5</td>\n","      <td>11</td>\n","      <td>8</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Brighton</td>\n","      <td>9</td>\n","      <td>4.0</td>\n","      <td>19</td>\n","      <td>16</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>Nott'ham Forest</td>\n","      <td>10</td>\n","      <td>3.0</td>\n","      <td>20</td>\n","      <td>10</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>Sheffield Utd</td>\n","      <td>9</td>\n","      <td>1.0</td>\n","      <td>23</td>\n","      <td>5</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>Tottenham</td>\n","      <td>10</td>\n","      <td>6.5</td>\n","      <td>16</td>\n","      <td>22</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>West Ham</td>\n","      <td>10</td>\n","      <td>5.5</td>\n","      <td>20</td>\n","      <td>16</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>Wolves</td>\n","      <td>10</td>\n","      <td>3.5</td>\n","      <td>17</td>\n","      <td>14</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>20 rows × 5 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1cbe4b91-24b3-4430-a8a4-b10d9161d6db')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-1cbe4b91-24b3-4430-a8a4-b10d9161d6db button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-1cbe4b91-24b3-4430-a8a4-b10d9161d6db');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-659414dc-c53a-4df7-98b8-12b261790b43\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-659414dc-c53a-4df7-98b8-12b261790b43')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-659414dc-c53a-4df7-98b8-12b261790b43 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_5cc05997-5181-4583-a292-8180345406ed\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('PrimeiroTurnoV')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_5cc05997-5181-4583-a292-8180345406ed button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('PrimeiroTurnoV');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"PrimeiroTurnoV","summary":"{\n  \"name\": \"PrimeiroTurnoV\",\n  \"rows\": 20,\n  \"fields\": [\n    {\n      \"column\": \"time\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 20,\n        \"samples\": [\n          \"Arsenal\",\n          \"Tottenham\",\n          \"Nott'ham Forest\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"count\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 9,\n        \"max\": 10,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          10,\n          9\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"VVisValor\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.678815371811796,\n        \"min\": 1.0,\n        \"max\": 7.0,\n        \"num_unique_values\": 12,\n        \"samples\": [\n          2.0,\n          6.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"GolsCasaV\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4,\n        \"min\": 8,\n        \"max\": 24,\n        \"num_unique_values\": 15,\n        \"samples\": [\n          24,\n          9\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"GolsVisiV\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4,\n        \"min\": 5,\n        \"max\": 22,\n        \"num_unique_values\": 11,\n        \"samples\": [\n          9,\n          14\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":13}]},{"cell_type":"code","source":["SegundoTurnoC = segundo.groupby(['Em casa'])[['count', 'VCasaValor','CasaResul','VisiResul']].sum().reset_index()\n","SegundoTurnoC = SegundoTurnoC.rename(columns={'Em casa':'time', 'CasaResul': 'GolsCasaC', 'VisiResul': 'GolsVisiC'})\n","SegundoTurnoV = segundo.groupby(['Visitante'])[['count', 'VVisValor','CasaResul','VisiResul']].sum().reset_index()\n","SegundoTurnoV = SegundoTurnoV.rename(columns={'Visitante':'time', 'CasaResul': 'GolsCasaV', 'VisiResul': 'GolsVisiV'})"],"metadata":{"id":"YohrK4atN7kW","executionInfo":{"status":"ok","timestamp":1738539758318,"user_tz":180,"elapsed":425,"user":{"displayName":"Lucas Calmon","userId":"09752934338034803828"}}},"execution_count":14,"outputs":[]},{"cell_type":"code","source":["PrimeiroTurno = pd.merge(PrimeiroTurnoC, PrimeiroTurnoV, on=['time'])\n","SegundoTurno = pd.merge(SegundoTurnoC, SegundoTurnoV, on=['time'])"],"metadata":{"id":"ph6Faop5N812","executionInfo":{"status":"ok","timestamp":1738539758319,"user_tz":180,"elapsed":22,"user":{"displayName":"Lucas Calmon","userId":"09752934338034803828"}}},"execution_count":15,"outputs":[]},{"cell_type":"code","source":["PrimeiroTurno"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"bVPmJS_1arst","executionInfo":{"status":"ok","timestamp":1738539758319,"user_tz":180,"elapsed":22,"user":{"displayName":"Lucas Calmon","userId":"09752934338034803828"}},"outputId":"31f3619c-fa9d-4f63-a15e-a4888ff1d501"},"execution_count":16,"outputs":[{"output_type":"execute_result","data":{"text/plain":["               time  count_x  VCasaValor  GolsCasaC  GolsVisiC  count_y  \\\n","0           Arsenal       10         8.0         22         10        9   \n","1       Aston Villa        9         8.5         26          6       10   \n","2       Bournemouth       10         5.5         15         15        9   \n","3         Brentford       10         4.5         17         18        9   \n","4          Brighton       10         7.0         22         14        9   \n","..              ...      ...         ...        ...        ...      ...   \n","15  Nott'ham Forest        9         3.5         12         14       10   \n","16    Sheffield Utd       10         2.5         10         24        9   \n","17        Tottenham        9         6.0         17         12       10   \n","18         West Ham        9         6.0         17         10       10   \n","19           Wolves        9         5.5         13         14       10   \n","\n","    VVisValor  GolsCasaV  GolsVisiV  \n","0         6.0          8         14  \n","1         5.0         19         14  \n","2         4.5         20         16  \n","3         2.5         11          8  \n","4         4.0         19         16  \n","..        ...        ...        ...  \n","15        3.0         20         10  \n","16        1.0         23          5  \n","17        6.5         16         22  \n","18        5.5         20         16  \n","19        3.5         17         14  \n","\n","[20 rows x 9 columns]"],"text/html":["\n","  <div id=\"df-41b6995d-43fe-42ab-bd90-6bddd7415a85\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>time</th>\n","      <th>count_x</th>\n","      <th>VCasaValor</th>\n","      <th>GolsCasaC</th>\n","      <th>GolsVisiC</th>\n","      <th>count_y</th>\n","      <th>VVisValor</th>\n","      <th>GolsCasaV</th>\n","      <th>GolsVisiV</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Arsenal</td>\n","      <td>10</td>\n","      <td>8.0</td>\n","      <td>22</td>\n","      <td>10</td>\n","      <td>9</td>\n","      <td>6.0</td>\n","      <td>8</td>\n","      <td>14</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Aston Villa</td>\n","      <td>9</td>\n","      <td>8.5</td>\n","      <td>26</td>\n","      <td>6</td>\n","      <td>10</td>\n","      <td>5.0</td>\n","      <td>19</td>\n","      <td>14</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Bournemouth</td>\n","      <td>10</td>\n","      <td>5.5</td>\n","      <td>15</td>\n","      <td>15</td>\n","      <td>9</td>\n","      <td>4.5</td>\n","      <td>20</td>\n","      <td>16</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Brentford</td>\n","      <td>10</td>\n","      <td>4.5</td>\n","      <td>17</td>\n","      <td>18</td>\n","      <td>9</td>\n","      <td>2.5</td>\n","      <td>11</td>\n","      <td>8</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Brighton</td>\n","      <td>10</td>\n","      <td>7.0</td>\n","      <td>22</td>\n","      <td>14</td>\n","      <td>9</td>\n","      <td>4.0</td>\n","      <td>19</td>\n","      <td>16</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>Nott'ham Forest</td>\n","      <td>9</td>\n","      <td>3.5</td>\n","      <td>12</td>\n","      <td>14</td>\n","      <td>10</td>\n","      <td>3.0</td>\n","      <td>20</td>\n","      <td>10</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>Sheffield Utd</td>\n","      <td>10</td>\n","      <td>2.5</td>\n","      <td>10</td>\n","      <td>24</td>\n","      <td>9</td>\n","      <td>1.0</td>\n","      <td>23</td>\n","      <td>5</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>Tottenham</td>\n","      <td>9</td>\n","      <td>6.0</td>\n","      <td>17</td>\n","      <td>12</td>\n","      <td>10</td>\n","      <td>6.5</td>\n","      <td>16</td>\n","      <td>22</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>West Ham</td>\n","      <td>9</td>\n","      <td>6.0</td>\n","      <td>17</td>\n","      <td>10</td>\n","      <td>10</td>\n","      <td>5.5</td>\n","      <td>20</td>\n","      <td>16</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>Wolves</td>\n","      <td>9</td>\n","      <td>5.5</td>\n","      <td>13</td>\n","      <td>14</td>\n","      <td>10</td>\n","      <td>3.5</td>\n","      <td>17</td>\n","      <td>14</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>20 rows × 9 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-41b6995d-43fe-42ab-bd90-6bddd7415a85')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-41b6995d-43fe-42ab-bd90-6bddd7415a85 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-41b6995d-43fe-42ab-bd90-6bddd7415a85');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-35a2d3c8-f1bd-48c4-acc4-bf15d0f5337b\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-35a2d3c8-f1bd-48c4-acc4-bf15d0f5337b')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-35a2d3c8-f1bd-48c4-acc4-bf15d0f5337b button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_75751db4-4af4-4f32-a3f2-8201aba79a92\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('PrimeiroTurno')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_75751db4-4af4-4f32-a3f2-8201aba79a92 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('PrimeiroTurno');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"PrimeiroTurno","summary":"{\n  \"name\": \"PrimeiroTurno\",\n  \"rows\": 20,\n  \"fields\": [\n    {\n      \"column\": \"time\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 20,\n        \"samples\": [\n          \"Arsenal\",\n          \"Tottenham\",\n          \"Nott'ham Forest\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"count_x\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 9,\n        \"max\": 10,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          9,\n          10\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"VCasaValor\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.152721655559722,\n        \"min\": 1.0,\n        \"max\": 8.5,\n        \"num_unique_values\": 12,\n        \"samples\": [\n          7.5,\n          3.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"GolsCasaC\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5,\n        \"min\": 8,\n        \"max\": 26,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          13,\n          26\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"GolsVisiC\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4,\n        \"min\": 6,\n        \"max\": 24,\n        \"num_unique_values\": 12,\n        \"samples\": [\n          16,\n          9\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"count_y\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 9,\n        \"max\": 10,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          10,\n          9\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"VVisValor\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.678815371811796,\n        \"min\": 1.0,\n        \"max\": 7.0,\n        \"num_unique_values\": 12,\n        \"samples\": [\n          2.0,\n          6.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"GolsCasaV\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4,\n        \"min\": 8,\n        \"max\": 24,\n        \"num_unique_values\": 15,\n        \"samples\": [\n          24,\n          9\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"GolsVisiV\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4,\n        \"min\": 5,\n        \"max\": 22,\n        \"num_unique_values\": 11,\n        \"samples\": [\n          9,\n          14\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":16}]},{"cell_type":"code","source":["PrimeiroTurno['W'] = PrimeiroTurno['VCasaValor']+PrimeiroTurno['VVisValor'] #win value\n","PrimeiroTurno['G'] = PrimeiroTurno['count_x'] + PrimeiroTurno['count_y']  #games\n","PrimeiroTurno['GF'] = PrimeiroTurno['GolsCasaC']+PrimeiroTurno['GolsVisiV'] #goals for\n","PrimeiroTurno['GA'] = PrimeiroTurno['GolsVisiC']+PrimeiroTurno['GolsCasaV'] #goals against\n","\n","SegundoTurno['W'] = SegundoTurno['VCasaValor']+SegundoTurno['VVisValor'] #win value\n","SegundoTurno['G'] = SegundoTurno['count_x'] + SegundoTurno['count_y']  #games\n","SegundoTurno['GF'] = SegundoTurno['GolsCasaC']+SegundoTurno['GolsVisiV'] #goals for\n","SegundoTurno['GA'] = SegundoTurno['GolsVisiC']+SegundoTurno['GolsCasaV'] #goals against"],"metadata":{"id":"yNL52klfN9KO","executionInfo":{"status":"ok","timestamp":1738539758320,"user_tz":180,"elapsed":22,"user":{"displayName":"Lucas Calmon","userId":"09752934338034803828"}}},"execution_count":17,"outputs":[]},{"cell_type":"code","source":["PrimeiroTurno"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"VLZtF2y6g0iT","executionInfo":{"status":"ok","timestamp":1738539758634,"user_tz":180,"elapsed":336,"user":{"displayName":"Lucas Calmon","userId":"09752934338034803828"}},"outputId":"b4c5d51e-d426-4bda-e02a-abdc4907e0c4"},"execution_count":18,"outputs":[{"output_type":"execute_result","data":{"text/plain":["               time  count_x  VCasaValor  GolsCasaC  GolsVisiC  count_y  \\\n","0           Arsenal       10         8.0         22         10        9   \n","1       Aston Villa        9         8.5         26          6       10   \n","2       Bournemouth       10         5.5         15         15        9   \n","3         Brentford       10         4.5         17         18        9   \n","4          Brighton       10         7.0         22         14        9   \n","..              ...      ...         ...        ...        ...      ...   \n","15  Nott'ham Forest        9         3.5         12         14       10   \n","16    Sheffield Utd       10         2.5         10         24        9   \n","17        Tottenham        9         6.0         17         12       10   \n","18         West Ham        9         6.0         17         10       10   \n","19           Wolves        9         5.5         13         14       10   \n","\n","    VVisValor  GolsCasaV  GolsVisiV     W   G  GF  GA  \n","0         6.0          8         14  14.0  19  36  18  \n","1         5.0         19         14  13.5  19  40  25  \n","2         4.5         20         16  10.0  19  31  35  \n","3         2.5         11          8   7.0  19  25  29  \n","4         4.0         19         16  11.0  19  38  33  \n","..        ...        ...        ...   ...  ..  ..  ..  \n","15        3.0         20         10   6.5  19  22  34  \n","16        1.0         23          5   3.5  19  15  47  \n","17        6.5         16         22  12.5  19  39  28  \n","18        5.5         20         16  11.5  19  33  30  \n","19        3.5         17         14   9.0  19  27  31  \n","\n","[20 rows x 13 columns]"],"text/html":["\n","  <div id=\"df-0599ee8c-eb4f-4ffc-9342-d9ab0df66374\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>time</th>\n","      <th>count_x</th>\n","      <th>VCasaValor</th>\n","      <th>GolsCasaC</th>\n","      <th>GolsVisiC</th>\n","      <th>count_y</th>\n","      <th>VVisValor</th>\n","      <th>GolsCasaV</th>\n","      <th>GolsVisiV</th>\n","      <th>W</th>\n","      <th>G</th>\n","      <th>GF</th>\n","      <th>GA</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Arsenal</td>\n","      <td>10</td>\n","      <td>8.0</td>\n","      <td>22</td>\n","      <td>10</td>\n","      <td>9</td>\n","      <td>6.0</td>\n","      <td>8</td>\n","      <td>14</td>\n","      <td>14.0</td>\n","      <td>19</td>\n","      <td>36</td>\n","      <td>18</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Aston Villa</td>\n","      <td>9</td>\n","      <td>8.5</td>\n","      <td>26</td>\n","      <td>6</td>\n","      <td>10</td>\n","      <td>5.0</td>\n","      <td>19</td>\n","      <td>14</td>\n","      <td>13.5</td>\n","      <td>19</td>\n","      <td>40</td>\n","      <td>25</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Bournemouth</td>\n","      <td>10</td>\n","      <td>5.5</td>\n","      <td>15</td>\n","      <td>15</td>\n","      <td>9</td>\n","      <td>4.5</td>\n","      <td>20</td>\n","      <td>16</td>\n","      <td>10.0</td>\n","      <td>19</td>\n","      <td>31</td>\n","      <td>35</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Brentford</td>\n","      <td>10</td>\n","      <td>4.5</td>\n","      <td>17</td>\n","      <td>18</td>\n","      <td>9</td>\n","      <td>2.5</td>\n","      <td>11</td>\n","      <td>8</td>\n","      <td>7.0</td>\n","      <td>19</td>\n","      <td>25</td>\n","      <td>29</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Brighton</td>\n","      <td>10</td>\n","      <td>7.0</td>\n","      <td>22</td>\n","      <td>14</td>\n","      <td>9</td>\n","      <td>4.0</td>\n","      <td>19</td>\n","      <td>16</td>\n","      <td>11.0</td>\n","      <td>19</td>\n","      <td>38</td>\n","      <td>33</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>Nott'ham Forest</td>\n","      <td>9</td>\n","      <td>3.5</td>\n","      <td>12</td>\n","      <td>14</td>\n","      <td>10</td>\n","      <td>3.0</td>\n","      <td>20</td>\n","      <td>10</td>\n","      <td>6.5</td>\n","      <td>19</td>\n","      <td>22</td>\n","      <td>34</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>Sheffield Utd</td>\n","      <td>10</td>\n","      <td>2.5</td>\n","      <td>10</td>\n","      <td>24</td>\n","      <td>9</td>\n","      <td>1.0</td>\n","      <td>23</td>\n","      <td>5</td>\n","      <td>3.5</td>\n","      <td>19</td>\n","      <td>15</td>\n","      <td>47</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>Tottenham</td>\n","      <td>9</td>\n","      <td>6.0</td>\n","      <td>17</td>\n","      <td>12</td>\n","      <td>10</td>\n","      <td>6.5</td>\n","      <td>16</td>\n","      <td>22</td>\n","      <td>12.5</td>\n","      <td>19</td>\n","      <td>39</td>\n","      <td>28</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>West Ham</td>\n","      <td>9</td>\n","      <td>6.0</td>\n","      <td>17</td>\n","      <td>10</td>\n","      <td>10</td>\n","      <td>5.5</td>\n","      <td>20</td>\n","      <td>16</td>\n","      <td>11.5</td>\n","      <td>19</td>\n","      <td>33</td>\n","      <td>30</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>Wolves</td>\n","      <td>9</td>\n","      <td>5.5</td>\n","      <td>13</td>\n","      <td>14</td>\n","      <td>10</td>\n","      <td>3.5</td>\n","      <td>17</td>\n","      <td>14</td>\n","      <td>9.0</td>\n","      <td>19</td>\n","      <td>27</td>\n","      <td>31</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>20 rows × 13 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0599ee8c-eb4f-4ffc-9342-d9ab0df66374')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-0599ee8c-eb4f-4ffc-9342-d9ab0df66374 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-0599ee8c-eb4f-4ffc-9342-d9ab0df66374');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-097e695a-dcf9-4290-937c-10ea9ad39951\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-097e695a-dcf9-4290-937c-10ea9ad39951')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-097e695a-dcf9-4290-937c-10ea9ad39951 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_2f418e4e-23d3-42f4-9131-aecbdc5efc30\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('PrimeiroTurno')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_2f418e4e-23d3-42f4-9131-aecbdc5efc30 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('PrimeiroTurno');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"PrimeiroTurno","summary":"{\n  \"name\": \"PrimeiroTurno\",\n  \"rows\": 20,\n  \"fields\": [\n    {\n      \"column\": \"time\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 20,\n        \"samples\": [\n          \"Arsenal\",\n          \"Tottenham\",\n          \"Nott'ham Forest\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"count_x\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 9,\n        \"max\": 10,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          9,\n          10\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"VCasaValor\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.152721655559722,\n        \"min\": 1.0,\n        \"max\": 8.5,\n        \"num_unique_values\": 12,\n        \"samples\": [\n          7.5,\n          3.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"GolsCasaC\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5,\n        \"min\": 8,\n        \"max\": 26,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          13,\n          26\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"GolsVisiC\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4,\n        \"min\": 6,\n        \"max\": 24,\n        \"num_unique_values\": 12,\n        \"samples\": [\n          16,\n          9\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"count_y\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 9,\n        \"max\": 10,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          10,\n          9\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"VVisValor\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.678815371811796,\n        \"min\": 1.0,\n        \"max\": 7.0,\n        \"num_unique_values\": 12,\n        \"samples\": [\n          2.0,\n          6.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"GolsCasaV\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4,\n        \"min\": 8,\n        \"max\": 24,\n        \"num_unique_values\": 15,\n        \"samples\": [\n          24,\n          9\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"GolsVisiV\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4,\n        \"min\": 5,\n        \"max\": 22,\n        \"num_unique_values\": 11,\n        \"samples\": [\n          9,\n          14\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"W\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3.340343505815248,\n        \"min\": 3.5,\n        \"max\": 15.0,\n        \"num_unique_values\": 15,\n        \"samples\": [\n          5.5,\n          6.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"G\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 19,\n        \"max\": 19,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          19\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"GF\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 8,\n        \"min\": 15,\n        \"max\": 44,\n        \"num_unique_values\": 17,\n        \"samples\": [\n          36\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"GA\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7,\n        \"min\": 16,\n        \"max\": 47,\n        \"num_unique_values\": 13,\n        \"samples\": [\n          30\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":18}]},{"cell_type":"code","source":["PrimeiroTurno['win_percentage'] = PrimeiroTurno['W']/PrimeiroTurno['G'] #win percentage - (Win Value)/(Games Played)\n","PrimeiroTurno['pythagorean'] = PrimeiroTurno['GF']**2/(PrimeiroTurno['GF']**2 + PrimeiroTurno['GA']**2) #pythagorean expectation - (Gols For)^2/((Gols For)^2 + (Gols Against)^2)\n","\n","\n","SegundoTurno['win_percentage'] = SegundoTurno['W']/SegundoTurno['G']\n","SegundoTurno['pythagorean'] = SegundoTurno['GF']**2/(SegundoTurno['GF']**2 + SegundoTurno['GA']**2)"],"metadata":{"id":"x7udVn9AN-tK","executionInfo":{"status":"ok","timestamp":1738539758634,"user_tz":180,"elapsed":24,"user":{"displayName":"Lucas Calmon","userId":"09752934338034803828"}}},"execution_count":19,"outputs":[]},{"cell_type":"code","source":["PrimeiroTurno[['time', 'G', 'W', 'GF', 'GA', 'win_percentage']]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"B4A60YGbg2nf","executionInfo":{"status":"ok","timestamp":1738539758634,"user_tz":180,"elapsed":23,"user":{"displayName":"Lucas Calmon","userId":"09752934338034803828"}},"outputId":"9512fc7a-ed2a-4ae4-822a-b230ad479ad7"},"execution_count":20,"outputs":[{"output_type":"execute_result","data":{"text/plain":["               time   G     W  GF  GA  win_percentage\n","0           Arsenal  19  14.0  36  18        0.736842\n","1       Aston Villa  19  13.5  40  25        0.710526\n","2       Bournemouth  19  10.0  31  35        0.526316\n","3         Brentford  19   7.0  25  29        0.368421\n","4          Brighton  19  11.0  38  33        0.578947\n","..              ...  ..   ...  ..  ..             ...\n","15  Nott'ham Forest  19   6.5  22  34        0.342105\n","16    Sheffield Utd  19   3.5  15  47        0.184211\n","17        Tottenham  19  12.5  39  28        0.657895\n","18         West Ham  19  11.5  33  30        0.605263\n","19           Wolves  19   9.0  27  31        0.473684\n","\n","[20 rows x 6 columns]"],"text/html":["\n","  <div id=\"df-b83d7ff6-ebd5-4f73-bf12-2be7ffdc40a3\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>time</th>\n","      <th>G</th>\n","      <th>W</th>\n","      <th>GF</th>\n","      <th>GA</th>\n","      <th>win_percentage</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Arsenal</td>\n","      <td>19</td>\n","      <td>14.0</td>\n","      <td>36</td>\n","      <td>18</td>\n","      <td>0.736842</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Aston Villa</td>\n","      <td>19</td>\n","      <td>13.5</td>\n","      <td>40</td>\n","      <td>25</td>\n","      <td>0.710526</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Bournemouth</td>\n","      <td>19</td>\n","      <td>10.0</td>\n","      <td>31</td>\n","      <td>35</td>\n","      <td>0.526316</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Brentford</td>\n","      <td>19</td>\n","      <td>7.0</td>\n","      <td>25</td>\n","      <td>29</td>\n","      <td>0.368421</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Brighton</td>\n","      <td>19</td>\n","      <td>11.0</td>\n","      <td>38</td>\n","      <td>33</td>\n","      <td>0.578947</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>Nott'ham Forest</td>\n","      <td>19</td>\n","      <td>6.5</td>\n","      <td>22</td>\n","      <td>34</td>\n","      <td>0.342105</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>Sheffield Utd</td>\n","      <td>19</td>\n","      <td>3.5</td>\n","      <td>15</td>\n","      <td>47</td>\n","      <td>0.184211</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>Tottenham</td>\n","      <td>19</td>\n","      <td>12.5</td>\n","      <td>39</td>\n","      <td>28</td>\n","      <td>0.657895</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>West Ham</td>\n","      <td>19</td>\n","      <td>11.5</td>\n","      <td>33</td>\n","      <td>30</td>\n","      <td>0.605263</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>Wolves</td>\n","      <td>19</td>\n","      <td>9.0</td>\n","      <td>27</td>\n","      <td>31</td>\n","      <td>0.473684</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>20 rows × 6 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b83d7ff6-ebd5-4f73-bf12-2be7ffdc40a3')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-b83d7ff6-ebd5-4f73-bf12-2be7ffdc40a3 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-b83d7ff6-ebd5-4f73-bf12-2be7ffdc40a3');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-8fe6e148-32c0-4ee2-9256-1a605a6d5db0\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-8fe6e148-32c0-4ee2-9256-1a605a6d5db0')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-8fe6e148-32c0-4ee2-9256-1a605a6d5db0 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"PrimeiroTurno[['time', 'G', 'W', 'GF', 'GA', 'win_percentage']]\",\n  \"rows\": 20,\n  \"fields\": [\n    {\n      \"column\": \"time\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 20,\n        \"samples\": [\n          \"Arsenal\",\n          \"Tottenham\",\n          \"Nott'ham Forest\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"G\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 19,\n        \"max\": 19,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          19\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"W\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3.340343505815248,\n        \"min\": 3.5,\n        \"max\": 15.0,\n        \"num_unique_values\": 15,\n        \"samples\": [\n          5.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"GF\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 8,\n        \"min\": 15,\n        \"max\": 44,\n        \"num_unique_values\": 17,\n        \"samples\": [\n          36\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"GA\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7,\n        \"min\": 16,\n        \"max\": 47,\n        \"num_unique_values\": 13,\n        \"samples\": [\n          30\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"win_percentage\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.17580755293764466,\n        \"min\": 0.18421052631578946,\n        \"max\": 0.7894736842105263,\n        \"num_unique_values\": 15,\n        \"samples\": [\n          0.2894736842105263\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":20}]},{"cell_type":"code","source":["PrimeiroTurno[['time', 'G', 'W', 'GF', 'GA', 'pythagorean']]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"k8MCHoi3iwlr","executionInfo":{"status":"ok","timestamp":1738539758634,"user_tz":180,"elapsed":22,"user":{"displayName":"Lucas Calmon","userId":"09752934338034803828"}},"outputId":"cfa55ffd-aa3b-4684-ef43-3dee5b5b1690"},"execution_count":21,"outputs":[{"output_type":"execute_result","data":{"text/plain":["               time   G     W  GF  GA  pythagorean\n","0           Arsenal  19  14.0  36  18     0.800000\n","1       Aston Villa  19  13.5  40  25     0.719101\n","2       Bournemouth  19  10.0  31  35     0.439616\n","3         Brentford  19   7.0  25  29     0.426330\n","4          Brighton  19  11.0  38  33     0.570075\n","..              ...  ..   ...  ..  ..          ...\n","15  Nott'ham Forest  19   6.5  22  34     0.295122\n","16    Sheffield Utd  19   3.5  15  47     0.092440\n","17        Tottenham  19  12.5  39  28     0.659870\n","18         West Ham  19  11.5  33  30     0.547511\n","19           Wolves  19   9.0  27  31     0.431361\n","\n","[20 rows x 6 columns]"],"text/html":["\n","  <div id=\"df-727cb60c-1215-4a29-9b42-5475090ab562\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>time</th>\n","      <th>G</th>\n","      <th>W</th>\n","      <th>GF</th>\n","      <th>GA</th>\n","      <th>pythagorean</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Arsenal</td>\n","      <td>19</td>\n","      <td>14.0</td>\n","      <td>36</td>\n","      <td>18</td>\n","      <td>0.800000</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Aston Villa</td>\n","      <td>19</td>\n","      <td>13.5</td>\n","      <td>40</td>\n","      <td>25</td>\n","      <td>0.719101</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Bournemouth</td>\n","      <td>19</td>\n","      <td>10.0</td>\n","      <td>31</td>\n","      <td>35</td>\n","      <td>0.439616</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Brentford</td>\n","      <td>19</td>\n","      <td>7.0</td>\n","      <td>25</td>\n","      <td>29</td>\n","      <td>0.426330</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Brighton</td>\n","      <td>19</td>\n","      <td>11.0</td>\n","      <td>38</td>\n","      <td>33</td>\n","      <td>0.570075</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>Nott'ham Forest</td>\n","      <td>19</td>\n","      <td>6.5</td>\n","      <td>22</td>\n","      <td>34</td>\n","      <td>0.295122</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>Sheffield Utd</td>\n","      <td>19</td>\n","      <td>3.5</td>\n","      <td>15</td>\n","      <td>47</td>\n","      <td>0.092440</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>Tottenham</td>\n","      <td>19</td>\n","      <td>12.5</td>\n","      <td>39</td>\n","      <td>28</td>\n","      <td>0.659870</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>West Ham</td>\n","      <td>19</td>\n","      <td>11.5</td>\n","      <td>33</td>\n","      <td>30</td>\n","      <td>0.547511</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>Wolves</td>\n","      <td>19</td>\n","      <td>9.0</td>\n","      <td>27</td>\n","      <td>31</td>\n","      <td>0.431361</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>20 rows × 6 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-727cb60c-1215-4a29-9b42-5475090ab562')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-727cb60c-1215-4a29-9b42-5475090ab562 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-727cb60c-1215-4a29-9b42-5475090ab562');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-a519a6da-82b3-4ca2-93a1-bdf2176dde52\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a519a6da-82b3-4ca2-93a1-bdf2176dde52')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-a519a6da-82b3-4ca2-93a1-bdf2176dde52 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"PrimeiroTurno[['time', 'G', 'W', 'GF', 'GA', 'pythagorean']]\",\n  \"rows\": 20,\n  \"fields\": [\n    {\n      \"column\": \"time\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 20,\n        \"samples\": [\n          \"Arsenal\",\n          \"Tottenham\",\n          \"Nott'ham Forest\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"G\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 19,\n        \"max\": 19,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          19\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"W\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3.340343505815248,\n        \"min\": 3.5,\n        \"max\": 15.0,\n        \"num_unique_values\": 15,\n        \"samples\": [\n          5.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"GF\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 8,\n        \"min\": 15,\n        \"max\": 44,\n        \"num_unique_values\": 17,\n        \"samples\": [\n          36\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"GA\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7,\n        \"min\": 16,\n        \"max\": 47,\n        \"num_unique_values\": 13,\n        \"samples\": [\n          30\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"pythagorean\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.21267564090112218,\n        \"min\": 0.0924404272801972,\n        \"max\": 0.8559369724254361,\n        \"num_unique_values\": 20,\n        \"samples\": [\n          0.8\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":21}]},{"cell_type":"code","source":["plt.figure(figsize=(8, 6), facecolor=\"#EEE9E4\")\n","ax = plt.axes()\n","ax.set_facecolor(\"#EEE9E4\")\n","sns.regplot(x=\"pythagorean\", y = \"win_percentage\", data = PrimeiroTurno,ci=None,scatter_kws={'color': '#1E2836'},line_kws={'color': '#1E2836'})\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":542},"id":"T40swRYmOALJ","executionInfo":{"status":"ok","timestamp":1738539759569,"user_tz":180,"elapsed":956,"user":{"displayName":"Lucas Calmon","userId":"09752934338034803828"}},"outputId":"a64c9810-207d-453e-d46e-338f87da8e81"},"execution_count":22,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 800x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["sns.regplot(x=\"pythagorean\", y = \"win_percentage\", data = SegundoTurno,ci=None)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":466},"id":"9u8m_drpOBhn","executionInfo":{"status":"ok","timestamp":1738539759569,"user_tz":180,"elapsed":18,"user":{"displayName":"Lucas Calmon","userId":"09752934338034803828"}},"outputId":"8dfbbd71-a0a2-4c5c-c66d-0cd5fb613feb"},"execution_count":23,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: xlabel='pythagorean', ylabel='win_percentage'>"]},"metadata":{},"execution_count":23},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["Bra = pd.merge(PrimeiroTurno, SegundoTurno, on=['time'])\n","Bra"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":461},"id":"fzoKOvOAOCyr","executionInfo":{"status":"ok","timestamp":1738539759569,"user_tz":180,"elapsed":16,"user":{"displayName":"Lucas Calmon","userId":"09752934338034803828"}},"outputId":"8447f042-ab1b-4c38-e53e-6e9fe60265c4"},"execution_count":24,"outputs":[{"output_type":"execute_result","data":{"text/plain":["               time  count_x_x  VCasaValor_x  GolsCasaC_x  GolsVisiC_x  \\\n","0           Arsenal         10           8.0           22           10   \n","1       Aston Villa          9           8.5           26            6   \n","2       Bournemouth         10           5.5           15           15   \n","3         Brentford         10           4.5           17           18   \n","4          Brighton         10           7.0           22           14   \n","..              ...        ...           ...          ...          ...   \n","15  Nott'ham Forest          9           3.5           12           14   \n","16    Sheffield Utd         10           2.5           10           24   \n","17        Tottenham          9           6.0           17           12   \n","18         West Ham          9           6.0           17           10   \n","19           Wolves          9           5.5           13           14   \n","\n","    count_y_x  VVisValor_x  GolsCasaV_x  GolsVisiV_x   W_x  G_x  GF_x  GA_x  \\\n","0           9          6.0            8           14  14.0   19    36    18   \n","1          10          5.0           19           14  13.5   19    40    25   \n","2           9          4.5           20           16  10.0   19    31    35   \n","3           9          2.5           11            8   7.0   19    25    29   \n","4           9          4.0           19           16  11.0   19    38    33   \n","..        ...          ...          ...          ...   ...  ...   ...   ...   \n","15         10          3.0           20           10   6.5   19    22    34   \n","16          9          1.0           23            5   3.5   19    15    47   \n","17         10          6.5           16           22  12.5   19    39    28   \n","18         10          5.5           20           16  11.5   19    33    30   \n","19         10          3.5           17           14   9.0   19    27    31   \n","\n","    win_percentage_x  pythagorean_x  count_x_y  VCasaValor_y  GolsCasaC_y  \\\n","0           0.736842       0.800000          9           8.0           26   \n","1           0.710526       0.719101         10           5.5           22   \n","2           0.526316       0.439616          9           4.5           12   \n","3           0.368421       0.426330          9           4.0           12   \n","4           0.578947       0.570075          9           4.0            8   \n","..               ...            ...        ...           ...          ...   \n","15          0.342105       0.295122         10           4.0           15   \n","16          0.184211       0.092440          9           1.5            9   \n","17          0.657895       0.659870         10           7.0           21   \n","18          0.605263       0.547511         10           5.0           14   \n","19          0.473684       0.431361         10           4.0           13   \n","\n","    GolsVisiC_y  count_y_y  VVisValor_y  GolsCasaV_y  GolsVisiV_y   W_y  G_y  \\\n","0             6         10          8.5            5           29  16.5   19   \n","1            22          9          5.0           14           14  10.5   19   \n","2            13         10          3.0           19           11   7.5   19   \n","3            16         10          3.5           20           19   7.5   19   \n","4            13         10          3.0           16            9   7.0   19   \n","..          ...        ...          ...          ...          ...   ...  ...   \n","15           16          9          3.0           17           12   7.0   19   \n","16           33         10          1.5           24           11   3.0   19   \n","17           15          9          3.5           18           14  10.5   19   \n","18           18          9          2.5           26           13   7.5   19   \n","19           16          9          3.5           18           10   7.5   19   \n","\n","    GF_y  GA_y  win_percentage_y  pythagorean_y  \n","0     55    11          0.868421       0.961538  \n","1     36    36          0.552632       0.500000  \n","2     23    32          0.394737       0.340631  \n","3     31    36          0.394737       0.425786  \n","4     17    29          0.368421       0.255752  \n","..   ...   ...               ...            ...  \n","15    27    33          0.368421       0.400990  \n","16    20    57          0.157895       0.109619  \n","17    35    33          0.552632       0.529386  \n","18    27    44          0.394737       0.273546  \n","19    23    34          0.394737       0.313947  \n","\n","[20 rows x 29 columns]"],"text/html":["\n","  <div id=\"df-66ab1313-1600-4558-8033-2265c7ad43f1\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>time</th>\n","      <th>count_x_x</th>\n","      <th>VCasaValor_x</th>\n","      <th>GolsCasaC_x</th>\n","      <th>GolsVisiC_x</th>\n","      <th>count_y_x</th>\n","      <th>VVisValor_x</th>\n","      <th>GolsCasaV_x</th>\n","      <th>GolsVisiV_x</th>\n","      <th>W_x</th>\n","      <th>G_x</th>\n","      <th>GF_x</th>\n","      <th>GA_x</th>\n","      <th>win_percentage_x</th>\n","      <th>pythagorean_x</th>\n","      <th>count_x_y</th>\n","      <th>VCasaValor_y</th>\n","      <th>GolsCasaC_y</th>\n","      <th>GolsVisiC_y</th>\n","      <th>count_y_y</th>\n","      <th>VVisValor_y</th>\n","      <th>GolsCasaV_y</th>\n","      <th>GolsVisiV_y</th>\n","      <th>W_y</th>\n","      <th>G_y</th>\n","      <th>GF_y</th>\n","      <th>GA_y</th>\n","      <th>win_percentage_y</th>\n","      <th>pythagorean_y</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Arsenal</td>\n","      <td>10</td>\n","      <td>8.0</td>\n","      <td>22</td>\n","      <td>10</td>\n","      <td>9</td>\n","      <td>6.0</td>\n","      <td>8</td>\n","      <td>14</td>\n","      <td>14.0</td>\n","      <td>19</td>\n","      <td>36</td>\n","      <td>18</td>\n","      <td>0.736842</td>\n","      <td>0.800000</td>\n","      <td>9</td>\n","      <td>8.0</td>\n","      <td>26</td>\n","      <td>6</td>\n","      <td>10</td>\n","      <td>8.5</td>\n","      <td>5</td>\n","      <td>29</td>\n","      <td>16.5</td>\n","      <td>19</td>\n","      <td>55</td>\n","      <td>11</td>\n","      <td>0.868421</td>\n","      <td>0.961538</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Aston Villa</td>\n","      <td>9</td>\n","      <td>8.5</td>\n","      <td>26</td>\n","      <td>6</td>\n","      <td>10</td>\n","      <td>5.0</td>\n","      <td>19</td>\n","      <td>14</td>\n","      <td>13.5</td>\n","      <td>19</td>\n","      <td>40</td>\n","      <td>25</td>\n","      <td>0.710526</td>\n","      <td>0.719101</td>\n","      <td>10</td>\n","      <td>5.5</td>\n","      <td>22</td>\n","      <td>22</td>\n","      <td>9</td>\n","      <td>5.0</td>\n","      <td>14</td>\n","      <td>14</td>\n","      <td>10.5</td>\n","      <td>19</td>\n","      <td>36</td>\n","      <td>36</td>\n","      <td>0.552632</td>\n","      <td>0.500000</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Bournemouth</td>\n","      <td>10</td>\n","      <td>5.5</td>\n","      <td>15</td>\n","      <td>15</td>\n","      <td>9</td>\n","      <td>4.5</td>\n","      <td>20</td>\n","      <td>16</td>\n","      <td>10.0</td>\n","      <td>19</td>\n","      <td>31</td>\n","      <td>35</td>\n","      <td>0.526316</td>\n","      <td>0.439616</td>\n","      <td>9</td>\n","      <td>4.5</td>\n","      <td>12</td>\n","      <td>13</td>\n","      <td>10</td>\n","      <td>3.0</td>\n","      <td>19</td>\n","      <td>11</td>\n","      <td>7.5</td>\n","      <td>19</td>\n","      <td>23</td>\n","      <td>32</td>\n","      <td>0.394737</td>\n","      <td>0.340631</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Brentford</td>\n","      <td>10</td>\n","      <td>4.5</td>\n","      <td>17</td>\n","      <td>18</td>\n","      <td>9</td>\n","      <td>2.5</td>\n","      <td>11</td>\n","      <td>8</td>\n","      <td>7.0</td>\n","      <td>19</td>\n","      <td>25</td>\n","      <td>29</td>\n","      <td>0.368421</td>\n","      <td>0.426330</td>\n","      <td>9</td>\n","      <td>4.0</td>\n","      <td>12</td>\n","      <td>16</td>\n","      <td>10</td>\n","      <td>3.5</td>\n","      <td>20</td>\n","      <td>19</td>\n","      <td>7.5</td>\n","      <td>19</td>\n","      <td>31</td>\n","      <td>36</td>\n","      <td>0.394737</td>\n","      <td>0.425786</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Brighton</td>\n","      <td>10</td>\n","      <td>7.0</td>\n","      <td>22</td>\n","      <td>14</td>\n","      <td>9</td>\n","      <td>4.0</td>\n","      <td>19</td>\n","      <td>16</td>\n","      <td>11.0</td>\n","      <td>19</td>\n","      <td>38</td>\n","      <td>33</td>\n","      <td>0.578947</td>\n","      <td>0.570075</td>\n","      <td>9</td>\n","      <td>4.0</td>\n","      <td>8</td>\n","      <td>13</td>\n","      <td>10</td>\n","      <td>3.0</td>\n","      <td>16</td>\n","      <td>9</td>\n","      <td>7.0</td>\n","      <td>19</td>\n","      <td>17</td>\n","      <td>29</td>\n","      <td>0.368421</td>\n","      <td>0.255752</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>Nott'ham Forest</td>\n","      <td>9</td>\n","      <td>3.5</td>\n","      <td>12</td>\n","      <td>14</td>\n","      <td>10</td>\n","      <td>3.0</td>\n","      <td>20</td>\n","      <td>10</td>\n","      <td>6.5</td>\n","      <td>19</td>\n","      <td>22</td>\n","      <td>34</td>\n","      <td>0.342105</td>\n","      <td>0.295122</td>\n","      <td>10</td>\n","      <td>4.0</td>\n","      <td>15</td>\n","      <td>16</td>\n","      <td>9</td>\n","      <td>3.0</td>\n","      <td>17</td>\n","      <td>12</td>\n","      <td>7.0</td>\n","      <td>19</td>\n","      <td>27</td>\n","      <td>33</td>\n","      <td>0.368421</td>\n","      <td>0.400990</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>Sheffield Utd</td>\n","      <td>10</td>\n","      <td>2.5</td>\n","      <td>10</td>\n","      <td>24</td>\n","      <td>9</td>\n","      <td>1.0</td>\n","      <td>23</td>\n","      <td>5</td>\n","      <td>3.5</td>\n","      <td>19</td>\n","      <td>15</td>\n","      <td>47</td>\n","      <td>0.184211</td>\n","      <td>0.092440</td>\n","      <td>9</td>\n","      <td>1.5</td>\n","      <td>9</td>\n","      <td>33</td>\n","      <td>10</td>\n","      <td>1.5</td>\n","      <td>24</td>\n","      <td>11</td>\n","      <td>3.0</td>\n","      <td>19</td>\n","      <td>20</td>\n","      <td>57</td>\n","      <td>0.157895</td>\n","      <td>0.109619</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>Tottenham</td>\n","      <td>9</td>\n","      <td>6.0</td>\n","      <td>17</td>\n","      <td>12</td>\n","      <td>10</td>\n","      <td>6.5</td>\n","      <td>16</td>\n","      <td>22</td>\n","      <td>12.5</td>\n","      <td>19</td>\n","      <td>39</td>\n","      <td>28</td>\n","      <td>0.657895</td>\n","      <td>0.659870</td>\n","      <td>10</td>\n","      <td>7.0</td>\n","      <td>21</td>\n","      <td>15</td>\n","      <td>9</td>\n","      <td>3.5</td>\n","      <td>18</td>\n","      <td>14</td>\n","      <td>10.5</td>\n","      <td>19</td>\n","      <td>35</td>\n","      <td>33</td>\n","      <td>0.552632</td>\n","      <td>0.529386</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>West Ham</td>\n","      <td>9</td>\n","      <td>6.0</td>\n","      <td>17</td>\n","      <td>10</td>\n","      <td>10</td>\n","      <td>5.5</td>\n","      <td>20</td>\n","      <td>16</td>\n","      <td>11.5</td>\n","      <td>19</td>\n","      <td>33</td>\n","      <td>30</td>\n","      <td>0.605263</td>\n","      <td>0.547511</td>\n","      <td>10</td>\n","      <td>5.0</td>\n","      <td>14</td>\n","      <td>18</td>\n","      <td>9</td>\n","      <td>2.5</td>\n","      <td>26</td>\n","      <td>13</td>\n","      <td>7.5</td>\n","      <td>19</td>\n","      <td>27</td>\n","      <td>44</td>\n","      <td>0.394737</td>\n","      <td>0.273546</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>Wolves</td>\n","      <td>9</td>\n","      <td>5.5</td>\n","      <td>13</td>\n","      <td>14</td>\n","      <td>10</td>\n","      <td>3.5</td>\n","      <td>17</td>\n","      <td>14</td>\n","      <td>9.0</td>\n","      <td>19</td>\n","      <td>27</td>\n","      <td>31</td>\n","      <td>0.473684</td>\n","      <td>0.431361</td>\n","      <td>10</td>\n","      <td>4.0</td>\n","      <td>13</td>\n","      <td>16</td>\n","      <td>9</td>\n","      <td>3.5</td>\n","      <td>18</td>\n","      <td>10</td>\n","      <td>7.5</td>\n","      <td>19</td>\n","      <td>23</td>\n","      <td>34</td>\n","      <td>0.394737</td>\n","      <td>0.313947</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>20 rows × 29 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-66ab1313-1600-4558-8033-2265c7ad43f1')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-66ab1313-1600-4558-8033-2265c7ad43f1 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-66ab1313-1600-4558-8033-2265c7ad43f1');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-d5646305-8803-473d-9b3f-17acf4f7cb5b\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d5646305-8803-473d-9b3f-17acf4f7cb5b')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-d5646305-8803-473d-9b3f-17acf4f7cb5b button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_6fbedf06-c116-4f9a-912d-3842c2d83d2c\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('Bra')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_6fbedf06-c116-4f9a-912d-3842c2d83d2c button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('Bra');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"Bra"}},"metadata":{},"execution_count":24}]},{"cell_type":"code","source":["Bra[['time', 'win_percentage_x', 'pythagorean_x', 'win_percentage_y', 'pythagorean_y']]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"tEvg1Y8RlAGW","executionInfo":{"status":"ok","timestamp":1738539759937,"user_tz":180,"elapsed":384,"user":{"displayName":"Lucas Calmon","userId":"09752934338034803828"}},"outputId":"151c277b-16fb-4bf6-c08c-240a499cfad8"},"execution_count":25,"outputs":[{"output_type":"execute_result","data":{"text/plain":["               time  win_percentage_x  pythagorean_x  win_percentage_y  \\\n","0           Arsenal          0.736842       0.800000          0.868421   \n","1       Aston Villa          0.710526       0.719101          0.552632   \n","2       Bournemouth          0.526316       0.439616          0.394737   \n","3         Brentford          0.368421       0.426330          0.394737   \n","4          Brighton          0.578947       0.570075          0.368421   \n","..              ...               ...            ...               ...   \n","15  Nott'ham Forest          0.342105       0.295122          0.368421   \n","16    Sheffield Utd          0.184211       0.092440          0.157895   \n","17        Tottenham          0.657895       0.659870          0.552632   \n","18         West Ham          0.605263       0.547511          0.394737   \n","19           Wolves          0.473684       0.431361          0.394737   \n","\n","    pythagorean_y  \n","0        0.961538  \n","1        0.500000  \n","2        0.340631  \n","3        0.425786  \n","4        0.255752  \n","..            ...  \n","15       0.400990  \n","16       0.109619  \n","17       0.529386  \n","18       0.273546  \n","19       0.313947  \n","\n","[20 rows x 5 columns]"],"text/html":["\n","  <div id=\"df-ea5e967f-4fc0-4a49-bd70-512d2d11d99b\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>time</th>\n","      <th>win_percentage_x</th>\n","      <th>pythagorean_x</th>\n","      <th>win_percentage_y</th>\n","      <th>pythagorean_y</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Arsenal</td>\n","      <td>0.736842</td>\n","      <td>0.800000</td>\n","      <td>0.868421</td>\n","      <td>0.961538</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Aston Villa</td>\n","      <td>0.710526</td>\n","      <td>0.719101</td>\n","      <td>0.552632</td>\n","      <td>0.500000</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Bournemouth</td>\n","      <td>0.526316</td>\n","      <td>0.439616</td>\n","      <td>0.394737</td>\n","      <td>0.340631</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Brentford</td>\n","      <td>0.368421</td>\n","      <td>0.426330</td>\n","      <td>0.394737</td>\n","      <td>0.425786</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Brighton</td>\n","      <td>0.578947</td>\n","      <td>0.570075</td>\n","      <td>0.368421</td>\n","      <td>0.255752</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>Nott'ham Forest</td>\n","      <td>0.342105</td>\n","      <td>0.295122</td>\n","      <td>0.368421</td>\n","      <td>0.400990</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>Sheffield Utd</td>\n","      <td>0.184211</td>\n","      <td>0.092440</td>\n","      <td>0.157895</td>\n","      <td>0.109619</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>Tottenham</td>\n","      <td>0.657895</td>\n","      <td>0.659870</td>\n","      <td>0.552632</td>\n","      <td>0.529386</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>West Ham</td>\n","      <td>0.605263</td>\n","      <td>0.547511</td>\n","      <td>0.394737</td>\n","      <td>0.273546</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>Wolves</td>\n","      <td>0.473684</td>\n","      <td>0.431361</td>\n","      <td>0.394737</td>\n","      <td>0.313947</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>20 rows × 5 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ea5e967f-4fc0-4a49-bd70-512d2d11d99b')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-ea5e967f-4fc0-4a49-bd70-512d2d11d99b button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-ea5e967f-4fc0-4a49-bd70-512d2d11d99b');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-825558b1-3657-4605-9583-2147612c9831\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-825558b1-3657-4605-9583-2147612c9831')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-825558b1-3657-4605-9583-2147612c9831 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"Bra[['time', 'win_percentage_x', 'pythagorean_x', 'win_percentage_y', 'pythagorean_y']]\",\n  \"rows\": 20,\n  \"fields\": [\n    {\n      \"column\": \"time\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 20,\n        \"samples\": [\n          \"Arsenal\",\n          \"Tottenham\",\n          \"Nott'ham Forest\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"win_percentage_x\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.17580755293764466,\n        \"min\": 0.18421052631578946,\n        \"max\": 0.7894736842105263,\n        \"num_unique_values\": 15,\n        \"samples\": [\n          0.2894736842105263,\n          0.34210526315789475,\n          0.7368421052631579\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"pythagorean_x\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.21267564090112218,\n        \"min\": 0.0924404272801972,\n        \"max\": 0.8559369724254361,\n        \"num_unique_values\": 20,\n        \"samples\": [\n          0.8,\n          0.6598698481561822,\n          0.2951219512195122\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"win_percentage_y\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.1982206898917259,\n        \"min\": 0.15789473684210525,\n        \"max\": 0.9210526315789473,\n        \"num_unique_values\": 13,\n        \"samples\": [\n          0.9210526315789473,\n          0.7368421052631579,\n          0.868421052631579\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"pythagorean_y\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.2341566454445017,\n        \"min\": 0.10961907371882708,\n        \"max\": 0.9615384615384616,\n        \"num_unique_values\": 20,\n        \"samples\": [\n          0.9615384615384616,\n          0.5293863439930856,\n          0.400990099009901\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":25}]},{"cell_type":"code","source":["plt.figure(figsize=(8, 6), facecolor=\"#EEE9E4\")\n","ax = plt.axes()\n","ax.set_facecolor(\"#EEE9E4\")\n","sns.regplot(x=\"pythagorean_x\", y = \"win_percentage_x\", data = Bra,ci=None,scatter_kws={'color': '#1E2836'},line_kws={'color': '#1E2836'})\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":542},"id":"rcflLkBBCsVO","executionInfo":{"status":"ok","timestamp":1738539763931,"user_tz":180,"elapsed":890,"user":{"displayName":"Lucas Calmon","userId":"09752934338034803828"}},"outputId":"143a796b-a2ad-4f7a-84a9-f0ba67d2799d"},"execution_count":30,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 800x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["sns.regplot(x=\"win_percentage_x\", y = \"win_percentage_y\", data = Bra,ci=None)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":467},"id":"rYLpz-NlOEUX","executionInfo":{"status":"ok","timestamp":1738539759938,"user_tz":180,"elapsed":18,"user":{"displayName":"Lucas Calmon","userId":"09752934338034803828"}},"outputId":"2d1ed625-1daf-455c-f3b0-e0bfacad749a"},"execution_count":26,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: xlabel='win_percentage_x', ylabel='win_percentage_y'>"]},"metadata":{},"execution_count":26},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["sns.regplot(x=\"pythagorean_x\", y = \"win_percentage_y\", data = Bra, ci=None)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":467},"id":"6jw0SswjOF0n","executionInfo":{"status":"ok","timestamp":1738539760337,"user_tz":180,"elapsed":415,"user":{"displayName":"Lucas Calmon","userId":"09752934338034803828"}},"outputId":"4cb70a4d-1326-4e49-92d3-abb8e82269a1"},"execution_count":27,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: xlabel='pythagorean_x', ylabel='win_percentage_y'>"]},"metadata":{},"execution_count":27},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["dd = Bra.loc[:,['pythagorean_x', 'win_percentage_x', 'pythagorean_y', 'win_percentage_y']]\n","dd"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"nX4YLFsOOHUI","executionInfo":{"status":"ok","timestamp":1738539760337,"user_tz":180,"elapsed":24,"user":{"displayName":"Lucas Calmon","userId":"09752934338034803828"}},"outputId":"6f89c7eb-67f0-4b88-fe2a-6a778833c796"},"execution_count":28,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    pythagorean_x  win_percentage_x  pythagorean_y  win_percentage_y\n","0        0.800000          0.736842       0.961538          0.868421\n","1        0.719101          0.710526       0.500000          0.552632\n","2        0.439616          0.526316       0.340631          0.394737\n","3        0.426330          0.368421       0.425786          0.394737\n","4        0.570075          0.578947       0.255752          0.368421\n","..            ...               ...            ...               ...\n","15       0.295122          0.342105       0.400990          0.368421\n","16       0.092440          0.184211       0.109619          0.157895\n","17       0.659870          0.657895       0.529386          0.552632\n","18       0.547511          0.605263       0.273546          0.394737\n","19       0.431361          0.473684       0.313947          0.394737\n","\n","[20 rows x 4 columns]"],"text/html":["\n","  <div id=\"df-d183c622-6e86-42c9-b985-d46ab75c6e34\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>pythagorean_x</th>\n","      <th>win_percentage_x</th>\n","      <th>pythagorean_y</th>\n","      <th>win_percentage_y</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0.800000</td>\n","      <td>0.736842</td>\n","      <td>0.961538</td>\n","      <td>0.868421</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0.719101</td>\n","      <td>0.710526</td>\n","      <td>0.500000</td>\n","      <td>0.552632</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0.439616</td>\n","      <td>0.526316</td>\n","      <td>0.340631</td>\n","      <td>0.394737</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0.426330</td>\n","      <td>0.368421</td>\n","      <td>0.425786</td>\n","      <td>0.394737</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0.570075</td>\n","      <td>0.578947</td>\n","      <td>0.255752</td>\n","      <td>0.368421</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>0.295122</td>\n","      <td>0.342105</td>\n","      <td>0.400990</td>\n","      <td>0.368421</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>0.092440</td>\n","      <td>0.184211</td>\n","      <td>0.109619</td>\n","      <td>0.157895</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>0.659870</td>\n","      <td>0.657895</td>\n","      <td>0.529386</td>\n","      <td>0.552632</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>0.547511</td>\n","      <td>0.605263</td>\n","      <td>0.273546</td>\n","      <td>0.394737</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>0.431361</td>\n","      <td>0.473684</td>\n","      <td>0.313947</td>\n","      <td>0.394737</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>20 rows × 4 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d183c622-6e86-42c9-b985-d46ab75c6e34')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-d183c622-6e86-42c9-b985-d46ab75c6e34 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-d183c622-6e86-42c9-b985-d46ab75c6e34');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-4d43ce1e-c62e-4770-81f2-ad64c4b86243\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-4d43ce1e-c62e-4770-81f2-ad64c4b86243')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-4d43ce1e-c62e-4770-81f2-ad64c4b86243 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_b9c5285e-5118-497a-b3cb-2f63982d51ba\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('dd')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_b9c5285e-5118-497a-b3cb-2f63982d51ba button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('dd');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"dd","summary":"{\n  \"name\": \"dd\",\n  \"rows\": 20,\n  \"fields\": [\n    {\n      \"column\": \"pythagorean_x\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.21267564090112218,\n        \"min\": 0.0924404272801972,\n        \"max\": 0.8559369724254361,\n        \"num_unique_values\": 20,\n        \"samples\": [\n          0.8,\n          0.6598698481561822,\n          0.2951219512195122\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"win_percentage_x\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.17580755293764466,\n        \"min\": 0.18421052631578946,\n        \"max\": 0.7894736842105263,\n        \"num_unique_values\": 15,\n        \"samples\": [\n          0.2894736842105263,\n          0.34210526315789475,\n          0.7368421052631579\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"pythagorean_y\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.2341566454445017,\n        \"min\": 0.10961907371882708,\n        \"max\": 0.9615384615384616,\n        \"num_unique_values\": 20,\n        \"samples\": [\n          0.9615384615384616,\n          0.5293863439930856,\n          0.400990099009901\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"win_percentage_y\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.1982206898917259,\n        \"min\": 0.15789473684210525,\n        \"max\": 0.9210526315789473,\n        \"num_unique_values\": 13,\n        \"samples\": [\n          0.9210526315789473,\n          0.7368421052631579,\n          0.868421052631579\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":28}]},{"cell_type":"code","source":["cor_matrix = dd.corr()\n","\n","# View the correlation matrix\n","cor_matrix"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":175},"id":"dBbarJ-gOJYE","executionInfo":{"status":"ok","timestamp":1738539760338,"user_tz":180,"elapsed":24,"user":{"displayName":"Lucas Calmon","userId":"09752934338034803828"}},"outputId":"9f54b962-3254-457d-dc11-e0321a7c1c2e"},"execution_count":29,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                  pythagorean_x  win_percentage_x  pythagorean_y  \\\n","pythagorean_x          1.000000          0.952233       0.732654   \n","win_percentage_x       0.952233          1.000000       0.661247   \n","pythagorean_y          0.732654          0.661247       1.000000   \n","win_percentage_y       0.808502          0.759328       0.963960   \n","\n","                  win_percentage_y  \n","pythagorean_x             0.808502  \n","win_percentage_x          0.759328  \n","pythagorean_y             0.963960  \n","win_percentage_y          1.000000  "],"text/html":["\n","  <div id=\"df-e9245f31-dab8-4577-8e40-4496f1647983\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>pythagorean_x</th>\n","      <th>win_percentage_x</th>\n","      <th>pythagorean_y</th>\n","      <th>win_percentage_y</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>pythagorean_x</th>\n","      <td>1.000000</td>\n","      <td>0.952233</td>\n","      <td>0.732654</td>\n","      <td>0.808502</td>\n","    </tr>\n","    <tr>\n","      <th>win_percentage_x</th>\n","      <td>0.952233</td>\n","      <td>1.000000</td>\n","      <td>0.661247</td>\n","      <td>0.759328</td>\n","    </tr>\n","    <tr>\n","      <th>pythagorean_y</th>\n","      <td>0.732654</td>\n","      <td>0.661247</td>\n","      <td>1.000000</td>\n","      <td>0.963960</td>\n","    </tr>\n","    <tr>\n","      <th>win_percentage_y</th>\n","      <td>0.808502</td>\n","      <td>0.759328</td>\n","      <td>0.963960</td>\n","      <td>1.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e9245f31-dab8-4577-8e40-4496f1647983')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-e9245f31-dab8-4577-8e40-4496f1647983 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-e9245f31-dab8-4577-8e40-4496f1647983');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-2107e243-9fd6-4561-81a6-cce420d49747\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-2107e243-9fd6-4561-81a6-cce420d49747')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-2107e243-9fd6-4561-81a6-cce420d49747 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_b109965e-5473-40e1-a11a-d2323a316466\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('cor_matrix')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_b109965e-5473-40e1-a11a-d2323a316466 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('cor_matrix');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"cor_matrix","summary":"{\n  \"name\": \"cor_matrix\",\n  \"rows\": 4,\n  \"fields\": [\n    {\n      \"column\": \"pythagorean_x\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.12418197066031865,\n        \"min\": 0.7326536446633196,\n        \"max\": 1.0,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          0.9522329074401078,\n          0.8085018269048962,\n          1.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"win_percentage_x\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.15980807069393457,\n        \"min\": 0.6612469796224331,\n        \"max\": 1.0,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          1.0,\n          0.759327824266587,\n          0.9522329074401078\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"pythagorean_y\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.16777058769994788,\n        \"min\": 0.6612469796224331,\n        \"max\": 1.0,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          0.6612469796224331,\n          0.9639603639724966,\n          0.7326536446633196\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"win_percentage_y\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.11703041535756624,\n        \"min\": 0.759327824266587,\n        \"max\": 1.0,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          0.759327824266587,\n          1.0,\n          0.8085018269048962\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":29}]}]}