{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyPwIQL8z3yl4/1v4SEJ+x3T"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"id":"OhECiaz-NNRC","executionInfo":{"status":"ok","timestamp":1737842623131,"user_tz":180,"elapsed":10907,"user":{"displayName":"Lucas Calmon","userId":"09752934338034803828"}}},"outputs":[],"source":["import pandas as pd\n","import numpy as np\n","import statsmodels.formula.api as smf\n","import matplotlib.pyplot as plt\n","import seaborn as sns"]},{"cell_type":"code","source":["df = pd.read_html(\"https://fbref.com/pt/comps/12/2023-2024/cronograma/2023-2024-La-Liga-Resultados-e-Calendarios\")[0]\n","pd.set_option(\"display.max_columns\", None)\n","pd.set_option('display.max_rows', 10)\n","print(df)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"E-zg3_SINq5s","executionInfo":{"status":"ok","timestamp":1737842628158,"user_tz":180,"elapsed":5030,"user":{"displayName":"Lucas Calmon","userId":"09752934338034803828"}},"outputId":"947505d0-e2d1-403d-d9fc-225724036ac6"},"execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["      Sem  Dia        Data Horário        Em casa   xG Resultado  xG.1  \\\n","0     1.0  sex  2023-08-11   19:30        Almería  1.4       0–2   2.1   \n","1     1.0  sex  2023-08-11   22:00        Sevilla  0.7       1–2   1.1   \n","2     1.0  sáb  2023-08-12   17:00  Real Sociedad  1.0       1–1   0.8   \n","3     1.0  sáb  2023-08-12   18:30     Las Palmas  0.9       1–1   1.6   \n","4     1.0  sáb  2023-08-12   21:30  Athletic Club  0.4       0–2   0.9   \n","..    ...  ...         ...     ...            ...  ...       ...   ...   \n","416  38.0  sáb  2024-05-25   21:00    Real Madrid  1.0       0–0   0.7   \n","417  38.0  dom  2024-05-26   14:00         Getafe  0.9       1–2   1.4   \n","418  38.0  dom  2024-05-26   15:15     Las Palmas  1.0       1–1   2.5   \n","419  38.0  dom  2024-05-26   16:15     Celta Vigo  1.5       2–2   2.0   \n","420  38.0  dom  2024-05-26   21:00        Sevilla  1.5       1–2   1.3   \n","\n","          Visitante  Público                          Local  \\\n","0    Rayo Vallecano   14.837            Power Horse Stadium   \n","1          Valencia   34.184  Estadio Ramón Sánchez Pizjuán   \n","2            Girona   30.848                    Reale Arena   \n","3          Mallorca   24.100        Estadio de Gran Canaria   \n","4       Real Madrid   48.927                      San Mamés   \n","..              ...      ...                            ...   \n","416           Betis   73.614      Estadio Santiago Bernabéu   \n","417        Mallorca    9.545         Coliseum Alfonso Pérez   \n","418          Alavés   23.043        Estadio de Gran Canaria   \n","419        Valencia   21.878        Estadio Abanca Balaídos   \n","420       Barcelona   34.888  Estadio Ramón Sánchez Pizjuán   \n","\n","                      Árbitro  Relatório da Partida  Notas  \n","0             Javier Alberola  Relatório da Partida    NaN  \n","1                José Sánchez  Relatório da Partida    NaN  \n","2         Francisco Hernández  Relatório da Partida    NaN  \n","3               Víctor García  Relatório da Partida    NaN  \n","4                   Jesús Gil  Relatório da Partida    NaN  \n","..                        ...                   ...    ...  \n","416       Isidro Díaz de Mera  Relatório da Partida    NaN  \n","417             Víctor García  Relatório da Partida    NaN  \n","418       Francisco Hernández  Relatório da Partida    NaN  \n","419  Miguel Ángel Ortiz Arias  Relatório da Partida    NaN  \n","420         Javier Villanueva  Relatório da Partida    NaN  \n","\n","[421 rows x 14 columns]\n"]}]},{"cell_type":"code","source":["resultados = df[['Sem', 'Data', 'Em casa', 'Resultado', 'Visitante']]\n","resultados = resultados.dropna(how='all')\n","resultados"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"7UBZqBZpNs6e","executionInfo":{"status":"ok","timestamp":1737842628159,"user_tz":180,"elapsed":6,"user":{"displayName":"Lucas Calmon","userId":"09752934338034803828"}},"outputId":"afd65405-19f9-4254-b2b9-8473420e84fc"},"execution_count":3,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      Sem        Data        Em casa Resultado       Visitante\n","0     1.0  2023-08-11        Almería       0–2  Rayo Vallecano\n","1     1.0  2023-08-11        Sevilla       1–2        Valencia\n","2     1.0  2023-08-12  Real Sociedad       1–1          Girona\n","3     1.0  2023-08-12     Las Palmas       1–1        Mallorca\n","4     1.0  2023-08-12  Athletic Club       0–2     Real Madrid\n","..    ...         ...            ...       ...             ...\n","416  38.0  2024-05-25    Real Madrid       0–0           Betis\n","417  38.0  2024-05-26         Getafe       1–2        Mallorca\n","418  38.0  2024-05-26     Las Palmas       1–1          Alavés\n","419  38.0  2024-05-26     Celta Vigo       2–2        Valencia\n","420  38.0  2024-05-26        Sevilla       1–2       Barcelona\n","\n","[380 rows x 5 columns]"],"text/html":["\n","  <div id=\"df-e42e7c04-7b78-4e0c-a007-28a75e9069a7\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Sem</th>\n","      <th>Data</th>\n","      <th>Em casa</th>\n","      <th>Resultado</th>\n","      <th>Visitante</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1.0</td>\n","      <td>2023-08-11</td>\n","      <td>Almería</td>\n","      <td>0–2</td>\n","      <td>Rayo Vallecano</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1.0</td>\n","      <td>2023-08-11</td>\n","      <td>Sevilla</td>\n","      <td>1–2</td>\n","      <td>Valencia</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1.0</td>\n","      <td>2023-08-12</td>\n","      <td>Real Sociedad</td>\n","      <td>1–1</td>\n","      <td>Girona</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1.0</td>\n","      <td>2023-08-12</td>\n","      <td>Las Palmas</td>\n","      <td>1–1</td>\n","      <td>Mallorca</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1.0</td>\n","      <td>2023-08-12</td>\n","      <td>Athletic Club</td>\n","      <td>0–2</td>\n","      <td>Real Madrid</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>416</th>\n","      <td>38.0</td>\n","      <td>2024-05-25</td>\n","      <td>Real Madrid</td>\n","      <td>0–0</td>\n","      <td>Betis</td>\n","    </tr>\n","    <tr>\n","      <th>417</th>\n","      <td>38.0</td>\n","      <td>2024-05-26</td>\n","      <td>Getafe</td>\n","      <td>1–2</td>\n","      <td>Mallorca</td>\n","    </tr>\n","    <tr>\n","      <th>418</th>\n","      <td>38.0</td>\n","      <td>2024-05-26</td>\n","      <td>Las Palmas</td>\n","      <td>1–1</td>\n","      <td>Alavés</td>\n","    </tr>\n","    <tr>\n","      <th>419</th>\n","      <td>38.0</td>\n","      <td>2024-05-26</td>\n","      <td>Celta Vigo</td>\n","      <td>2–2</td>\n","      <td>Valencia</td>\n","    </tr>\n","    <tr>\n","      <th>420</th>\n","      <td>38.0</td>\n","      <td>2024-05-26</td>\n","      <td>Sevilla</td>\n","      <td>1–2</td>\n","      <td>Barcelona</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>380 rows × 5 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e42e7c04-7b78-4e0c-a007-28a75e9069a7')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-e42e7c04-7b78-4e0c-a007-28a75e9069a7 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-e42e7c04-7b78-4e0c-a007-28a75e9069a7');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-4410c6c0-ebfe-459c-b04e-ae625176923a\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-4410c6c0-ebfe-459c-b04e-ae625176923a')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-4410c6c0-ebfe-459c-b04e-ae625176923a button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_c97d0970-46b3-4487-9e4a-b37bf6af18d8\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('resultados')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_c97d0970-46b3-4487-9e4a-b37bf6af18d8 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('resultados');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"resultados","summary":"{\n  \"name\": \"resultados\",\n  \"rows\": 380,\n  \"fields\": [\n    {\n      \"column\": \"Sem\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 10.980313398163995,\n        \"min\": 1.0,\n        \"max\": 38.0,\n        \"num_unique_values\": 38,\n        \"samples\": [\n          34.0,\n          37.0,\n          5.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Data\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"num_unique_values\": 143,\n        \"samples\": [\n          \"2024-04-13\",\n          \"2023-09-22\",\n          \"2024-01-31\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Em casa\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 20,\n        \"samples\": [\n          \"Almer\\u00eda\",\n          \"Granada\",\n          \"Betis\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Resultado\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 33,\n        \"samples\": [\n          \"7\\u20130\",\n          \"2\\u20133\",\n          \"4\\u20131\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Visitante\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 20,\n        \"samples\": [\n          \"Rayo Vallecano\",\n          \"Sevilla\",\n          \"C\\u00e1diz\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":3}]},{"cell_type":"code","source":["placar = resultados.loc[:,\"Resultado\"].str.split(\"–\", n = 1, expand = True)\n","print(placar)\n","resultados.loc[:,\"CasaResul\"] = placar.loc[:,0]\n","resultados.loc[:,\"VisiResul\"] = placar.loc[:,1]\n","resultados = resultados.drop(columns=[\"Resultado\"])\n","resultados"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":667},"id":"X-6DcXCUNwDB","executionInfo":{"status":"ok","timestamp":1737842628473,"user_tz":180,"elapsed":319,"user":{"displayName":"Lucas Calmon","userId":"09752934338034803828"}},"outputId":"b135bbfd-a349-4280-8a6e-5605f7121161"},"execution_count":4,"outputs":[{"output_type":"stream","name":"stdout","text":["     0  1\n","0    0  2\n","1    1  2\n","2    1  1\n","3    1  1\n","4    0  2\n","..  .. ..\n","416  0  0\n","417  1  2\n","418  1  1\n","419  2  2\n","420  1  2\n","\n","[380 rows x 2 columns]\n"]},{"output_type":"execute_result","data":{"text/plain":["      Sem        Data        Em casa       Visitante CasaResul VisiResul\n","0     1.0  2023-08-11        Almería  Rayo Vallecano         0         2\n","1     1.0  2023-08-11        Sevilla        Valencia         1         2\n","2     1.0  2023-08-12  Real Sociedad          Girona         1         1\n","3     1.0  2023-08-12     Las Palmas        Mallorca         1         1\n","4     1.0  2023-08-12  Athletic Club     Real Madrid         0         2\n","..    ...         ...            ...             ...       ...       ...\n","416  38.0  2024-05-25    Real Madrid           Betis         0         0\n","417  38.0  2024-05-26         Getafe        Mallorca         1         2\n","418  38.0  2024-05-26     Las Palmas          Alavés         1         1\n","419  38.0  2024-05-26     Celta Vigo        Valencia         2         2\n","420  38.0  2024-05-26        Sevilla       Barcelona         1         2\n","\n","[380 rows x 6 columns]"],"text/html":["\n","  <div id=\"df-fa3f0f6a-eb3e-44d6-8805-7719648523e4\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Sem</th>\n","      <th>Data</th>\n","      <th>Em casa</th>\n","      <th>Visitante</th>\n","      <th>CasaResul</th>\n","      <th>VisiResul</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1.0</td>\n","      <td>2023-08-11</td>\n","      <td>Almería</td>\n","      <td>Rayo Vallecano</td>\n","      <td>0</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1.0</td>\n","      <td>2023-08-11</td>\n","      <td>Sevilla</td>\n","      <td>Valencia</td>\n","      <td>1</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1.0</td>\n","      <td>2023-08-12</td>\n","      <td>Real Sociedad</td>\n","      <td>Girona</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1.0</td>\n","      <td>2023-08-12</td>\n","      <td>Las Palmas</td>\n","      <td>Mallorca</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1.0</td>\n","      <td>2023-08-12</td>\n","      <td>Athletic Club</td>\n","      <td>Real Madrid</td>\n","      <td>0</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>416</th>\n","      <td>38.0</td>\n","      <td>2024-05-25</td>\n","      <td>Real Madrid</td>\n","      <td>Betis</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>417</th>\n","      <td>38.0</td>\n","      <td>2024-05-26</td>\n","      <td>Getafe</td>\n","      <td>Mallorca</td>\n","      <td>1</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>418</th>\n","      <td>38.0</td>\n","      <td>2024-05-26</td>\n","      <td>Las Palmas</td>\n","      <td>Alavés</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>419</th>\n","      <td>38.0</td>\n","      <td>2024-05-26</td>\n","      <td>Celta Vigo</td>\n","      <td>Valencia</td>\n","      <td>2</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>420</th>\n","      <td>38.0</td>\n","      <td>2024-05-26</td>\n","      <td>Sevilla</td>\n","      <td>Barcelona</td>\n","      <td>1</td>\n","      <td>2</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>380 rows × 6 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-fa3f0f6a-eb3e-44d6-8805-7719648523e4')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-fa3f0f6a-eb3e-44d6-8805-7719648523e4 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-fa3f0f6a-eb3e-44d6-8805-7719648523e4');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-cf8362c3-c90c-449a-b88c-1388a4165474\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-cf8362c3-c90c-449a-b88c-1388a4165474')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-cf8362c3-c90c-449a-b88c-1388a4165474 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_073ee1e7-f419-4423-b2a8-34205ea90421\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('resultados')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_073ee1e7-f419-4423-b2a8-34205ea90421 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('resultados');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"resultados","summary":"{\n  \"name\": \"resultados\",\n  \"rows\": 380,\n  \"fields\": [\n    {\n      \"column\": \"Sem\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 10.980313398163995,\n        \"min\": 1.0,\n        \"max\": 38.0,\n        \"num_unique_values\": 38,\n        \"samples\": [\n          34.0,\n          37.0,\n          5.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Data\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"num_unique_values\": 143,\n        \"samples\": [\n          \"2024-04-13\",\n          \"2023-09-22\",\n          \"2024-01-31\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Em casa\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 20,\n        \"samples\": [\n          \"Almer\\u00eda\",\n          \"Granada\",\n          \"Betis\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Visitante\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 20,\n        \"samples\": [\n          \"Rayo Vallecano\",\n          \"Sevilla\",\n          \"C\\u00e1diz\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CasaResul\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 8,\n        \"samples\": [\n          \"1\",\n          \"5\",\n          \"0\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"VisiResul\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 7,\n        \"samples\": [\n          \"2\",\n          \"1\",\n          \"7\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":4}]},{"cell_type":"code","source":["resultados[\"Vencedor\"] = np.where(resultados[\"CasaResul\"] > resultados[\"VisiResul\"], \"C\",\n","                                  np.where(resultados[\"CasaResul\"] < resultados[\"VisiResul\"], \"V\", \"E\"))\n","resultados"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"_RB-bCbcNzfM","executionInfo":{"status":"ok","timestamp":1737842628473,"user_tz":180,"elapsed":17,"user":{"displayName":"Lucas Calmon","userId":"09752934338034803828"}},"outputId":"eff854c8-537f-42e9-a7f3-812a8896dd20"},"execution_count":5,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      Sem        Data        Em casa       Visitante CasaResul VisiResul  \\\n","0     1.0  2023-08-11        Almería  Rayo Vallecano         0         2   \n","1     1.0  2023-08-11        Sevilla        Valencia         1         2   \n","2     1.0  2023-08-12  Real Sociedad          Girona         1         1   \n","3     1.0  2023-08-12     Las Palmas        Mallorca         1         1   \n","4     1.0  2023-08-12  Athletic Club     Real Madrid         0         2   \n","..    ...         ...            ...             ...       ...       ...   \n","416  38.0  2024-05-25    Real Madrid           Betis         0         0   \n","417  38.0  2024-05-26         Getafe        Mallorca         1         2   \n","418  38.0  2024-05-26     Las Palmas          Alavés         1         1   \n","419  38.0  2024-05-26     Celta Vigo        Valencia         2         2   \n","420  38.0  2024-05-26        Sevilla       Barcelona         1         2   \n","\n","    Vencedor  \n","0          V  \n","1          V  \n","2          E  \n","3          E  \n","4          V  \n","..       ...  \n","416        E  \n","417        V  \n","418        E  \n","419        E  \n","420        V  \n","\n","[380 rows x 7 columns]"],"text/html":["\n","  <div id=\"df-8f0e1408-0c6c-433b-865e-e34bbf958fce\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Sem</th>\n","      <th>Data</th>\n","      <th>Em casa</th>\n","      <th>Visitante</th>\n","      <th>CasaResul</th>\n","      <th>VisiResul</th>\n","      <th>Vencedor</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1.0</td>\n","      <td>2023-08-11</td>\n","      <td>Almería</td>\n","      <td>Rayo Vallecano</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>V</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1.0</td>\n","      <td>2023-08-11</td>\n","      <td>Sevilla</td>\n","      <td>Valencia</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>V</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1.0</td>\n","      <td>2023-08-12</td>\n","      <td>Real Sociedad</td>\n","      <td>Girona</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>E</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1.0</td>\n","      <td>2023-08-12</td>\n","      <td>Las Palmas</td>\n","      <td>Mallorca</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>E</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1.0</td>\n","      <td>2023-08-12</td>\n","      <td>Athletic Club</td>\n","      <td>Real Madrid</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>V</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>416</th>\n","      <td>38.0</td>\n","      <td>2024-05-25</td>\n","      <td>Real Madrid</td>\n","      <td>Betis</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>E</td>\n","    </tr>\n","    <tr>\n","      <th>417</th>\n","      <td>38.0</td>\n","      <td>2024-05-26</td>\n","      <td>Getafe</td>\n","      <td>Mallorca</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>V</td>\n","    </tr>\n","    <tr>\n","      <th>418</th>\n","      <td>38.0</td>\n","      <td>2024-05-26</td>\n","      <td>Las Palmas</td>\n","      <td>Alavés</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>E</td>\n","    </tr>\n","    <tr>\n","      <th>419</th>\n","      <td>38.0</td>\n","      <td>2024-05-26</td>\n","      <td>Celta Vigo</td>\n","      <td>Valencia</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>E</td>\n","    </tr>\n","    <tr>\n","      <th>420</th>\n","      <td>38.0</td>\n","      <td>2024-05-26</td>\n","      <td>Sevilla</td>\n","      <td>Barcelona</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>V</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>380 rows × 7 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8f0e1408-0c6c-433b-865e-e34bbf958fce')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-8f0e1408-0c6c-433b-865e-e34bbf958fce button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-8f0e1408-0c6c-433b-865e-e34bbf958fce');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-f4097b52-6ae1-493f-95a5-31ffe6110941\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-f4097b52-6ae1-493f-95a5-31ffe6110941')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-f4097b52-6ae1-493f-95a5-31ffe6110941 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_d8e20fde-f366-40a3-ba3c-7b98234f8a87\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('resultados')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_d8e20fde-f366-40a3-ba3c-7b98234f8a87 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('resultados');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"resultados","summary":"{\n  \"name\": \"resultados\",\n  \"rows\": 380,\n  \"fields\": [\n    {\n      \"column\": \"Sem\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 10.980313398163995,\n        \"min\": 1.0,\n        \"max\": 38.0,\n        \"num_unique_values\": 38,\n        \"samples\": [\n          34.0,\n          37.0,\n          5.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Data\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"num_unique_values\": 143,\n        \"samples\": [\n          \"2024-04-13\",\n          \"2023-09-22\",\n          \"2024-01-31\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Em casa\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 20,\n        \"samples\": [\n          \"Almer\\u00eda\",\n          \"Granada\",\n          \"Betis\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Visitante\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 20,\n        \"samples\": [\n          \"Rayo Vallecano\",\n          \"Sevilla\",\n          \"C\\u00e1diz\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CasaResul\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 8,\n        \"samples\": [\n          \"1\",\n          \"5\",\n          \"0\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"VisiResul\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 7,\n        \"samples\": [\n          \"2\",\n          \"1\",\n          \"7\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Vencedor\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"V\",\n          \"E\",\n          \"C\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["#verificando rodada atrasada\n","resultados[resultados.loc[:,\"Sem\"] == 15]\n","resultados.dtypes\n","print(resultados['CasaResul'].value_counts())\n","#transformar casa resul e visi resul em numeros\n","resultados['CasaResul'] = resultados['CasaResul'].astype(int)\n","resultados['VisiResul'] = resultados['VisiResul'].astype(int)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"uD9SDB4qN0_2","executionInfo":{"status":"ok","timestamp":1737842628474,"user_tz":180,"elapsed":17,"user":{"displayName":"Lucas Calmon","userId":"09752934338034803828"}},"outputId":"b34e7d73-a4eb-4018-cfa8-4841020c667d"},"execution_count":6,"outputs":[{"output_type":"stream","name":"stdout","text":["CasaResul\n","1    129\n","0     94\n","2     80\n","3     48\n","4     17\n","5     10\n","7      1\n","6      1\n","Name: count, dtype: int64\n"]}]},{"cell_type":"code","source":["resultados['VCasaValor'] = np.where(resultados['Vencedor']=='C',1,np.where(resultados['Vencedor']=='E',0.5,0))\n","resultados['VVisValor'] = np.where(resultados['Vencedor']=='V',1,np.where(resultados['Vencedor']=='E',0.5,0))\n","resultados['count'] = 1"],"metadata":{"id":"P9VkZXlvN2mv","executionInfo":{"status":"ok","timestamp":1737842628474,"user_tz":180,"elapsed":16,"user":{"displayName":"Lucas Calmon","userId":"09752934338034803828"}}},"execution_count":7,"outputs":[]},{"cell_type":"code","source":["primeiro = resultados[resultados.loc[:, \"Sem\"] < 20]\n","segundo = resultados[resultados.loc[:, \"Sem\"] > 19]\n","print(primeiro.shape)\n","print(segundo.shape)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"U25igxIjN4Dz","executionInfo":{"status":"ok","timestamp":1737842628745,"user_tz":180,"elapsed":287,"user":{"displayName":"Lucas Calmon","userId":"09752934338034803828"}},"outputId":"910750bf-4845-4eb9-94c9-b1912e71ac3b"},"execution_count":8,"outputs":[{"output_type":"stream","name":"stdout","text":["(190, 10)\n","(190, 10)\n"]}]},{"cell_type":"code","source":["PrimeiroTurnoC = primeiro.groupby(['Em casa'])[['count', 'VCasaValor','CasaResul','VisiResul']].sum().reset_index()\n","PrimeiroTurnoC = PrimeiroTurnoC.rename(columns={'Em casa':'time', 'CasaResul': 'GolsCasaC', 'VisiResul': 'GolsVisiC'})\n","PrimeiroTurnoV = primeiro.groupby(['Visitante'])[['count', 'VVisValor','CasaResul','VisiResul']].sum().reset_index()\n","PrimeiroTurnoV = PrimeiroTurnoV.rename(columns={'Visitante':'time', 'CasaResul': 'GolsCasaV', 'VisiResul': 'GolsVisiV'})"],"metadata":{"id":"82Uzww1uN6Gc","executionInfo":{"status":"ok","timestamp":1737842628745,"user_tz":180,"elapsed":2,"user":{"displayName":"Lucas Calmon","userId":"09752934338034803828"}}},"execution_count":9,"outputs":[]},{"cell_type":"code","source":["SegundoTurnoC = segundo.groupby(['Em casa'])[['count', 'VCasaValor','CasaResul','VisiResul']].sum().reset_index()\n","SegundoTurnoC = SegundoTurnoC.rename(columns={'Em casa':'time', 'CasaResul': 'GolsCasaC', 'VisiResul': 'GolsVisiC'})\n","SegundoTurnoV = segundo.groupby(['Visitante'])[['count', 'VVisValor','CasaResul','VisiResul']].sum().reset_index()\n","SegundoTurnoV = SegundoTurnoV.rename(columns={'Visitante':'time', 'CasaResul': 'GolsCasaV', 'VisiResul': 'GolsVisiV'})"],"metadata":{"id":"YohrK4atN7kW","executionInfo":{"status":"ok","timestamp":1737842628745,"user_tz":180,"elapsed":2,"user":{"displayName":"Lucas Calmon","userId":"09752934338034803828"}}},"execution_count":10,"outputs":[]},{"cell_type":"code","source":["PrimeiroTurno = pd.merge(PrimeiroTurnoC, PrimeiroTurnoV, on=['time'])\n","SegundoTurno = pd.merge(SegundoTurnoC, SegundoTurnoV, on=['time'])"],"metadata":{"id":"ph6Faop5N812","executionInfo":{"status":"ok","timestamp":1737842628745,"user_tz":180,"elapsed":2,"user":{"displayName":"Lucas Calmon","userId":"09752934338034803828"}}},"execution_count":11,"outputs":[]},{"cell_type":"code","source":["PrimeiroTurno['W'] = PrimeiroTurno['VCasaValor']+PrimeiroTurno['VVisValor'] #win value\n","PrimeiroTurno['G'] = PrimeiroTurno['count_x'] + PrimeiroTurno['count_y']  #games\n","PrimeiroTurno['GF'] = PrimeiroTurno['GolsCasaC']+PrimeiroTurno['GolsVisiV'] #goals for\n","PrimeiroTurno['GA'] = PrimeiroTurno['GolsVisiC']+PrimeiroTurno['GolsCasaV'] #goals against\n","\n","SegundoTurno['W'] = SegundoTurno['VCasaValor']+SegundoTurno['VVisValor'] #win value\n","SegundoTurno['G'] = SegundoTurno['count_x'] + SegundoTurno['count_y']  #games\n","SegundoTurno['GF'] = SegundoTurno['GolsCasaC']+SegundoTurno['GolsVisiV'] #goals for\n","SegundoTurno['GA'] = SegundoTurno['GolsVisiC']+SegundoTurno['GolsCasaV'] #goals against"],"metadata":{"id":"yNL52klfN9KO","executionInfo":{"status":"ok","timestamp":1737842629026,"user_tz":180,"elapsed":282,"user":{"displayName":"Lucas Calmon","userId":"09752934338034803828"}}},"execution_count":12,"outputs":[]},{"cell_type":"code","source":["PrimeiroTurno['wpc'] = PrimeiroTurno['W']/PrimeiroTurno['G'] #win percentage\n","PrimeiroTurno['pyth'] = PrimeiroTurno['GF']**2/(PrimeiroTurno['GF']**2 + PrimeiroTurno['GA']**2)\n","\n","SegundoTurno['wpc'] = SegundoTurno['W']/SegundoTurno['G'] #win percentage\n","SegundoTurno['pyth'] = SegundoTurno['GF']**2/(SegundoTurno['GF']**2 + SegundoTurno['GA']**2)"],"metadata":{"id":"x7udVn9AN-tK","executionInfo":{"status":"ok","timestamp":1737842629026,"user_tz":180,"elapsed":2,"user":{"displayName":"Lucas Calmon","userId":"09752934338034803828"}}},"execution_count":13,"outputs":[]},{"cell_type":"code","source":["sns.regplot(x=\"pyth\", y = \"wpc\", data = PrimeiroTurno,ci=None)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":466},"id":"T40swRYmOALJ","executionInfo":{"status":"ok","timestamp":1737842630223,"user_tz":180,"elapsed":1199,"user":{"displayName":"Lucas Calmon","userId":"09752934338034803828"}},"outputId":"a42c95ab-51e9-4a96-fd26-50f2d2fb0092"},"execution_count":14,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: xlabel='pyth', ylabel='wpc'>"]},"metadata":{},"execution_count":14},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["sns.regplot(x=\"pyth\", y = \"wpc\", data = SegundoTurno,ci=None)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":471},"id":"9u8m_drpOBhn","executionInfo":{"status":"ok","timestamp":1737842630223,"user_tz":180,"elapsed":6,"user":{"displayName":"Lucas Calmon","userId":"09752934338034803828"}},"outputId":"03e3436e-46c8-40a0-ea0e-6ef9ea577095"},"execution_count":15,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: xlabel='pyth', ylabel='wpc'>"]},"metadata":{},"execution_count":15},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["Bra = pd.merge(PrimeiroTurno, SegundoTurno, on=['time'])\n","Bra"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":513},"id":"fzoKOvOAOCyr","executionInfo":{"status":"ok","timestamp":1737842630502,"user_tz":180,"elapsed":283,"user":{"displayName":"Lucas Calmon","userId":"09752934338034803828"}},"outputId":"1502e7d2-a377-4b09-bf72-5644ced22e52"},"execution_count":16,"outputs":[{"output_type":"execute_result","data":{"text/plain":["               time  count_x_x  VCasaValor_x  GolsCasaC_x  GolsVisiC_x  \\\n","0            Alavés          9           4.5           10           11   \n","1           Almería          9           2.0           10           18   \n","2     Athletic Club         10           8.0           25           11   \n","3   Atlético Madrid         10           9.5           23           11   \n","4         Barcelona         10           8.0           21           11   \n","..              ...        ...           ...          ...          ...   \n","15      Real Madrid          9           8.5           22            4   \n","16    Real Sociedad         10           7.0           18           11   \n","17          Sevilla         10           4.0           13           15   \n","18         Valencia          9           6.0           12            5   \n","19       Villarreal         10           3.5           17           21   \n","\n","    count_y_x  VVisValor_x  GolsCasaV_x  GolsVisiV_x   W_x  G_x  GF_x  GA_x  \\\n","0          10          2.0           14            5   6.5   19    15    25   \n","1          10          0.5           25            9   2.5   19    19    43   \n","2           9          5.5            8           11  13.5   19    36    19   \n","3           9          3.5           12           16  13.0   19    39    23   \n","4           9          6.5           11           15  14.5   19    36    22   \n","..        ...          ...          ...          ...   ...  ...   ...   ...   \n","15         10          8.0            7           18  16.5   19    40    11   \n","16          9          5.0            8           12  12.0   19    30    19   \n","17          9          2.5           12           10   6.5   19    23    27   \n","18         10          3.5           18           10   9.5   19    22    23   \n","19          9          3.5           17           10   7.0   19    27    38   \n","\n","       wpc_x    pyth_x  count_x_y  VCasaValor_y  GolsCasaC_y  GolsVisiC_y  \\\n","0   0.342105  0.264706         10           6.5           13            8   \n","1   0.131579  0.163348         10           3.0           12           18   \n","2   0.710526  0.782136          9           7.0           17            7   \n","3   0.684211  0.741951          9           7.0           19           11   \n","4   0.763158  0.728090          9           7.5           22           10   \n","..       ...       ...        ...           ...          ...          ...   \n","15  0.868421  0.929692         10           9.0           26            5   \n","16  0.631579  0.713719          9           4.0            8            9   \n","17  0.342105  0.420509          9           4.5           14           12   \n","18  0.500000  0.477789         10           5.0            8            9   \n","19  0.368421  0.335481          9           6.0           19           11   \n","\n","    count_y_y  VVisValor_y  GolsCasaV_y  GolsVisiV_y   W_y  G_y  GF_y  GA_y  \\\n","0           9          4.0           13            8  10.5   19    21    21   \n","1           9          3.5           14           12   6.5   19    24    32   \n","2          10          4.0           11            8  11.0   19    25    18   \n","3          10          6.0            9           12  13.0   19    31    20   \n","4          10          7.5           12           21  15.0   19    43    22   \n","..        ...          ...          ...          ...   ...  ...   ...   ...   \n","15          9          7.5           10           21  16.5   19    47    15   \n","16         10          6.0           11           13  10.0   19    21    20   \n","17         10          4.5           15           11   9.0   19    25    27   \n","18          9          3.5           13           10   8.5   19    18    22   \n","19         10          6.5           16           19  12.5   19    38    27   \n","\n","       wpc_y    pyth_y  \n","0   0.552632  0.500000  \n","1   0.342105  0.360000  \n","2   0.578947  0.658588  \n","3   0.684211  0.706098  \n","4   0.789474  0.792542  \n","..       ...       ...  \n","15  0.868421  0.907560  \n","16  0.526316  0.524376  \n","17  0.473684  0.461595  \n","18  0.447368  0.400990  \n","19  0.657895  0.664519  \n","\n","[20 rows x 29 columns]"],"text/html":["\n","  <div id=\"df-5cf755b8-d1fb-4439-aae7-92d928053b29\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>time</th>\n","      <th>count_x_x</th>\n","      <th>VCasaValor_x</th>\n","      <th>GolsCasaC_x</th>\n","      <th>GolsVisiC_x</th>\n","      <th>count_y_x</th>\n","      <th>VVisValor_x</th>\n","      <th>GolsCasaV_x</th>\n","      <th>GolsVisiV_x</th>\n","      <th>W_x</th>\n","      <th>G_x</th>\n","      <th>GF_x</th>\n","      <th>GA_x</th>\n","      <th>wpc_x</th>\n","      <th>pyth_x</th>\n","      <th>count_x_y</th>\n","      <th>VCasaValor_y</th>\n","      <th>GolsCasaC_y</th>\n","      <th>GolsVisiC_y</th>\n","      <th>count_y_y</th>\n","      <th>VVisValor_y</th>\n","      <th>GolsCasaV_y</th>\n","      <th>GolsVisiV_y</th>\n","      <th>W_y</th>\n","      <th>G_y</th>\n","      <th>GF_y</th>\n","      <th>GA_y</th>\n","      <th>wpc_y</th>\n","      <th>pyth_y</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Alavés</td>\n","      <td>9</td>\n","      <td>4.5</td>\n","      <td>10</td>\n","      <td>11</td>\n","      <td>10</td>\n","      <td>2.0</td>\n","      <td>14</td>\n","      <td>5</td>\n","      <td>6.5</td>\n","      <td>19</td>\n","      <td>15</td>\n","      <td>25</td>\n","      <td>0.342105</td>\n","      <td>0.264706</td>\n","      <td>10</td>\n","      <td>6.5</td>\n","      <td>13</td>\n","      <td>8</td>\n","      <td>9</td>\n","      <td>4.0</td>\n","      <td>13</td>\n","      <td>8</td>\n","      <td>10.5</td>\n","      <td>19</td>\n","      <td>21</td>\n","      <td>21</td>\n","      <td>0.552632</td>\n","      <td>0.500000</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Almería</td>\n","      <td>9</td>\n","      <td>2.0</td>\n","      <td>10</td>\n","      <td>18</td>\n","      <td>10</td>\n","      <td>0.5</td>\n","      <td>25</td>\n","      <td>9</td>\n","      <td>2.5</td>\n","      <td>19</td>\n","      <td>19</td>\n","      <td>43</td>\n","      <td>0.131579</td>\n","      <td>0.163348</td>\n","      <td>10</td>\n","      <td>3.0</td>\n","      <td>12</td>\n","      <td>18</td>\n","      <td>9</td>\n","      <td>3.5</td>\n","      <td>14</td>\n","      <td>12</td>\n","      <td>6.5</td>\n","      <td>19</td>\n","      <td>24</td>\n","      <td>32</td>\n","      <td>0.342105</td>\n","      <td>0.360000</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Athletic Club</td>\n","      <td>10</td>\n","      <td>8.0</td>\n","      <td>25</td>\n","      <td>11</td>\n","      <td>9</td>\n","      <td>5.5</td>\n","      <td>8</td>\n","      <td>11</td>\n","      <td>13.5</td>\n","      <td>19</td>\n","      <td>36</td>\n","      <td>19</td>\n","      <td>0.710526</td>\n","      <td>0.782136</td>\n","      <td>9</td>\n","      <td>7.0</td>\n","      <td>17</td>\n","      <td>7</td>\n","      <td>10</td>\n","      <td>4.0</td>\n","      <td>11</td>\n","      <td>8</td>\n","      <td>11.0</td>\n","      <td>19</td>\n","      <td>25</td>\n","      <td>18</td>\n","      <td>0.578947</td>\n","      <td>0.658588</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Atlético Madrid</td>\n","      <td>10</td>\n","      <td>9.5</td>\n","      <td>23</td>\n","      <td>11</td>\n","      <td>9</td>\n","      <td>3.5</td>\n","      <td>12</td>\n","      <td>16</td>\n","      <td>13.0</td>\n","      <td>19</td>\n","      <td>39</td>\n","      <td>23</td>\n","      <td>0.684211</td>\n","      <td>0.741951</td>\n","      <td>9</td>\n","      <td>7.0</td>\n","      <td>19</td>\n","      <td>11</td>\n","      <td>10</td>\n","      <td>6.0</td>\n","      <td>9</td>\n","      <td>12</td>\n","      <td>13.0</td>\n","      <td>19</td>\n","      <td>31</td>\n","      <td>20</td>\n","      <td>0.684211</td>\n","      <td>0.706098</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Barcelona</td>\n","      <td>10</td>\n","      <td>8.0</td>\n","      <td>21</td>\n","      <td>11</td>\n","      <td>9</td>\n","      <td>6.5</td>\n","      <td>11</td>\n","      <td>15</td>\n","      <td>14.5</td>\n","      <td>19</td>\n","      <td>36</td>\n","      <td>22</td>\n","      <td>0.763158</td>\n","      <td>0.728090</td>\n","      <td>9</td>\n","      <td>7.5</td>\n","      <td>22</td>\n","      <td>10</td>\n","      <td>10</td>\n","      <td>7.5</td>\n","      <td>12</td>\n","      <td>21</td>\n","      <td>15.0</td>\n","      <td>19</td>\n","      <td>43</td>\n","      <td>22</td>\n","      <td>0.789474</td>\n","      <td>0.792542</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>Real Madrid</td>\n","      <td>9</td>\n","      <td>8.5</td>\n","      <td>22</td>\n","      <td>4</td>\n","      <td>10</td>\n","      <td>8.0</td>\n","      <td>7</td>\n","      <td>18</td>\n","      <td>16.5</td>\n","      <td>19</td>\n","      <td>40</td>\n","      <td>11</td>\n","      <td>0.868421</td>\n","      <td>0.929692</td>\n","      <td>10</td>\n","      <td>9.0</td>\n","      <td>26</td>\n","      <td>5</td>\n","      <td>9</td>\n","      <td>7.5</td>\n","      <td>10</td>\n","      <td>21</td>\n","      <td>16.5</td>\n","      <td>19</td>\n","      <td>47</td>\n","      <td>15</td>\n","      <td>0.868421</td>\n","      <td>0.907560</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>Real Sociedad</td>\n","      <td>10</td>\n","      <td>7.0</td>\n","      <td>18</td>\n","      <td>11</td>\n","      <td>9</td>\n","      <td>5.0</td>\n","      <td>8</td>\n","      <td>12</td>\n","      <td>12.0</td>\n","      <td>19</td>\n","      <td>30</td>\n","      <td>19</td>\n","      <td>0.631579</td>\n","      <td>0.713719</td>\n","      <td>9</td>\n","      <td>4.0</td>\n","      <td>8</td>\n","      <td>9</td>\n","      <td>10</td>\n","      <td>6.0</td>\n","      <td>11</td>\n","      <td>13</td>\n","      <td>10.0</td>\n","      <td>19</td>\n","      <td>21</td>\n","      <td>20</td>\n","      <td>0.526316</td>\n","      <td>0.524376</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>Sevilla</td>\n","      <td>10</td>\n","      <td>4.0</td>\n","      <td>13</td>\n","      <td>15</td>\n","      <td>9</td>\n","      <td>2.5</td>\n","      <td>12</td>\n","      <td>10</td>\n","      <td>6.5</td>\n","      <td>19</td>\n","      <td>23</td>\n","      <td>27</td>\n","      <td>0.342105</td>\n","      <td>0.420509</td>\n","      <td>9</td>\n","      <td>4.5</td>\n","      <td>14</td>\n","      <td>12</td>\n","      <td>10</td>\n","      <td>4.5</td>\n","      <td>15</td>\n","      <td>11</td>\n","      <td>9.0</td>\n","      <td>19</td>\n","      <td>25</td>\n","      <td>27</td>\n","      <td>0.473684</td>\n","      <td>0.461595</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>Valencia</td>\n","      <td>9</td>\n","      <td>6.0</td>\n","      <td>12</td>\n","      <td>5</td>\n","      <td>10</td>\n","      <td>3.5</td>\n","      <td>18</td>\n","      <td>10</td>\n","      <td>9.5</td>\n","      <td>19</td>\n","      <td>22</td>\n","      <td>23</td>\n","      <td>0.500000</td>\n","      <td>0.477789</td>\n","      <td>10</td>\n","      <td>5.0</td>\n","      <td>8</td>\n","      <td>9</td>\n","      <td>9</td>\n","      <td>3.5</td>\n","      <td>13</td>\n","      <td>10</td>\n","      <td>8.5</td>\n","      <td>19</td>\n","      <td>18</td>\n","      <td>22</td>\n","      <td>0.447368</td>\n","      <td>0.400990</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>Villarreal</td>\n","      <td>10</td>\n","      <td>3.5</td>\n","      <td>17</td>\n","      <td>21</td>\n","      <td>9</td>\n","      <td>3.5</td>\n","      <td>17</td>\n","      <td>10</td>\n","      <td>7.0</td>\n","      <td>19</td>\n","      <td>27</td>\n","      <td>38</td>\n","      <td>0.368421</td>\n","      <td>0.335481</td>\n","      <td>9</td>\n","      <td>6.0</td>\n","      <td>19</td>\n","      <td>11</td>\n","      <td>10</td>\n","      <td>6.5</td>\n","      <td>16</td>\n","      <td>19</td>\n","      <td>12.5</td>\n","      <td>19</td>\n","      <td>38</td>\n","      <td>27</td>\n","      <td>0.657895</td>\n","      <td>0.664519</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>20 rows × 29 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5cf755b8-d1fb-4439-aae7-92d928053b29')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-5cf755b8-d1fb-4439-aae7-92d928053b29 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-5cf755b8-d1fb-4439-aae7-92d928053b29');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-397b762e-2a33-432d-854a-72b832a98ea0\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-397b762e-2a33-432d-854a-72b832a98ea0')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-397b762e-2a33-432d-854a-72b832a98ea0 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_771c9f49-bc5c-47a8-a377-768769e1dc72\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('Bra')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_771c9f49-bc5c-47a8-a377-768769e1dc72 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('Bra');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"Bra"}},"metadata":{},"execution_count":16}]},{"cell_type":"code","source":["sns.regplot(x=\"wpc_x\", y = \"wpc_y\", data = Bra,ci=None)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":471},"id":"rYLpz-NlOEUX","executionInfo":{"status":"ok","timestamp":1737842630858,"user_tz":180,"elapsed":361,"user":{"displayName":"Lucas Calmon","userId":"09752934338034803828"}},"outputId":"491ef4e6-b693-47a2-a83c-f5f01108c916"},"execution_count":17,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: xlabel='wpc_x', ylabel='wpc_y'>"]},"metadata":{},"execution_count":17},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["sns.regplot(x=\"pyth_x\", y = \"wpc_y\", data = Bra, ci=None)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":471},"id":"6jw0SswjOF0n","executionInfo":{"status":"ok","timestamp":1737842631243,"user_tz":180,"elapsed":390,"user":{"displayName":"Lucas Calmon","userId":"09752934338034803828"}},"outputId":"de023a66-83c9-4c6f-8354-3a8f7d5aff9a"},"execution_count":18,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: xlabel='pyth_x', ylabel='wpc_y'>"]},"metadata":{},"execution_count":18},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["dd = Bra.loc[:,['pyth_x', 'wpc_x', 'pyth_y', 'wpc_y']]\n","dd"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"nX4YLFsOOHUI","executionInfo":{"status":"ok","timestamp":1737842631243,"user_tz":180,"elapsed":24,"user":{"displayName":"Lucas Calmon","userId":"09752934338034803828"}},"outputId":"08f1182c-b117-49bc-9b71-4240d0e09e7f"},"execution_count":19,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      pyth_x     wpc_x    pyth_y     wpc_y\n","0   0.264706  0.342105  0.500000  0.552632\n","1   0.163348  0.131579  0.360000  0.342105\n","2   0.782136  0.710526  0.658588  0.578947\n","3   0.741951  0.684211  0.706098  0.684211\n","4   0.728090  0.763158  0.792542  0.789474\n","..       ...       ...       ...       ...\n","15  0.929692  0.868421  0.907560  0.868421\n","16  0.713719  0.631579  0.524376  0.526316\n","17  0.420509  0.342105  0.461595  0.473684\n","18  0.477789  0.500000  0.400990  0.447368\n","19  0.335481  0.368421  0.664519  0.657895\n","\n","[20 rows x 4 columns]"],"text/html":["\n","  <div id=\"df-3c9b721a-14fe-4641-afe6-78b60cdaa30b\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>pyth_x</th>\n","      <th>wpc_x</th>\n","      <th>pyth_y</th>\n","      <th>wpc_y</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0.264706</td>\n","      <td>0.342105</td>\n","      <td>0.500000</td>\n","      <td>0.552632</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0.163348</td>\n","      <td>0.131579</td>\n","      <td>0.360000</td>\n","      <td>0.342105</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0.782136</td>\n","      <td>0.710526</td>\n","      <td>0.658588</td>\n","      <td>0.578947</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0.741951</td>\n","      <td>0.684211</td>\n","      <td>0.706098</td>\n","      <td>0.684211</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0.728090</td>\n","      <td>0.763158</td>\n","      <td>0.792542</td>\n","      <td>0.789474</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>0.929692</td>\n","      <td>0.868421</td>\n","      <td>0.907560</td>\n","      <td>0.868421</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>0.713719</td>\n","      <td>0.631579</td>\n","      <td>0.524376</td>\n","      <td>0.526316</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>0.420509</td>\n","      <td>0.342105</td>\n","      <td>0.461595</td>\n","      <td>0.473684</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>0.477789</td>\n","      <td>0.500000</td>\n","      <td>0.400990</td>\n","      <td>0.447368</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>0.335481</td>\n","      <td>0.368421</td>\n","      <td>0.664519</td>\n","      <td>0.657895</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>20 rows × 4 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3c9b721a-14fe-4641-afe6-78b60cdaa30b')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-3c9b721a-14fe-4641-afe6-78b60cdaa30b button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-3c9b721a-14fe-4641-afe6-78b60cdaa30b');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-e53b8a37-a552-45f8-85d3-0758cfacd619\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e53b8a37-a552-45f8-85d3-0758cfacd619')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-e53b8a37-a552-45f8-85d3-0758cfacd619 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_f8fe34c6-68ef-4b9e-887e-371e04825bb5\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('dd')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_f8fe34c6-68ef-4b9e-887e-371e04825bb5 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('dd');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"dd","summary":"{\n  \"name\": \"dd\",\n  \"rows\": 20,\n  \"fields\": [\n    {\n      \"column\": \"pyth_x\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.2224030862419188,\n        \"min\": 0.16334841628959276,\n        \"max\": 0.9296920395119117,\n        \"num_unique_values\": 20,\n        \"samples\": [\n          0.2647058823529412,\n          0.4205087440381558,\n          0.9296920395119117\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"wpc_x\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.20312473715034526,\n        \"min\": 0.13157894736842105,\n        \"max\": 0.868421052631579,\n        \"num_unique_values\": 15,\n        \"samples\": [\n          0.47368421052631576,\n          0.42105263157894735,\n          0.34210526315789475\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"pyth_y\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.2216102735193933,\n        \"min\": 0.14406302757456388,\n        \"max\": 0.9075595727198028,\n        \"num_unique_values\": 20,\n        \"samples\": [\n          0.5,\n          0.46159527326440175,\n          0.9075595727198028\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"wpc_y\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.16709135763461916,\n        \"min\": 0.21052631578947367,\n        \"max\": 0.868421052631579,\n        \"num_unique_values\": 14,\n        \"samples\": [\n          0.3157894736842105,\n          0.868421052631579,\n          0.5526315789473685\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":19}]},{"cell_type":"code","source":["rename_dict = {\n","    'pyth_x': 'pythagorean_x',\n","    'wpc_x': 'win_percentage_x',\n","    'pyth_y': 'pythagorean_y',\n","    'wpc_y': 'win_percentage_y'\n","}\n","\n","# Aplicando a renomeação\n","dd.rename(columns=rename_dict, inplace=True)"],"metadata":{"id":"KvDbBNQjefJl","executionInfo":{"status":"ok","timestamp":1737842631243,"user_tz":180,"elapsed":23,"user":{"displayName":"Lucas Calmon","userId":"09752934338034803828"}}},"execution_count":20,"outputs":[]},{"cell_type":"code","source":["cor_matrix = dd.corr()\n","\n","# View the correlation matrix\n","cor_matrix"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":175},"id":"dBbarJ-gOJYE","executionInfo":{"status":"ok","timestamp":1737842631243,"user_tz":180,"elapsed":23,"user":{"displayName":"Lucas Calmon","userId":"09752934338034803828"}},"outputId":"3c9aa452-27b7-4ac5-9a89-3e6aa89f643f"},"execution_count":21,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                  pythagorean_x  win_percentage_x  pythagorean_y  \\\n","pythagorean_x          1.000000          0.961278       0.770302   \n","win_percentage_x       0.961278          1.000000       0.726233   \n","pythagorean_y          0.770302          0.726233       1.000000   \n","win_percentage_y       0.728037          0.710919       0.957612   \n","\n","                  win_percentage_y  \n","pythagorean_x             0.728037  \n","win_percentage_x          0.710919  \n","pythagorean_y             0.957612  \n","win_percentage_y          1.000000  "],"text/html":["\n","  <div id=\"df-3b728d55-f85c-4be8-9401-3b5d361eac94\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>pythagorean_x</th>\n","      <th>win_percentage_x</th>\n","      <th>pythagorean_y</th>\n","      <th>win_percentage_y</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>pythagorean_x</th>\n","      <td>1.000000</td>\n","      <td>0.961278</td>\n","      <td>0.770302</td>\n","      <td>0.728037</td>\n","    </tr>\n","    <tr>\n","      <th>win_percentage_x</th>\n","      <td>0.961278</td>\n","      <td>1.000000</td>\n","      <td>0.726233</td>\n","      <td>0.710919</td>\n","    </tr>\n","    <tr>\n","      <th>pythagorean_y</th>\n","      <td>0.770302</td>\n","      <td>0.726233</td>\n","      <td>1.000000</td>\n","      <td>0.957612</td>\n","    </tr>\n","    <tr>\n","      <th>win_percentage_y</th>\n","      <td>0.728037</td>\n","      <td>0.710919</td>\n","      <td>0.957612</td>\n","      <td>1.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3b728d55-f85c-4be8-9401-3b5d361eac94')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-3b728d55-f85c-4be8-9401-3b5d361eac94 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-3b728d55-f85c-4be8-9401-3b5d361eac94');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-6ac30be6-08a9-4368-80b8-1126bf1dd941\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-6ac30be6-08a9-4368-80b8-1126bf1dd941')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-6ac30be6-08a9-4368-80b8-1126bf1dd941 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_46c5af78-74c5-4c82-8882-66d81c8a107a\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('cor_matrix')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_46c5af78-74c5-4c82-8882-66d81c8a107a button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('cor_matrix');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"cor_matrix","summary":"{\n  \"name\": \"cor_matrix\",\n  \"rows\": 4,\n  \"fields\": [\n    {\n      \"column\": \"pythagorean_x\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.1356722862900929,\n        \"min\": 0.7280372130762822,\n        \"max\": 1.0,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          0.9612777752525091,\n          0.7280372130762822,\n          1.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"win_percentage_x\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.15225402784823788,\n        \"min\": 0.7109194417684138,\n        \"max\": 1.0,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          1.0,\n          0.7109194417684138,\n          0.9612777752525091\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"pythagorean_y\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.1354222094344012,\n        \"min\": 0.7262327251845304,\n        \"max\": 1.0,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          0.7262327251845304,\n          0.9576121133375516,\n          0.7703019034772585\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"win_percentage_y\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.15088157240170968,\n        \"min\": 0.7109194417684138,\n        \"max\": 1.0,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          0.7109194417684138,\n          1.0,\n          0.7280372130762822\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":21}]}]}