{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyOEuK7BeljYkUQ3FVdeBTLu"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"id":"OhECiaz-NNRC","executionInfo":{"status":"ok","timestamp":1737841665447,"user_tz":180,"elapsed":8884,"user":{"displayName":"Lucas Calmon","userId":"09752934338034803828"}}},"outputs":[],"source":["import pandas as pd\n","import numpy as np\n","import statsmodels.formula.api as smf\n","import matplotlib.pyplot as plt\n","import seaborn as sns"]},{"cell_type":"code","source":["df = pd.read_html(\"https://fbref.com/pt/comps/24/cronograma/Serie-A-Resultados-e-Calendarios\")[0]\n","pd.set_option(\"display.max_columns\", None)\n","pd.set_option('display.max_rows', 10)\n","print(df)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"E-zg3_SINq5s","executionInfo":{"status":"ok","timestamp":1737841667847,"user_tz":180,"elapsed":2402,"user":{"displayName":"Lucas Calmon","userId":"09752934338034803828"}},"outputId":"70240f54-54c2-4a65-b654-62d74137b37f"},"execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["      Sem  Dia        Data Horário           Em casa   xG Resultado  xG.1  \\\n","0     1.0  sáb  2024-04-13   18:30          Criciúma  0.7       1–1   0.6   \n","1     1.0  sáb  2024-04-13   18:30     Internacional  1.9       2–1   0.7   \n","2     1.0  dom  2024-04-14   16:00    Ath Paranaense  2.0       4–0   0.3   \n","3     1.0  dom  2024-04-14   16:00     Vasco da Gama  0.9       2–1   1.2   \n","4     1.0  dom  2024-04-14   16:00       Corinthians  0.5       0–0   0.3   \n","..    ...  ...         ...     ...               ...  ...       ...   ...   \n","432  38.0  dom  2024-12-08   16:00            Grêmio  0.8       0–3   2.2   \n","433  38.0  dom  2024-12-08   16:00         Palmeiras  0.4       0–1   0.9   \n","434  38.0  dom  2024-12-08   16:00             Bahia  2.8       2–0   0.8   \n","435  38.0  dom  2024-12-08   16:00         Juventude  1.4       0–1   0.8   \n","436  38.0  dom  2024-12-08   16:00  Atlético Mineiro  1.4       1–0   0.3   \n","\n","            Visitante  Público                                  Local  \\\n","0           Juventude   12.804                Estádio Heriberto Hülse   \n","1               Bahia   19.103            Estádio José Pinheiro Borba   \n","2              Cuiabá   21.388                            Ligga Arena   \n","3              Grêmio   17.722  Estádio Club de Regatas Vasco da Gama   \n","4    Atlético Mineiro   44.285                      Neo Química Arena   \n","..                ...      ...                                    ...   \n","432       Corinthians   42.945                        Arena do Grêmio   \n","433        Fluminense   34.571                         Allianz Parque   \n","434    Atl Goianiense   48.476              Itaipava Arena Fonte Nova   \n","435          Cruzeiro   13.518                 Estádio Alfredo Jaconi   \n","436    Ath Paranaense      NaN                              Arena MRV   \n","\n","                       Árbitro  Relatório da Partida  Notas  \n","0                          NaN  Relatório da Partida    NaN  \n","1                          NaN  Relatório da Partida    NaN  \n","2                          NaN  Relatório da Partida    NaN  \n","3    Flavio Rodrigues de Souza  Relatório da Partida    NaN  \n","4                          NaN  Relatório da Partida    NaN  \n","..                         ...                   ...    ...  \n","432            Paulo Zanovelli  Relatório da Partida    NaN  \n","433               Ramon Abatti  Relatório da Partida    NaN  \n","434   Gustavo Ervino Bauermann  Relatório da Partida    NaN  \n","435                Edina Alves  Relatório da Partida    NaN  \n","436               Rafael Klein  Relatório da Partida    NaN  \n","\n","[437 rows x 14 columns]\n"]}]},{"cell_type":"code","source":["resultados = df[['Sem', 'Data', 'Em casa', 'Resultado', 'Visitante']]\n","resultados = resultados.dropna(how='all')\n","resultados"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"7UBZqBZpNs6e","executionInfo":{"status":"ok","timestamp":1737841667847,"user_tz":180,"elapsed":19,"user":{"displayName":"Lucas Calmon","userId":"09752934338034803828"}},"outputId":"eec9c588-1b32-4e0f-f76e-0083e8bc63c4"},"execution_count":3,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      Sem        Data           Em casa Resultado         Visitante\n","0     1.0  2024-04-13          Criciúma       1–1         Juventude\n","1     1.0  2024-04-13     Internacional       2–1             Bahia\n","2     1.0  2024-04-14    Ath Paranaense       4–0            Cuiabá\n","3     1.0  2024-04-14     Vasco da Gama       2–1            Grêmio\n","4     1.0  2024-04-14       Corinthians       0–0  Atlético Mineiro\n","..    ...         ...               ...       ...               ...\n","432  38.0  2024-12-08            Grêmio       0–3       Corinthians\n","433  38.0  2024-12-08         Palmeiras       0–1        Fluminense\n","434  38.0  2024-12-08             Bahia       2–0    Atl Goianiense\n","435  38.0  2024-12-08         Juventude       0–1          Cruzeiro\n","436  38.0  2024-12-08  Atlético Mineiro       1–0    Ath Paranaense\n","\n","[380 rows x 5 columns]"],"text/html":["\n","  <div id=\"df-5b8ac9a1-b852-4d41-8877-7f5e1005dd12\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Sem</th>\n","      <th>Data</th>\n","      <th>Em casa</th>\n","      <th>Resultado</th>\n","      <th>Visitante</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1.0</td>\n","      <td>2024-04-13</td>\n","      <td>Criciúma</td>\n","      <td>1–1</td>\n","      <td>Juventude</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1.0</td>\n","      <td>2024-04-13</td>\n","      <td>Internacional</td>\n","      <td>2–1</td>\n","      <td>Bahia</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1.0</td>\n","      <td>2024-04-14</td>\n","      <td>Ath Paranaense</td>\n","      <td>4–0</td>\n","      <td>Cuiabá</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1.0</td>\n","      <td>2024-04-14</td>\n","      <td>Vasco da Gama</td>\n","      <td>2–1</td>\n","      <td>Grêmio</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1.0</td>\n","      <td>2024-04-14</td>\n","      <td>Corinthians</td>\n","      <td>0–0</td>\n","      <td>Atlético Mineiro</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>432</th>\n","      <td>38.0</td>\n","      <td>2024-12-08</td>\n","      <td>Grêmio</td>\n","      <td>0–3</td>\n","      <td>Corinthians</td>\n","    </tr>\n","    <tr>\n","      <th>433</th>\n","      <td>38.0</td>\n","      <td>2024-12-08</td>\n","      <td>Palmeiras</td>\n","      <td>0–1</td>\n","      <td>Fluminense</td>\n","    </tr>\n","    <tr>\n","      <th>434</th>\n","      <td>38.0</td>\n","      <td>2024-12-08</td>\n","      <td>Bahia</td>\n","      <td>2–0</td>\n","      <td>Atl Goianiense</td>\n","    </tr>\n","    <tr>\n","      <th>435</th>\n","      <td>38.0</td>\n","      <td>2024-12-08</td>\n","      <td>Juventude</td>\n","      <td>0–1</td>\n","      <td>Cruzeiro</td>\n","    </tr>\n","    <tr>\n","      <th>436</th>\n","      <td>38.0</td>\n","      <td>2024-12-08</td>\n","      <td>Atlético Mineiro</td>\n","      <td>1–0</td>\n","      <td>Ath Paranaense</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>380 rows × 5 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5b8ac9a1-b852-4d41-8877-7f5e1005dd12')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-5b8ac9a1-b852-4d41-8877-7f5e1005dd12 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-5b8ac9a1-b852-4d41-8877-7f5e1005dd12');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-2befb1cf-b8d9-4dee-afd6-b71cc6494ab7\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-2befb1cf-b8d9-4dee-afd6-b71cc6494ab7')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-2befb1cf-b8d9-4dee-afd6-b71cc6494ab7 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_a2ddffb0-ce59-419d-9909-4e972314171c\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('resultados')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_a2ddffb0-ce59-419d-9909-4e972314171c button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('resultados');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"resultados","summary":"{\n  \"name\": \"resultados\",\n  \"rows\": 380,\n  \"fields\": [\n    {\n      \"column\": \"Sem\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 10.980313398163995,\n        \"min\": 1.0,\n        \"max\": 38.0,\n        \"num_unique_values\": 38,\n        \"samples\": [\n          34.0,\n          37.0,\n          5.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Data\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"num_unique_values\": 109,\n        \"samples\": [\n          \"2024-10-16\",\n          \"2024-05-04\",\n          \"2024-04-18\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Em casa\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 20,\n        \"samples\": [\n          \"Crici\\u00fama\",\n          \"Flamengo\",\n          \"Fortaleza\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Resultado\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 27,\n        \"samples\": [\n          \"2\\u20130\",\n          \"0\\u20134\",\n          \"1\\u20130\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Visitante\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 20,\n        \"samples\": [\n          \"Juventude\",\n          \"S\\u00e3o Paulo\",\n          \"Cruzeiro\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":3}]},{"cell_type":"code","source":["placar = resultados.loc[:,\"Resultado\"].str.split(\"–\", n = 1, expand = True)\n","print(placar)\n","resultados.loc[:,\"CasaResul\"] = placar.loc[:,0]\n","resultados.loc[:,\"VisiResul\"] = placar.loc[:,1]\n","resultados = resultados.drop(columns=[\"Resultado\"])\n","resultados"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":667},"id":"X-6DcXCUNwDB","executionInfo":{"status":"ok","timestamp":1737841667847,"user_tz":180,"elapsed":17,"user":{"displayName":"Lucas Calmon","userId":"09752934338034803828"}},"outputId":"2e6a0845-f0ca-48b2-9071-a9a0b00c2ba4"},"execution_count":4,"outputs":[{"output_type":"stream","name":"stdout","text":["     0  1\n","0    1  1\n","1    2  1\n","2    4  0\n","3    2  1\n","4    0  0\n","..  .. ..\n","432  0  3\n","433  0  1\n","434  2  0\n","435  0  1\n","436  1  0\n","\n","[380 rows x 2 columns]\n"]},{"output_type":"execute_result","data":{"text/plain":["      Sem        Data           Em casa         Visitante CasaResul VisiResul\n","0     1.0  2024-04-13          Criciúma         Juventude         1         1\n","1     1.0  2024-04-13     Internacional             Bahia         2         1\n","2     1.0  2024-04-14    Ath Paranaense            Cuiabá         4         0\n","3     1.0  2024-04-14     Vasco da Gama            Grêmio         2         1\n","4     1.0  2024-04-14       Corinthians  Atlético Mineiro         0         0\n","..    ...         ...               ...               ...       ...       ...\n","432  38.0  2024-12-08            Grêmio       Corinthians         0         3\n","433  38.0  2024-12-08         Palmeiras        Fluminense         0         1\n","434  38.0  2024-12-08             Bahia    Atl Goianiense         2         0\n","435  38.0  2024-12-08         Juventude          Cruzeiro         0         1\n","436  38.0  2024-12-08  Atlético Mineiro    Ath Paranaense         1         0\n","\n","[380 rows x 6 columns]"],"text/html":["\n","  <div id=\"df-e4bf2c0e-424b-4a59-98ac-c6eae6ca828d\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Sem</th>\n","      <th>Data</th>\n","      <th>Em casa</th>\n","      <th>Visitante</th>\n","      <th>CasaResul</th>\n","      <th>VisiResul</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1.0</td>\n","      <td>2024-04-13</td>\n","      <td>Criciúma</td>\n","      <td>Juventude</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1.0</td>\n","      <td>2024-04-13</td>\n","      <td>Internacional</td>\n","      <td>Bahia</td>\n","      <td>2</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1.0</td>\n","      <td>2024-04-14</td>\n","      <td>Ath Paranaense</td>\n","      <td>Cuiabá</td>\n","      <td>4</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1.0</td>\n","      <td>2024-04-14</td>\n","      <td>Vasco da Gama</td>\n","      <td>Grêmio</td>\n","      <td>2</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1.0</td>\n","      <td>2024-04-14</td>\n","      <td>Corinthians</td>\n","      <td>Atlético Mineiro</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>432</th>\n","      <td>38.0</td>\n","      <td>2024-12-08</td>\n","      <td>Grêmio</td>\n","      <td>Corinthians</td>\n","      <td>0</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>433</th>\n","      <td>38.0</td>\n","      <td>2024-12-08</td>\n","      <td>Palmeiras</td>\n","      <td>Fluminense</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>434</th>\n","      <td>38.0</td>\n","      <td>2024-12-08</td>\n","      <td>Bahia</td>\n","      <td>Atl Goianiense</td>\n","      <td>2</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>435</th>\n","      <td>38.0</td>\n","      <td>2024-12-08</td>\n","      <td>Juventude</td>\n","      <td>Cruzeiro</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>436</th>\n","      <td>38.0</td>\n","      <td>2024-12-08</td>\n","      <td>Atlético Mineiro</td>\n","      <td>Ath Paranaense</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>380 rows × 6 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e4bf2c0e-424b-4a59-98ac-c6eae6ca828d')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-e4bf2c0e-424b-4a59-98ac-c6eae6ca828d button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-e4bf2c0e-424b-4a59-98ac-c6eae6ca828d');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-4aa4fc2c-a506-4f6f-96dc-bc7d31c26d64\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-4aa4fc2c-a506-4f6f-96dc-bc7d31c26d64')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-4aa4fc2c-a506-4f6f-96dc-bc7d31c26d64 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_f4e0ace1-9f95-463a-b8b3-004ce59c2c83\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('resultados')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_f4e0ace1-9f95-463a-b8b3-004ce59c2c83 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('resultados');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"resultados","summary":"{\n  \"name\": \"resultados\",\n  \"rows\": 380,\n  \"fields\": [\n    {\n      \"column\": \"Sem\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 10.980313398163995,\n        \"min\": 1.0,\n        \"max\": 38.0,\n        \"num_unique_values\": 38,\n        \"samples\": [\n          34.0,\n          37.0,\n          5.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Data\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"num_unique_values\": 109,\n        \"samples\": [\n          \"2024-10-16\",\n          \"2024-05-04\",\n          \"2024-04-18\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Em casa\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 20,\n        \"samples\": [\n          \"Crici\\u00fama\",\n          \"Flamengo\",\n          \"Fortaleza\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Visitante\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 20,\n        \"samples\": [\n          \"Juventude\",\n          \"S\\u00e3o Paulo\",\n          \"Cruzeiro\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CasaResul\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 6,\n        \"samples\": [\n          \"1\",\n          \"2\",\n          \"5\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"VisiResul\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 7,\n        \"samples\": [\n          \"1\",\n          \"0\",\n          \"6\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":4}]},{"cell_type":"code","source":["resultados[\"Vencedor\"] = np.where(resultados[\"CasaResul\"] > resultados[\"VisiResul\"], \"C\",\n","                                  np.where(resultados[\"CasaResul\"] < resultados[\"VisiResul\"], \"V\", \"E\"))\n","resultados"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"_RB-bCbcNzfM","executionInfo":{"status":"ok","timestamp":1737841668426,"user_tz":180,"elapsed":594,"user":{"displayName":"Lucas Calmon","userId":"09752934338034803828"}},"outputId":"9df59078-8e5f-402b-e269-a1197a4e7843"},"execution_count":5,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      Sem        Data           Em casa         Visitante CasaResul VisiResul  \\\n","0     1.0  2024-04-13          Criciúma         Juventude         1         1   \n","1     1.0  2024-04-13     Internacional             Bahia         2         1   \n","2     1.0  2024-04-14    Ath Paranaense            Cuiabá         4         0   \n","3     1.0  2024-04-14     Vasco da Gama            Grêmio         2         1   \n","4     1.0  2024-04-14       Corinthians  Atlético Mineiro         0         0   \n","..    ...         ...               ...               ...       ...       ...   \n","432  38.0  2024-12-08            Grêmio       Corinthians         0         3   \n","433  38.0  2024-12-08         Palmeiras        Fluminense         0         1   \n","434  38.0  2024-12-08             Bahia    Atl Goianiense         2         0   \n","435  38.0  2024-12-08         Juventude          Cruzeiro         0         1   \n","436  38.0  2024-12-08  Atlético Mineiro    Ath Paranaense         1         0   \n","\n","    Vencedor  \n","0          E  \n","1          C  \n","2          C  \n","3          C  \n","4          E  \n","..       ...  \n","432        V  \n","433        V  \n","434        C  \n","435        V  \n","436        C  \n","\n","[380 rows x 7 columns]"],"text/html":["\n","  <div id=\"df-054e7710-9ecc-42bb-8910-6fd9df054b0b\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Sem</th>\n","      <th>Data</th>\n","      <th>Em casa</th>\n","      <th>Visitante</th>\n","      <th>CasaResul</th>\n","      <th>VisiResul</th>\n","      <th>Vencedor</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1.0</td>\n","      <td>2024-04-13</td>\n","      <td>Criciúma</td>\n","      <td>Juventude</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>E</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1.0</td>\n","      <td>2024-04-13</td>\n","      <td>Internacional</td>\n","      <td>Bahia</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>C</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1.0</td>\n","      <td>2024-04-14</td>\n","      <td>Ath Paranaense</td>\n","      <td>Cuiabá</td>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>C</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1.0</td>\n","      <td>2024-04-14</td>\n","      <td>Vasco da Gama</td>\n","      <td>Grêmio</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>C</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1.0</td>\n","      <td>2024-04-14</td>\n","      <td>Corinthians</td>\n","      <td>Atlético Mineiro</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>E</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>432</th>\n","      <td>38.0</td>\n","      <td>2024-12-08</td>\n","      <td>Grêmio</td>\n","      <td>Corinthians</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>V</td>\n","    </tr>\n","    <tr>\n","      <th>433</th>\n","      <td>38.0</td>\n","      <td>2024-12-08</td>\n","      <td>Palmeiras</td>\n","      <td>Fluminense</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>V</td>\n","    </tr>\n","    <tr>\n","      <th>434</th>\n","      <td>38.0</td>\n","      <td>2024-12-08</td>\n","      <td>Bahia</td>\n","      <td>Atl Goianiense</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>C</td>\n","    </tr>\n","    <tr>\n","      <th>435</th>\n","      <td>38.0</td>\n","      <td>2024-12-08</td>\n","      <td>Juventude</td>\n","      <td>Cruzeiro</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>V</td>\n","    </tr>\n","    <tr>\n","      <th>436</th>\n","      <td>38.0</td>\n","      <td>2024-12-08</td>\n","      <td>Atlético Mineiro</td>\n","      <td>Ath Paranaense</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>C</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>380 rows × 7 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-054e7710-9ecc-42bb-8910-6fd9df054b0b')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-054e7710-9ecc-42bb-8910-6fd9df054b0b button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-054e7710-9ecc-42bb-8910-6fd9df054b0b');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-197fbee7-2b6e-4b0f-99dc-d67d1bd5e278\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-197fbee7-2b6e-4b0f-99dc-d67d1bd5e278')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-197fbee7-2b6e-4b0f-99dc-d67d1bd5e278 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_ec78e6e8-2907-465a-9492-07d681a81663\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('resultados')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_ec78e6e8-2907-465a-9492-07d681a81663 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('resultados');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"resultados","summary":"{\n  \"name\": \"resultados\",\n  \"rows\": 380,\n  \"fields\": [\n    {\n      \"column\": \"Sem\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 10.980313398163995,\n        \"min\": 1.0,\n        \"max\": 38.0,\n        \"num_unique_values\": 38,\n        \"samples\": [\n          34.0,\n          37.0,\n          5.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Data\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"num_unique_values\": 109,\n        \"samples\": [\n          \"2024-10-16\",\n          \"2024-05-04\",\n          \"2024-04-18\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Em casa\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 20,\n        \"samples\": [\n          \"Crici\\u00fama\",\n          \"Flamengo\",\n          \"Fortaleza\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Visitante\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 20,\n        \"samples\": [\n          \"Juventude\",\n          \"S\\u00e3o Paulo\",\n          \"Cruzeiro\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CasaResul\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 6,\n        \"samples\": [\n          \"1\",\n          \"2\",\n          \"5\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"VisiResul\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 7,\n        \"samples\": [\n          \"1\",\n          \"0\",\n          \"6\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Vencedor\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"E\",\n          \"C\",\n          \"V\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["#verificando rodada atrasada\n","resultados[resultados.loc[:,\"Sem\"] == 15]\n","resultados.dtypes\n","print(resultados['CasaResul'].value_counts())\n","#transformar casa resul e visi resul em numeros\n","resultados['CasaResul'] = resultados['CasaResul'].astype(int)\n","resultados['VisiResul'] = resultados['VisiResul'].astype(int)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"uD9SDB4qN0_2","executionInfo":{"status":"ok","timestamp":1737841668426,"user_tz":180,"elapsed":9,"user":{"displayName":"Lucas Calmon","userId":"09752934338034803828"}},"outputId":"db929638-6fcc-4e09-fef0-f864cf2cc6b3"},"execution_count":6,"outputs":[{"output_type":"stream","name":"stdout","text":["CasaResul\n","1    138\n","2    111\n","0     79\n","3     38\n","4      8\n","5      6\n","Name: count, dtype: int64\n"]}]},{"cell_type":"code","source":["resultados['VCasaValor'] = np.where(resultados['Vencedor']=='C',1,np.where(resultados['Vencedor']=='E',0.5,0))\n","resultados['VVisValor'] = np.where(resultados['Vencedor']=='V',1,np.where(resultados['Vencedor']=='E',0.5,0))\n","resultados['count'] = 1"],"metadata":{"id":"P9VkZXlvN2mv","executionInfo":{"status":"ok","timestamp":1737841668426,"user_tz":180,"elapsed":8,"user":{"displayName":"Lucas Calmon","userId":"09752934338034803828"}}},"execution_count":7,"outputs":[]},{"cell_type":"code","source":["primeiro = resultados[resultados.loc[:, \"Sem\"] < 20]\n","segundo = resultados[resultados.loc[:, \"Sem\"] > 19]\n","print(primeiro.shape)\n","print(segundo.shape)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"U25igxIjN4Dz","executionInfo":{"status":"ok","timestamp":1737841668426,"user_tz":180,"elapsed":8,"user":{"displayName":"Lucas Calmon","userId":"09752934338034803828"}},"outputId":"9f61ab11-a562-42b7-b94b-82c62ef16db7"},"execution_count":8,"outputs":[{"output_type":"stream","name":"stdout","text":["(190, 10)\n","(190, 10)\n"]}]},{"cell_type":"code","source":["PrimeiroTurnoC = primeiro.groupby(['Em casa'])[['count', 'VCasaValor','CasaResul','VisiResul']].sum().reset_index()\n","PrimeiroTurnoC = PrimeiroTurnoC.rename(columns={'Em casa':'time', 'CasaResul': 'GolsCasaC', 'VisiResul': 'GolsVisiC'})\n","PrimeiroTurnoV = primeiro.groupby(['Visitante'])[['count', 'VVisValor','CasaResul','VisiResul']].sum().reset_index()\n","PrimeiroTurnoV = PrimeiroTurnoV.rename(columns={'Visitante':'time', 'CasaResul': 'GolsCasaV', 'VisiResul': 'GolsVisiV'})"],"metadata":{"id":"82Uzww1uN6Gc","executionInfo":{"status":"ok","timestamp":1737841668426,"user_tz":180,"elapsed":7,"user":{"displayName":"Lucas Calmon","userId":"09752934338034803828"}}},"execution_count":9,"outputs":[]},{"cell_type":"code","source":["SegundoTurnoC = segundo.groupby(['Em casa'])[['count', 'VCasaValor','CasaResul','VisiResul']].sum().reset_index()\n","SegundoTurnoC = SegundoTurnoC.rename(columns={'Em casa':'time', 'CasaResul': 'GolsCasaC', 'VisiResul': 'GolsVisiC'})\n","SegundoTurnoV = segundo.groupby(['Visitante'])[['count', 'VVisValor','CasaResul','VisiResul']].sum().reset_index()\n","SegundoTurnoV = SegundoTurnoV.rename(columns={'Visitante':'time', 'CasaResul': 'GolsCasaV', 'VisiResul': 'GolsVisiV'})"],"metadata":{"id":"YohrK4atN7kW","executionInfo":{"status":"ok","timestamp":1737841668426,"user_tz":180,"elapsed":6,"user":{"displayName":"Lucas Calmon","userId":"09752934338034803828"}}},"execution_count":10,"outputs":[]},{"cell_type":"code","source":["PrimeiroTurno = pd.merge(PrimeiroTurnoC, PrimeiroTurnoV, on=['time'])\n","SegundoTurno = pd.merge(SegundoTurnoC, SegundoTurnoV, on=['time'])"],"metadata":{"id":"ph6Faop5N812","executionInfo":{"status":"ok","timestamp":1737841668426,"user_tz":180,"elapsed":6,"user":{"displayName":"Lucas Calmon","userId":"09752934338034803828"}}},"execution_count":11,"outputs":[]},{"cell_type":"code","source":["PrimeiroTurno['W'] = PrimeiroTurno['VCasaValor']+PrimeiroTurno['VVisValor'] #win value\n","PrimeiroTurno['G'] = PrimeiroTurno['count_x'] + PrimeiroTurno['count_y']  #games\n","PrimeiroTurno['GF'] = PrimeiroTurno['GolsCasaC']+PrimeiroTurno['GolsVisiV'] #goals for\n","PrimeiroTurno['GA'] = PrimeiroTurno['GolsVisiC']+PrimeiroTurno['GolsCasaV'] #goals against\n","\n","SegundoTurno['W'] = SegundoTurno['VCasaValor']+SegundoTurno['VVisValor'] #win value\n","SegundoTurno['G'] = SegundoTurno['count_x'] + SegundoTurno['count_y']  #games\n","SegundoTurno['GF'] = SegundoTurno['GolsCasaC']+SegundoTurno['GolsVisiV'] #goals for\n","SegundoTurno['GA'] = SegundoTurno['GolsVisiC']+SegundoTurno['GolsCasaV'] #goals against"],"metadata":{"id":"yNL52klfN9KO","executionInfo":{"status":"ok","timestamp":1737841668426,"user_tz":180,"elapsed":6,"user":{"displayName":"Lucas Calmon","userId":"09752934338034803828"}}},"execution_count":12,"outputs":[]},{"cell_type":"code","source":["PrimeiroTurno['wpc'] = PrimeiroTurno['W']/PrimeiroTurno['G'] #win percentage - (Win Value)/(Games Played)\n","PrimeiroTurno['pyth'] = PrimeiroTurno['GF']**2/(PrimeiroTurno['GF']**2 + PrimeiroTurno['GA']**2) #pythagorean expectation - (Gols For)^2/((Gols For)^2 + (Gols Against)^2)\n","\n","SegundoTurno['wpc'] = SegundoTurno['W']/SegundoTurno['G'] #win percentage\n","SegundoTurno['pyth'] = SegundoTurno['GF']**2/(SegundoTurno['GF']**2 + SegundoTurno['GA']**2)"],"metadata":{"id":"x7udVn9AN-tK","executionInfo":{"status":"ok","timestamp":1737841668687,"user_tz":180,"elapsed":3,"user":{"displayName":"Lucas Calmon","userId":"09752934338034803828"}}},"execution_count":13,"outputs":[]},{"cell_type":"code","source":["sns.regplot(x=\"pyth\", y = \"wpc\", data = PrimeiroTurno,ci=None)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":466},"id":"T40swRYmOALJ","executionInfo":{"status":"ok","timestamp":1737841669029,"user_tz":180,"elapsed":345,"user":{"displayName":"Lucas Calmon","userId":"09752934338034803828"}},"outputId":"692f94bd-92a5-4c8a-a527-79f3663ea638"},"execution_count":14,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: xlabel='pyth', ylabel='wpc'>"]},"metadata":{},"execution_count":14},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["sns.regplot(x=\"pyth\", y = \"wpc\", data = SegundoTurno,ci=None)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":466},"id":"9u8m_drpOBhn","executionInfo":{"status":"ok","timestamp":1737841669942,"user_tz":180,"elapsed":918,"user":{"displayName":"Lucas Calmon","userId":"09752934338034803828"}},"outputId":"a6b99cec-0ed9-4a21-a853-515410bdc0d3"},"execution_count":15,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: xlabel='pyth', ylabel='wpc'>"]},"metadata":{},"execution_count":15},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"iVBORw0KGgoAAAANSUhEUgAAAjcAAAGwCAYAAABVdURTAAAAOnRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjEwLjAsIGh0dHBzOi8vbWF0cGxvdGxpYi5vcmcvlHJYcgAAAAlwSFlzAAAPYQAAD2EBqD+naQAAVmdJREFUeJzt3XtYlHX+P/7n3MMcQBiOchRFwAMiCnlAKUP72tfK2tQOat/O5e6ax6ittDU33dUOVpq1tvWxtt9uiWXZ0TU3WinT8pOBIiIKmicERIJhGJjDfd+/P9xunPDAaeZmhufjurgufTFz85obZJ7eh9dbI8uyDCIiIiIfIajdABEREVFXYrghIiIin8JwQ0RERD6F4YaIiIh8CsMNERER+RSGGyIiIvIpDDdERETkU/zUbsDTJElCRUUFgoKCoNFo1G6HiIiI2kCWZTQ0NCA2NhaCcOljMz0u3FRUVCA+Pl7tNoiIiKgDTpw4gT59+lzyMT0u3AQFBQE4t3NMJpPK3RAREVFbmM1mxMfHK+/jl9Ljws0vp6JMJhPDDRERkZdpyyUlvKCYiIiIfArDDREREfkUhhsiIiLyKQw3RERE5FMYboiIiMinMNwQERGRT2G4ISIiIp/CcENEREQ+heGGiIiIfEqPm1BMRERE7iFJMoorzKi12hEWoEdqrAmC4PlFqhluiIiIqNN2ltVgXX45yqstcIgydFoNkiIDMTs7CVnJER7thaeliIiIqFN2ltVg8eYilJw2o5fBD5FBBvQy+KHkdAMWby7CzrIaj/bDcENEREQdJkky1uWXw2JzItpkhFGnhSBoYNRpEW0ywGITsS6/HJIke6wnhhsiIiLqsOIKM8qrLQgN0LdasVuj0SAkQIfyaguKK8we64nhhoiIiDqs1mqHQ5Sh1144Uhi0AhySjFqr3WM9MdwQERFRh4UF6KHTamAXpQt+3iZK0AkahAXoPdYTww0RERF1WGqsCUmRgfjZ6oAsu15XI8sy6qwOJEUGIjXW5LGeGG6IiIiowwRBg9nZSQg0aFFptqHJIUKSZDQ5RFSabQg0aDE7O8mj824YboiIiKhTspIjsGJqGlJigmC22nHa3AyrzYmUmCCsmJrm8Tk3HOJHREREnZaVHIEqczMW//QzYkOMWHXrcAyPD+GEYiIiIvI+jTYnln5SjE17TgIAys80YltJFTL6harSD8MNERERdVhxRT3mvVuAIzWNSi3I6IehscGq9cRwQ0RERO0myzL+vvMnrNxy0OU28Cv6hmDNjAzEhwWo1hvDDREREbVLbaMdf3h/L/IOVis1jQZ4aHwSFk4cCN1FBvp5CsMNERERtdmu8rNYuLEAVWabUosMMmD19HSP3xV1MQw3REREdFlOUcKavMN45T9lOH9W34RBvbHqtuEIDzSo19yvMNwQERHRJZ382YqFuYX44djPSk2n1eDx6wbjgav6t1owU20MN0RERHRRW/efxmOb9sHc7FRqCeEBWDvzCqT1Ue+OqEthuCEiIqJWmh0iln92AO98f9ylPi0jDsumDEWgoftGiO7bGREREaniUFUD5r77Iw5VWZRagF6L5TcPxS0j+qjYWdsw3BARERGAc7Nr3t19HMs+PQCbs2V2zdA4E9bOvAL9I3qp2F3bMdwQERER6q0OLNq8D1uKKl3qD17VH3+4bhAMflqVOms/hhsiIqIebs+xWszfUIhTdU1KLayXHi/cNhwTBkeq2FnHMNwQERH1UKIkY932Mrz05WGIUsvwmqykcLw0PR1RJqOK3XUcww0REVEPVGVuxsLcQuw6clapaQUNcq4diN9nJ0ErdK/ZNe3BcENERNTDfHWwCo++vw+1jXalFhfij5dnZmBEv1AVO+sa6q5s9V+vvvoqEhISYDQakZmZid27d1/0sePHj4dGo2n1MXnyZA92TERE5H1sThFPf1qM+//+g0uwmZwWgy0LxvlEsAG6wZGbjRs3IicnB6+99hoyMzOxevVqTJo0CaWlpYiMbH0R04cffgi7veUbcvbsWQwfPhy33XabJ9smIiLyKkfOWDBvQwGKK8xKzagTsPSmVMwYFd/tllDoDI0sn7/8ledlZmZi1KhReOWVVwAAkiQhPj4e8+bNwxNPPHHZ569evRpPPfUUTp8+jV69Ln//vdlsRnBwMOrr62EymTrdPxERUXf3wZ6TWPLxfljtolIbFBWEV+7IwICoIBU7a7v2vH+reuTGbrdjz549WLRokVITBAETJ07Erl272rSN9evXY8aMGRcNNjabDTZby7LsZrP5go8jIiLyNRabE0s+2o/NBadc6neN6YcnJ6fAqPOe2TXtoWq4qampgSiKiIqKcqlHRUXh4MGDl33+7t27sX//fqxfv/6ij1m5ciWefvrpTvdKRETk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\n"},"metadata":{}}]},{"cell_type":"code","source":["PrimeiroTurno"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"ZJZdF6mAVCu7","executionInfo":{"status":"ok","timestamp":1737841669942,"user_tz":180,"elapsed":16,"user":{"displayName":"Lucas Calmon","userId":"09752934338034803828"}},"outputId":"fe4ec7d6-b3c9-457e-90e9-f0edf0d81d96"},"execution_count":16,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                   time  count_x  VCasaValor  GolsCasaC  GolsVisiC  count_y  \\\n","0        Ath Paranaense        9         6.0         14          8       10   \n","1        Atl Goianiense        9         1.5          7         15       10   \n","2      Atlético Mineiro       10         6.0         15         14        9   \n","3                 Bahia        9         7.0         14          6       10   \n","4         Botafogo (RJ)        9         7.5         16          5       10   \n","..                  ...      ...         ...        ...        ...      ...   \n","15            Palmeiras       10         7.5         16          6        9   \n","16  Red Bull Bragantino        9         7.0         15          9       10   \n","17            São Paulo       10         7.0         15          8        9   \n","18        Vasco da Gama       10         7.0         15         14        9   \n","19              Vitória       10         3.5         12         16        9   \n","\n","    VVisValor  GolsCasaV  GolsVisiV     W   G  GF  GA       wpc      pyth  \n","0         4.0         10          7  10.0  19  21  18  0.526316  0.576471  \n","1         3.5         14          9   5.0  19  16  29  0.263158  0.233364  \n","2         4.5         13         12  10.5  19  27  27  0.552632  0.500000  \n","3         4.0         17         14  11.0  19  28  23  0.578947  0.597106  \n","4         6.5         11         15  14.0  19  31  16  0.736842  0.789647  \n","..        ...        ...        ...   ...  ..  ..  ..       ...       ...  \n","15        5.0          8         11  12.5  19  27  14  0.657895  0.788108  \n","16        2.5         14          9   9.5  19  24  23  0.500000  0.521267  \n","17        4.5         12         13  11.5  19  28  20  0.605263  0.662162  \n","18        2.0         14          6   9.0  19  21  28  0.473684  0.360000  \n","19        2.0         16          8   5.5  19  20  32  0.289474  0.280899  \n","\n","[20 rows x 15 columns]"],"text/html":["\n","  <div id=\"df-676cd89e-9ac9-4388-a10d-9c4671e25aaf\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>time</th>\n","      <th>count_x</th>\n","      <th>VCasaValor</th>\n","      <th>GolsCasaC</th>\n","      <th>GolsVisiC</th>\n","      <th>count_y</th>\n","      <th>VVisValor</th>\n","      <th>GolsCasaV</th>\n","      <th>GolsVisiV</th>\n","      <th>W</th>\n","      <th>G</th>\n","      <th>GF</th>\n","      <th>GA</th>\n","      <th>wpc</th>\n","      <th>pyth</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Ath Paranaense</td>\n","      <td>9</td>\n","      <td>6.0</td>\n","      <td>14</td>\n","      <td>8</td>\n","      <td>10</td>\n","      <td>4.0</td>\n","      <td>10</td>\n","      <td>7</td>\n","      <td>10.0</td>\n","      <td>19</td>\n","      <td>21</td>\n","      <td>18</td>\n","      <td>0.526316</td>\n","      <td>0.576471</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Atl Goianiense</td>\n","      <td>9</td>\n","      <td>1.5</td>\n","      <td>7</td>\n","      <td>15</td>\n","      <td>10</td>\n","      <td>3.5</td>\n","      <td>14</td>\n","      <td>9</td>\n","      <td>5.0</td>\n","      <td>19</td>\n","      <td>16</td>\n","      <td>29</td>\n","      <td>0.263158</td>\n","      <td>0.233364</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Atlético Mineiro</td>\n","      <td>10</td>\n","      <td>6.0</td>\n","      <td>15</td>\n","      <td>14</td>\n","      <td>9</td>\n","      <td>4.5</td>\n","      <td>13</td>\n","      <td>12</td>\n","      <td>10.5</td>\n","      <td>19</td>\n","      <td>27</td>\n","      <td>27</td>\n","      <td>0.552632</td>\n","      <td>0.500000</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Bahia</td>\n","      <td>9</td>\n","      <td>7.0</td>\n","      <td>14</td>\n","      <td>6</td>\n","      <td>10</td>\n","      <td>4.0</td>\n","      <td>17</td>\n","      <td>14</td>\n","      <td>11.0</td>\n","      <td>19</td>\n","      <td>28</td>\n","      <td>23</td>\n","      <td>0.578947</td>\n","      <td>0.597106</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Botafogo (RJ)</td>\n","      <td>9</td>\n","      <td>7.5</td>\n","      <td>16</td>\n","      <td>5</td>\n","      <td>10</td>\n","      <td>6.5</td>\n","      <td>11</td>\n","      <td>15</td>\n","      <td>14.0</td>\n","      <td>19</td>\n","      <td>31</td>\n","      <td>16</td>\n","      <td>0.736842</td>\n","      <td>0.789647</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>Palmeiras</td>\n","      <td>10</td>\n","      <td>7.5</td>\n","      <td>16</td>\n","      <td>6</td>\n","      <td>9</td>\n","      <td>5.0</td>\n","      <td>8</td>\n","      <td>11</td>\n","      <td>12.5</td>\n","      <td>19</td>\n","      <td>27</td>\n","      <td>14</td>\n","      <td>0.657895</td>\n","      <td>0.788108</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>Red Bull Bragantino</td>\n","      <td>9</td>\n","      <td>7.0</td>\n","      <td>15</td>\n","      <td>9</td>\n","      <td>10</td>\n","      <td>2.5</td>\n","      <td>14</td>\n","      <td>9</td>\n","      <td>9.5</td>\n","      <td>19</td>\n","      <td>24</td>\n","      <td>23</td>\n","      <td>0.500000</td>\n","      <td>0.521267</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>São Paulo</td>\n","      <td>10</td>\n","      <td>7.0</td>\n","      <td>15</td>\n","      <td>8</td>\n","      <td>9</td>\n","      <td>4.5</td>\n","      <td>12</td>\n","      <td>13</td>\n","      <td>11.5</td>\n","      <td>19</td>\n","      <td>28</td>\n","      <td>20</td>\n","      <td>0.605263</td>\n","      <td>0.662162</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>Vasco da Gama</td>\n","      <td>10</td>\n","      <td>7.0</td>\n","      <td>15</td>\n","      <td>14</td>\n","      <td>9</td>\n","      <td>2.0</td>\n","      <td>14</td>\n","      <td>6</td>\n","      <td>9.0</td>\n","      <td>19</td>\n","      <td>21</td>\n","      <td>28</td>\n","      <td>0.473684</td>\n","      <td>0.360000</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>Vitória</td>\n","      <td>10</td>\n","      <td>3.5</td>\n","      <td>12</td>\n","      <td>16</td>\n","      <td>9</td>\n","      <td>2.0</td>\n","      <td>16</td>\n","      <td>8</td>\n","      <td>5.5</td>\n","      <td>19</td>\n","      <td>20</td>\n","      <td>32</td>\n","      <td>0.289474</td>\n","      <td>0.280899</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>20 rows × 15 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-676cd89e-9ac9-4388-a10d-9c4671e25aaf')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-676cd89e-9ac9-4388-a10d-9c4671e25aaf button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-676cd89e-9ac9-4388-a10d-9c4671e25aaf');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-5e7e6187-1cb1-4e31-88ef-8d622b2cb4da\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-5e7e6187-1cb1-4e31-88ef-8d622b2cb4da')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-5e7e6187-1cb1-4e31-88ef-8d622b2cb4da button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_78844738-ad11-4738-a8df-aaae0145995f\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('PrimeiroTurno')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_78844738-ad11-4738-a8df-aaae0145995f button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('PrimeiroTurno');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"PrimeiroTurno","summary":"{\n  \"name\": \"PrimeiroTurno\",\n  \"rows\": 20,\n  \"fields\": [\n    {\n      \"column\": \"time\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 20,\n        \"samples\": [\n          \"Ath Paranaense\",\n          \"S\\u00e3o Paulo\",\n          \"Palmeiras\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"count_x\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 9,\n        \"max\": 10,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          10,\n          9\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"VCasaValor\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.8025931613270807,\n        \"min\": 1.5,\n        \"max\": 8.5,\n        \"num_unique_values\": 11,\n        \"samples\": [\n          8.5,\n          6.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"GolsCasaC\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3,\n        \"min\": 7,\n        \"max\": 19,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          10,\n          7\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"GolsVisiC\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3,\n        \"min\": 4,\n        \"max\": 16,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          4,\n          15\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"count_y\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 9,\n        \"max\": 10,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          9,\n          10\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"VVisValor\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.634134246884908,\n        \"min\": 1.0,\n        \"max\": 7.0,\n        \"num_unique_values\": 11,\n        \"samples\": [\n          3.0,\n          4.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"GolsCasaV\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2,\n        \"min\": 8,\n        \"max\": 20,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          20,\n          14\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"GolsVisiV\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4,\n        \"min\": 4,\n        \"max\": 19,\n        \"num_unique_values\": 11,\n        \"samples\": [\n          4,\n          7\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"W\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.6852423197524415,\n        \"min\": 5.0,\n        \"max\": 14.0,\n        \"num_unique_values\": 16,\n        \"samples\": [\n          10.0,\n          5.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"G\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 19,\n        \"max\": 19,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          19\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"GF\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5,\n        \"min\": 15,\n        \"max\": 33,\n        \"num_unique_values\": 13,\n        \"samples\": [\n          19\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"GA\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4,\n        \"min\": 14,\n        \"max\": 32,\n        \"num_unique_values\": 13,\n        \"samples\": [\n          14\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"wpc\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.14132854314486534,\n        \"min\": 0.2631578947368421,\n        \"max\": 0.7368421052631579,\n        \"num_unique_values\": 16,\n        \"samples\": [\n          0.5263157894736842\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"pyth\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.17466865576027804,\n        \"min\": 0.2333637192342753,\n        \"max\": 0.7896466721446179,\n        \"num_unique_values\": 19,\n        \"samples\": [\n          0.5764705882352941\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":16}]},{"cell_type":"code","source":["Bra = pd.merge(PrimeiroTurno, SegundoTurno, on=['time'])\n","Bra"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":548},"id":"fzoKOvOAOCyr","executionInfo":{"status":"ok","timestamp":1737841669942,"user_tz":180,"elapsed":15,"user":{"displayName":"Lucas Calmon","userId":"09752934338034803828"}},"outputId":"6fc98da5-9f8f-4b6f-d758-5aa1cbd4ca77"},"execution_count":17,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                   time  count_x_x  VCasaValor_x  GolsCasaC_x  GolsVisiC_x  \\\n","0        Ath Paranaense          9           6.0           14            8   \n","1        Atl Goianiense          9           1.5            7           15   \n","2      Atlético Mineiro         10           6.0           15           14   \n","3                 Bahia          9           7.0           14            6   \n","4         Botafogo (RJ)          9           7.5           16            5   \n","..                  ...        ...           ...          ...          ...   \n","15            Palmeiras         10           7.5           16            6   \n","16  Red Bull Bragantino          9           7.0           15            9   \n","17            São Paulo         10           7.0           15            8   \n","18        Vasco da Gama         10           7.0           15           14   \n","19              Vitória         10           3.5           12           16   \n","\n","    count_y_x  VVisValor_x  GolsCasaV_x  GolsVisiV_x   W_x  G_x  GF_x  GA_x  \\\n","0          10          4.0           10            7  10.0   19    21    18   \n","1          10          3.5           14            9   5.0   19    16    29   \n","2           9          4.5           13           12  10.5   19    27    27   \n","3          10          4.0           17           14  11.0   19    28    23   \n","4          10          6.5           11           15  14.0   19    31    16   \n","..        ...          ...          ...          ...   ...  ...   ...   ...   \n","15          9          5.0            8           11  12.5   19    27    14   \n","16         10          2.5           14            9   9.5   19    24    23   \n","17          9          4.5           12           13  11.5   19    28    20   \n","18          9          2.0           14            6   9.0   19    21    28   \n","19          9          2.0           16            8   5.5   19    20    32   \n","\n","       wpc_x    pyth_x  count_x_y  VCasaValor_y  GolsCasaC_y  GolsVisiC_y  \\\n","0   0.526316  0.576471         10           3.0           10           13   \n","1   0.263158  0.233364         10           6.0            9            9   \n","2   0.552632  0.500000          9           4.5           12           12   \n","3   0.578947  0.597106         10           5.5           11            9   \n","4   0.736842  0.789647         10           7.0           15            8   \n","..       ...       ...        ...           ...          ...          ...   \n","15  0.657895  0.788108          9           5.5           18           10   \n","16  0.500000  0.521267         10           4.5           12           10   \n","17  0.605263  0.662162          9           6.5           16           10   \n","18  0.473684  0.360000          9           5.5           14           10   \n","19  0.289474  0.280899          9           6.0           11            7   \n","\n","    count_y_y  VVisValor_y  GolsCasaV_y  GolsVisiV_y   W_y  G_y  GF_y  GA_y  \\\n","0           9          2.5           15            9   5.5   19    19    28   \n","1           9          0.5           20            4   6.5   19    13    29   \n","2          10          3.0           15            8   7.5   19    20    27   \n","3           9          2.5           17           10   8.0   19    21    26   \n","4           9          7.0            5           13  14.0   19    28    13   \n","..        ...          ...          ...          ...   ...  ...   ...   ...   \n","15         10          7.5            9           15  13.0   19    33    19   \n","16          9          3.0           15            8   7.5   19    20    25   \n","17         10          3.0           13            9   9.5   19    25    23   \n","18         10          3.5           18            8   9.0   19    22    28   \n","19         10          5.5           13           14  11.5   19    25    20   \n","\n","       wpc_y    pyth_y  \n","0   0.289474  0.315284  \n","1   0.342105  0.167327  \n","2   0.394737  0.354296  \n","3   0.421053  0.394808  \n","4   0.736842  0.822665  \n","..       ...       ...  \n","15  0.684211  0.751034  \n","16  0.394737  0.390244  \n","17  0.500000  0.541594  \n","18  0.473684  0.381703  \n","19  0.605263  0.609756  \n","\n","[20 rows x 29 columns]"],"text/html":["\n","  <div id=\"df-fa08ebc1-38cf-4de4-87a0-8d75717455f7\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>time</th>\n","      <th>count_x_x</th>\n","      <th>VCasaValor_x</th>\n","      <th>GolsCasaC_x</th>\n","      <th>GolsVisiC_x</th>\n","      <th>count_y_x</th>\n","      <th>VVisValor_x</th>\n","      <th>GolsCasaV_x</th>\n","      <th>GolsVisiV_x</th>\n","      <th>W_x</th>\n","      <th>G_x</th>\n","      <th>GF_x</th>\n","      <th>GA_x</th>\n","      <th>wpc_x</th>\n","      <th>pyth_x</th>\n","      <th>count_x_y</th>\n","      <th>VCasaValor_y</th>\n","      <th>GolsCasaC_y</th>\n","      <th>GolsVisiC_y</th>\n","      <th>count_y_y</th>\n","      <th>VVisValor_y</th>\n","      <th>GolsCasaV_y</th>\n","      <th>GolsVisiV_y</th>\n","      <th>W_y</th>\n","      <th>G_y</th>\n","      <th>GF_y</th>\n","      <th>GA_y</th>\n","      <th>wpc_y</th>\n","      <th>pyth_y</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Ath Paranaense</td>\n","      <td>9</td>\n","      <td>6.0</td>\n","      <td>14</td>\n","      <td>8</td>\n","      <td>10</td>\n","      <td>4.0</td>\n","      <td>10</td>\n","      <td>7</td>\n","      <td>10.0</td>\n","      <td>19</td>\n","      <td>21</td>\n","      <td>18</td>\n","      <td>0.526316</td>\n","      <td>0.576471</td>\n","      <td>10</td>\n","      <td>3.0</td>\n","      <td>10</td>\n","      <td>13</td>\n","      <td>9</td>\n","      <td>2.5</td>\n","      <td>15</td>\n","      <td>9</td>\n","      <td>5.5</td>\n","      <td>19</td>\n","      <td>19</td>\n","      <td>28</td>\n","      <td>0.289474</td>\n","      <td>0.315284</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Atl Goianiense</td>\n","      <td>9</td>\n","      <td>1.5</td>\n","      <td>7</td>\n","      <td>15</td>\n","      <td>10</td>\n","      <td>3.5</td>\n","      <td>14</td>\n","      <td>9</td>\n","      <td>5.0</td>\n","      <td>19</td>\n","      <td>16</td>\n","      <td>29</td>\n","      <td>0.263158</td>\n","      <td>0.233364</td>\n","      <td>10</td>\n","      <td>6.0</td>\n","      <td>9</td>\n","      <td>9</td>\n","      <td>9</td>\n","      <td>0.5</td>\n","      <td>20</td>\n","      <td>4</td>\n","      <td>6.5</td>\n","      <td>19</td>\n","      <td>13</td>\n","      <td>29</td>\n","      <td>0.342105</td>\n","      <td>0.167327</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Atlético Mineiro</td>\n","      <td>10</td>\n","      <td>6.0</td>\n","      <td>15</td>\n","      <td>14</td>\n","      <td>9</td>\n","      <td>4.5</td>\n","      <td>13</td>\n","      <td>12</td>\n","      <td>10.5</td>\n","      <td>19</td>\n","      <td>27</td>\n","      <td>27</td>\n","      <td>0.552632</td>\n","      <td>0.500000</td>\n","      <td>9</td>\n","      <td>4.5</td>\n","      <td>12</td>\n","      <td>12</td>\n","      <td>10</td>\n","      <td>3.0</td>\n","      <td>15</td>\n","      <td>8</td>\n","      <td>7.5</td>\n","      <td>19</td>\n","      <td>20</td>\n","      <td>27</td>\n","      <td>0.394737</td>\n","      <td>0.354296</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Bahia</td>\n","      <td>9</td>\n","      <td>7.0</td>\n","      <td>14</td>\n","      <td>6</td>\n","      <td>10</td>\n","      <td>4.0</td>\n","      <td>17</td>\n","      <td>14</td>\n","      <td>11.0</td>\n","      <td>19</td>\n","      <td>28</td>\n","      <td>23</td>\n","      <td>0.578947</td>\n","      <td>0.597106</td>\n","      <td>10</td>\n","      <td>5.5</td>\n","      <td>11</td>\n","      <td>9</td>\n","      <td>9</td>\n","      <td>2.5</td>\n","      <td>17</td>\n","      <td>10</td>\n","      <td>8.0</td>\n","      <td>19</td>\n","      <td>21</td>\n","      <td>26</td>\n","      <td>0.421053</td>\n","      <td>0.394808</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Botafogo (RJ)</td>\n","      <td>9</td>\n","      <td>7.5</td>\n","      <td>16</td>\n","      <td>5</td>\n","      <td>10</td>\n","      <td>6.5</td>\n","      <td>11</td>\n","      <td>15</td>\n","      <td>14.0</td>\n","      <td>19</td>\n","      <td>31</td>\n","      <td>16</td>\n","      <td>0.736842</td>\n","      <td>0.789647</td>\n","      <td>10</td>\n","      <td>7.0</td>\n","      <td>15</td>\n","      <td>8</td>\n","      <td>9</td>\n","      <td>7.0</td>\n","      <td>5</td>\n","      <td>13</td>\n","      <td>14.0</td>\n","      <td>19</td>\n","      <td>28</td>\n","      <td>13</td>\n","      <td>0.736842</td>\n","      <td>0.822665</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>Palmeiras</td>\n","      <td>10</td>\n","      <td>7.5</td>\n","      <td>16</td>\n","      <td>6</td>\n","      <td>9</td>\n","      <td>5.0</td>\n","      <td>8</td>\n","      <td>11</td>\n","      <td>12.5</td>\n","      <td>19</td>\n","      <td>27</td>\n","      <td>14</td>\n","      <td>0.657895</td>\n","      <td>0.788108</td>\n","      <td>9</td>\n","      <td>5.5</td>\n","      <td>18</td>\n","      <td>10</td>\n","      <td>10</td>\n","      <td>7.5</td>\n","      <td>9</td>\n","      <td>15</td>\n","      <td>13.0</td>\n","      <td>19</td>\n","      <td>33</td>\n","      <td>19</td>\n","      <td>0.684211</td>\n","      <td>0.751034</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>Red Bull Bragantino</td>\n","      <td>9</td>\n","      <td>7.0</td>\n","      <td>15</td>\n","      <td>9</td>\n","      <td>10</td>\n","      <td>2.5</td>\n","      <td>14</td>\n","      <td>9</td>\n","      <td>9.5</td>\n","      <td>19</td>\n","      <td>24</td>\n","      <td>23</td>\n","      <td>0.500000</td>\n","      <td>0.521267</td>\n","      <td>10</td>\n","      <td>4.5</td>\n","      <td>12</td>\n","      <td>10</td>\n","      <td>9</td>\n","      <td>3.0</td>\n","      <td>15</td>\n","      <td>8</td>\n","      <td>7.5</td>\n","      <td>19</td>\n","      <td>20</td>\n","      <td>25</td>\n","      <td>0.394737</td>\n","      <td>0.390244</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>São Paulo</td>\n","      <td>10</td>\n","      <td>7.0</td>\n","      <td>15</td>\n","      <td>8</td>\n","      <td>9</td>\n","      <td>4.5</td>\n","      <td>12</td>\n","      <td>13</td>\n","      <td>11.5</td>\n","      <td>19</td>\n","      <td>28</td>\n","      <td>20</td>\n","      <td>0.605263</td>\n","      <td>0.662162</td>\n","      <td>9</td>\n","      <td>6.5</td>\n","      <td>16</td>\n","      <td>10</td>\n","      <td>10</td>\n","      <td>3.0</td>\n","      <td>13</td>\n","      <td>9</td>\n","      <td>9.5</td>\n","      <td>19</td>\n","      <td>25</td>\n","      <td>23</td>\n","      <td>0.500000</td>\n","      <td>0.541594</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>Vasco da Gama</td>\n","      <td>10</td>\n","      <td>7.0</td>\n","      <td>15</td>\n","      <td>14</td>\n","      <td>9</td>\n","      <td>2.0</td>\n","      <td>14</td>\n","      <td>6</td>\n","      <td>9.0</td>\n","      <td>19</td>\n","      <td>21</td>\n","      <td>28</td>\n","      <td>0.473684</td>\n","      <td>0.360000</td>\n","      <td>9</td>\n","      <td>5.5</td>\n","      <td>14</td>\n","      <td>10</td>\n","      <td>10</td>\n","      <td>3.5</td>\n","      <td>18</td>\n","      <td>8</td>\n","      <td>9.0</td>\n","      <td>19</td>\n","      <td>22</td>\n","      <td>28</td>\n","      <td>0.473684</td>\n","      <td>0.381703</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>Vitória</td>\n","      <td>10</td>\n","      <td>3.5</td>\n","      <td>12</td>\n","      <td>16</td>\n","      <td>9</td>\n","      <td>2.0</td>\n","      <td>16</td>\n","      <td>8</td>\n","      <td>5.5</td>\n","      <td>19</td>\n","      <td>20</td>\n","      <td>32</td>\n","      <td>0.289474</td>\n","      <td>0.280899</td>\n","      <td>9</td>\n","      <td>6.0</td>\n","      <td>11</td>\n","      <td>7</td>\n","      <td>10</td>\n","      <td>5.5</td>\n","      <td>13</td>\n","      <td>14</td>\n","      <td>11.5</td>\n","      <td>19</td>\n","      <td>25</td>\n","      <td>20</td>\n","      <td>0.605263</td>\n","      <td>0.609756</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>20 rows × 29 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-fa08ebc1-38cf-4de4-87a0-8d75717455f7')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-fa08ebc1-38cf-4de4-87a0-8d75717455f7 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-fa08ebc1-38cf-4de4-87a0-8d75717455f7');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-a60693f9-1db7-47b9-8193-049f1d75676a\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a60693f9-1db7-47b9-8193-049f1d75676a')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-a60693f9-1db7-47b9-8193-049f1d75676a button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_bac403ee-1ec1-4970-8f0b-691aa92c165c\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('Bra')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_bac403ee-1ec1-4970-8f0b-691aa92c165c button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('Bra');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"Bra"}},"metadata":{},"execution_count":17}]},{"cell_type":"code","source":["rename_dict = {\n","    'pyth_x': 'pythagorean_x',\n","    'wpc_x': 'win_percentage_x',\n","    'pyth_y': 'pythagorean_y',\n","    'wpc_y': 'win_percentage_y'\n","}\n","\n","# Aplicando a renomeação\n","Bra.rename(columns=rename_dict, inplace=True)"],"metadata":{"id":"zsu7Vwmabkw7","executionInfo":{"status":"ok","timestamp":1737841669942,"user_tz":180,"elapsed":15,"user":{"displayName":"Lucas Calmon","userId":"09752934338034803828"}}},"execution_count":18,"outputs":[]},{"cell_type":"code","source":["!pip install adjustText"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"8wlNaOCVb741","executionInfo":{"status":"ok","timestamp":1737841697301,"user_tz":180,"elapsed":3072,"user":{"displayName":"Lucas Calmon","userId":"09752934338034803828"}},"outputId":"583b3054-32f2-4042-b769-4dc5295a7bb2"},"execution_count":20,"outputs":[{"output_type":"stream","name":"stdout","text":["Collecting adjustText\n","  Downloading adjustText-1.3.0-py3-none-any.whl.metadata (3.1 kB)\n","Requirement already satisfied: numpy in /usr/local/lib/python3.11/dist-packages (from adjustText) (1.26.4)\n","Requirement already satisfied: matplotlib in /usr/local/lib/python3.11/dist-packages (from adjustText) (3.10.0)\n","Requirement already satisfied: scipy in /usr/local/lib/python3.11/dist-packages (from adjustText) (1.13.1)\n","Requirement already satisfied: contourpy>=1.0.1 in /usr/local/lib/python3.11/dist-packages (from matplotlib->adjustText) (1.3.1)\n","Requirement already satisfied: cycler>=0.10 in /usr/local/lib/python3.11/dist-packages (from matplotlib->adjustText) (0.12.1)\n","Requirement already satisfied: fonttools>=4.22.0 in /usr/local/lib/python3.11/dist-packages (from matplotlib->adjustText) (4.55.4)\n","Requirement already satisfied: kiwisolver>=1.3.1 in /usr/local/lib/python3.11/dist-packages (from matplotlib->adjustText) (1.4.8)\n","Requirement already satisfied: packaging>=20.0 in /usr/local/lib/python3.11/dist-packages (from matplotlib->adjustText) (24.2)\n","Requirement already satisfied: pillow>=8 in /usr/local/lib/python3.11/dist-packages (from matplotlib->adjustText) (11.1.0)\n","Requirement already satisfied: pyparsing>=2.3.1 in /usr/local/lib/python3.11/dist-packages (from matplotlib->adjustText) (3.2.1)\n","Requirement already satisfied: python-dateutil>=2.7 in /usr/local/lib/python3.11/dist-packages (from matplotlib->adjustText) (2.8.2)\n","Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.11/dist-packages (from python-dateutil>=2.7->matplotlib->adjustText) (1.17.0)\n","Downloading adjustText-1.3.0-py3-none-any.whl (13 kB)\n","Installing collected packages: adjustText\n","Successfully installed adjustText-1.3.0\n"]}]},{"cell_type":"code","source":["import matplotlib.pyplot as plt\n","import seaborn as sns\n","from adjustText import adjust_text\n","\n","# Configuração da figura e do fundo\n","plt.figure(figsize=(8, 6), facecolor=\"#EEE9E4\")\n","ax = plt.axes()\n","ax.set_facecolor(\"#EEE9E4\")\n","\n","# Regressão com cores ajustadas\n","sns.regplot(\n","    x=\"win_percentage_x\",\n","    y=\"win_percentage_y\",\n","    data=Bra,\n","    ci=None,\n","    ax=ax,\n","    scatter_kws={'color': '#1E2836'},  # Cor das bolinhas\n","    line_kws={'color': '#1E2836'}      # Cor da linha de regressão\n",")\n","\n","# Adiciona os textos\n","texts = []\n","for i, row in Bra.iterrows():\n","    texts.append(plt.text(row[\"win_percentage_x\"], row[\"win_percentage_y\"], row[\"time\"],\n","                          fontsize=9, color=\"#1E2836\"))  # Cor do texto\n","\n","# Ajusta os textos para evitar sobreposição\n","adjust_text(texts, arrowprops=dict(arrowstyle=\"->\", color='gray', lw=0.5))\n","\n","plt.show()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":542},"id":"rYLpz-NlOEUX","executionInfo":{"status":"ok","timestamp":1737842106934,"user_tz":180,"elapsed":1400,"user":{"displayName":"Lucas Calmon","userId":"09752934338034803828"}},"outputId":"f5b84999-b72a-45c2-9ee6-22b1a2008b61"},"execution_count":26,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 800x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["sns.regplot(x=\"pythagorean_x\", y = \"win_percentage_y\", data = Bra, ci=None)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":467},"id":"6jw0SswjOF0n","executionInfo":{"status":"ok","timestamp":1737842264802,"user_tz":180,"elapsed":687,"user":{"displayName":"Lucas Calmon","userId":"09752934338034803828"}},"outputId":"c58e45aa-62af-4256-bb2a-90b033672188"},"execution_count":27,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: xlabel='pythagorean_x', ylabel='win_percentage_y'>"]},"metadata":{},"execution_count":27},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["dd = Bra.loc[:,['pythagorean_x', 'win_percentage_x', 'pythagorean_y', 'win_percentage_y']]\n","dd"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"nX4YLFsOOHUI","executionInfo":{"status":"ok","timestamp":1737842265058,"user_tz":180,"elapsed":5,"user":{"displayName":"Lucas Calmon","userId":"09752934338034803828"}},"outputId":"d0c5ed70-5a1b-4346-d3a6-02e5f36454dc"},"execution_count":28,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    pythagorean_x  win_percentage_x  pythagorean_y  win_percentage_y\n","0        0.576471          0.526316       0.315284          0.289474\n","1        0.233364          0.263158       0.167327          0.342105\n","2        0.500000          0.552632       0.354296          0.394737\n","3        0.597106          0.578947       0.394808          0.421053\n","4        0.789647          0.736842       0.822665          0.736842\n","..            ...               ...            ...               ...\n","15       0.788108          0.657895       0.751034          0.684211\n","16       0.521267          0.500000       0.390244          0.394737\n","17       0.662162          0.605263       0.541594          0.500000\n","18       0.360000          0.473684       0.381703          0.473684\n","19       0.280899          0.289474       0.609756          0.605263\n","\n","[20 rows x 4 columns]"],"text/html":["\n","  <div id=\"df-6def89f2-ce10-4feb-9758-1ef314987f01\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>pythagorean_x</th>\n","      <th>win_percentage_x</th>\n","      <th>pythagorean_y</th>\n","      <th>win_percentage_y</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0.576471</td>\n","      <td>0.526316</td>\n","      <td>0.315284</td>\n","      <td>0.289474</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0.233364</td>\n","      <td>0.263158</td>\n","      <td>0.167327</td>\n","      <td>0.342105</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0.500000</td>\n","      <td>0.552632</td>\n","      <td>0.354296</td>\n","      <td>0.394737</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0.597106</td>\n","      <td>0.578947</td>\n","      <td>0.394808</td>\n","      <td>0.421053</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0.789647</td>\n","      <td>0.736842</td>\n","      <td>0.822665</td>\n","      <td>0.736842</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>0.788108</td>\n","      <td>0.657895</td>\n","      <td>0.751034</td>\n","      <td>0.684211</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>0.521267</td>\n","      <td>0.500000</td>\n","      <td>0.390244</td>\n","      <td>0.394737</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>0.662162</td>\n","      <td>0.605263</td>\n","      <td>0.541594</td>\n","      <td>0.500000</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>0.360000</td>\n","      <td>0.473684</td>\n","      <td>0.381703</td>\n","      <td>0.473684</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>0.280899</td>\n","      <td>0.289474</td>\n","      <td>0.609756</td>\n","      <td>0.605263</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>20 rows × 4 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6def89f2-ce10-4feb-9758-1ef314987f01')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-6def89f2-ce10-4feb-9758-1ef314987f01 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-6def89f2-ce10-4feb-9758-1ef314987f01');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-041a520b-0cc9-44a8-8507-1381bf52af4e\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-041a520b-0cc9-44a8-8507-1381bf52af4e')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-041a520b-0cc9-44a8-8507-1381bf52af4e button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_def40eab-58bc-4c1e-89a0-09cd7447e55c\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('dd')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_def40eab-58bc-4c1e-89a0-09cd7447e55c button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('dd');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"dd","summary":"{\n  \"name\": \"dd\",\n  \"rows\": 20,\n  \"fields\": [\n    {\n      \"column\": \"pythagorean_x\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.17466865576027804,\n        \"min\": 0.2333637192342753,\n        \"max\": 0.7896466721446179,\n        \"num_unique_values\": 19,\n        \"samples\": [\n          0.5764705882352941,\n          0.3161925601750547,\n          0.5901639344262295\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"win_percentage_x\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.14132854314486534,\n        \"min\": 0.2631578947368421,\n        \"max\": 0.7368421052631579,\n        \"num_unique_values\": 16,\n        \"samples\": [\n          0.5263157894736842,\n          0.2631578947368421,\n          0.39473684210526316\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"pythagorean_y\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.21052663797762322,\n        \"min\": 0.15181932245922208,\n        \"max\": 0.8226652675760755,\n        \"num_unique_values\": 19,\n        \"samples\": [\n          0.31528384279475985,\n          0.7738835500282646,\n          0.699667221297837\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"win_percentage_y\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.14984075718890327,\n        \"min\": 0.2631578947368421,\n        \"max\": 0.7368421052631579,\n        \"num_unique_values\": 14,\n        \"samples\": [\n          0.6578947368421053,\n          0.4473684210526316,\n          0.2894736842105263\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":28}]},{"cell_type":"code","source":["cor_matrix = dd.corr()\n","\n","# View the correlation matrix\n","cor_matrix"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":175},"id":"dBbarJ-gOJYE","executionInfo":{"status":"ok","timestamp":1737842268003,"user_tz":180,"elapsed":225,"user":{"displayName":"Lucas Calmon","userId":"09752934338034803828"}},"outputId":"1b2a6d1c-4b05-4423-d485-254f3c397a5a"},"execution_count":29,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                  pythagorean_x  win_percentage_x  pythagorean_y  \\\n","pythagorean_x          1.000000          0.962108       0.355813   \n","win_percentage_x       0.962108          1.000000       0.382784   \n","pythagorean_y          0.355813          0.382784       1.000000   \n","win_percentage_y       0.260383          0.299481       0.972576   \n","\n","                  win_percentage_y  \n","pythagorean_x             0.260383  \n","win_percentage_x          0.299481  \n","pythagorean_y             0.972576  \n","win_percentage_y          1.000000  "],"text/html":["\n","  <div id=\"df-5d7db152-10f2-4d02-8da1-5c4728f17ea7\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>pythagorean_x</th>\n","      <th>win_percentage_x</th>\n","      <th>pythagorean_y</th>\n","      <th>win_percentage_y</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>pythagorean_x</th>\n","      <td>1.000000</td>\n","      <td>0.962108</td>\n","      <td>0.355813</td>\n","      <td>0.260383</td>\n","    </tr>\n","    <tr>\n","      <th>win_percentage_x</th>\n","      <td>0.962108</td>\n","      <td>1.000000</td>\n","      <td>0.382784</td>\n","      <td>0.299481</td>\n","    </tr>\n","    <tr>\n","      <th>pythagorean_y</th>\n","      <td>0.355813</td>\n","      <td>0.382784</td>\n","      <td>1.000000</td>\n","      <td>0.972576</td>\n","    </tr>\n","    <tr>\n","      <th>win_percentage_y</th>\n","      <td>0.260383</td>\n","      <td>0.299481</td>\n","      <td>0.972576</td>\n","      <td>1.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5d7db152-10f2-4d02-8da1-5c4728f17ea7')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-5d7db152-10f2-4d02-8da1-5c4728f17ea7 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-5d7db152-10f2-4d02-8da1-5c4728f17ea7');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-745a5aab-307a-423d-a4c1-cbc9c7cc2176\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-745a5aab-307a-423d-a4c1-cbc9c7cc2176')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-745a5aab-307a-423d-a4c1-cbc9c7cc2176 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_def81a9e-0205-463e-85ab-165c7a4165c9\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('cor_matrix')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_def81a9e-0205-463e-85ab-165c7a4165c9 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('cor_matrix');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"cor_matrix","summary":"{\n  \"name\": \"cor_matrix\",\n  \"rows\": 4,\n  \"fields\": [\n    {\n      \"column\": \"pythagorean_x\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.3907858445601535,\n        \"min\": 0.26038300879070925,\n        \"max\": 1.0,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          0.9621078116835053,\n          0.26038300879070925,\n          1.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"win_percentage_x\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.37134310292368894,\n        \"min\": 0.2994805437344094,\n        \"max\": 1.0,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          1.0,\n          0.2994805437344094,\n          0.9621078116835053\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"pythagorean_y\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.3565646856625459,\n        \"min\": 0.3558134622212119,\n        \"max\": 1.0,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          0.38278442981423544,\n          0.9725757930957117,\n          0.3558134622212119\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"win_percentage_y\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.408280671779434,\n        \"min\": 0.26038300879070925,\n        \"max\": 1.0,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          0.2994805437344094,\n          1.0,\n          0.26038300879070925\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":29}]}]}